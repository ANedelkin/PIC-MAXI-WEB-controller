

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Sep 12 16:12:43 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F97J60
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    80                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    81   000000                     
    82                           ; Generated 23/03/2023 GMT
    83                           ; 
    84                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution. Publication is not required when
    98                           ;        this file is used in an embedded application.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC18F97J60 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116   000000                     
   117                           	psect	idataCOMRAM
   118   00252A                     __pidataCOMRAM:
   119                           	callstack 0
   120                           
   121                           ;initializer for _LCD_isCursorMoving
   122   00252A  0001               	dw	1
   123                           
   124                           ;initializer for _LCD_isCursorOn
   125   00252C  0001               	dw	1
   126                           
   127                           ;initializer for _LCD_isDisplayOn
   128   00252E  0001               	dw	1
   129                           
   130                           ;initializer for _LCD_isIncrement
   131   002530  0001               	dw	1
   132                           
   133                           ;initializer for _LCD_posY
   134   002532  0001               	dw	1
   135                           
   136                           ;initializer for _LCD_posX
   137   002534  0001               	dw	1
   138   000000                     _ADCON0	set	4034
   139   000000                     _ADRESL	set	4035
   140   000000                     _RCONbits	set	4048
   141   000000                     _RCREG1	set	4014
   142   000000                     _TXREG1	set	4013
   143   000000                     _SPBRG1	set	4015
   144   000000                     _TXSTA1	set	4012
   145   000000                     _PORTJbits	set	3976
   146   000000                     _TRISJ	set	3994
   147   000000                     _TRISD	set	3989
   148   000000                     _TRISC	set	3988
   149   000000                     _TRISB	set	3987
   150   000000                     _TRISA	set	3986
   151   000000                     _TRISF	set	3991
   152   000000                     _LATH	set	3984
   153   000000                     _LATC	set	3979
   154   000000                     _LATG	set	3983
   155   000000                     _LATB	set	3978
   156   000000                     _LATF	set	3982
   157   000000                     _LATA	set	3977
   158   000000                     _LATD	set	3980
   159   000000                     _LATJ	set	3985
   160   000000                     _LATE	set	3981
   161   000000                     _OSCTUNE	set	3995
   162   000000                     _OSCCON	set	4051
   163   000000                     _TRISHbits	set	3993
   164   000000                     _TRISGbits	set	3992
   165                           
   166                           	psect	nvCOMRAM
   167   000053                     __pnvCOMRAM:
   168                           	callstack 0
   169   000053                     _EUSART1_RxDefaultInterruptHandler:
   170                           	callstack 0
   171   000053                     	ds	3
   172                           
   173                           	psect	nvBANK0
   174   0000E7                     __pnvBANK0:
   175                           	callstack 0
   176   0000E7                     _EUSART1_ErrorHandler:
   177                           	callstack 0
   178   0000E7                     	ds	3
   179   0000EA                     _EUSART1_OverrunErrorHandler:
   180                           	callstack 0
   181   0000EA                     	ds	3
   182   0000ED                     _EUSART1_FramingErrorHandler:
   183                           	callstack 0
   184   0000ED                     	ds	3
   185   000000                     _ADCON0bits	set	4034
   186   000000                     _ADCON1	set	4033
   187   000000                     _RCSTA1bits	set	4011
   188   000000                     _TXSTA1bits	set	4012
   189   000000                     _TRISH	set	3993
   190   000000                     _TRISG	set	3992
   191   000000                     _PORTE	set	3972
   192   000000                     _BAUDCON1	set	3966
   193   000000                     _PORTEbits	set	3972
   194   000000                     _PORTHbits	set	3975
   195   000000                     _TRISE	set	3990
   196   000000                     _PORTGbits	set	3974
   197   000000                     _INTCONbits	set	4082
   198   000000                     _PIE1bits	set	3997
   199   000000                     _ADCON1bits	set	4033
   200   000000                     _PIR1bits	set	3998
   201   000000                     _RCSTA1	set	4011
   202   000000                     _PORTBbits	set	3969
   203   000000                     _SPBRGH1	set	3967
   204   000000                     _ADCON2	set	4032
   205   000000                     _ADRESH	set	4036
   206                           
   207                           	psect	smallconst
   208   001000                     __psmallconst:
   209                           	callstack 0
   210   001000  00                 	db	0
   211   001001                     STR_1:
   212   001001  25                 	db	37
   213   001002  64                 	db	100	;'d'
   214   001003  00                 	db	0
   215   001004  00                 	db	0	; dummy byte at the end
   216   000000                     
   217                           ; #config settings
   218                           
   219                           	psect	cinit
   220   001FDE                     __pcinit:
   221                           	callstack 0
   222   001FDE                     start_initialization:
   223                           	callstack 0
   224   001FDE                     __initialization:
   225                           	callstack 0
   226                           
   227                           ; Initialize objects allocated to COMRAM (12 bytes)
   228                           ; load TBLPTR registers with __pidataCOMRAM
   229   001FDE  0E2A               	movlw	low __pidataCOMRAM
   230   001FE0  6EF6               	movwf	tblptrl,c
   231   001FE2  0E25               	movlw	high __pidataCOMRAM
   232   001FE4  6EF7               	movwf	tblptrh,c
   233   001FE6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   234   001FE8  6EF8               	movwf	tblptru,c
   235   001FEA  EE00  F047         	lfsr	0,__pdataCOMRAM
   236   001FEE  EE10 F00C          	lfsr	1,12
   237   001FF2                     copy_data0:
   238   001FF2  0009               	tblrd		*+
   239   001FF4  CFF5 FFEE          	movff	tablat,postinc0
   240   001FF8  50E5               	movf	postdec1,w,c
   241   001FFA  50E1               	movf	fsr1l,w,c
   242   001FFC  E1FA               	bnz	copy_data0
   243                           
   244                           ; Clear objects allocated to BANK1 (32 bytes)
   245   001FFE  EE01  F000         	lfsr	0,__pbssBANK1
   246   002002  0E20               	movlw	32
   247   002004                     clear_0:
   248   002004  6AEE               	clrf	postinc0,c
   249   002006  06E8               	decf	wreg,f,c
   250   002008  E1FD               	bnz	clear_0
   251                           
   252                           ; Clear objects allocated to BANK0 (40 bytes)
   253   00200A  EE00  F0BF         	lfsr	0,__pbssBANK0
   254   00200E  0E28               	movlw	40
   255   002010                     clear_1:
   256   002010  6AEE               	clrf	postinc0,c
   257   002012  06E8               	decf	wreg,f,c
   258   002014  E1FD               	bnz	clear_1
   259                           
   260                           ; Clear objects allocated to COMRAM (27 bytes)
   261   002016  EE00  F02C         	lfsr	0,__pbssCOMRAM
   262   00201A  0E1B               	movlw	27
   263   00201C                     clear_2:
   264   00201C  6AEE               	clrf	postinc0,c
   265   00201E  06E8               	decf	wreg,f,c
   266   002020  E1FD               	bnz	clear_2
   267   002022                     end_of_initialization:
   268                           	callstack 0
   269   002022                     __end_of__initialization:
   270                           	callstack 0
   271   002022  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   272   002024  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   273   002026  0100               	movlb	0
   274   002028  EFDF  F00A         	goto	_main	;jump to C main() function
   275                           
   276                           	psect	bssCOMRAM
   277   00002C                     __pbssCOMRAM:
   278                           	callstack 0
   279   00002C                     _eusart1RxStatusBuffer:
   280                           	callstack 0
   281   00002C                     	ds	8
   282   000034                     _eusart1RxBuffer:
   283                           	callstack 0
   284   000034                     	ds	8
   285   00003C                     _ADC_InterruptHandler:
   286                           	callstack 0
   287   00003C                     	ds	3
   288   00003F                     _LCD_isCursorBlinking:
   289                           	callstack 0
   290   00003F                     	ds	2
   291   000041                     _LCD_isShift:
   292                           	callstack 0
   293   000041                     	ds	2
   294   000043                     _eusart1RxLastError:
   295                           	callstack 0
   296   000043                     	ds	1
   297   000044                     _eusart1RxCount:
   298                           	callstack 0
   299   000044                     	ds	1
   300   000045                     _eusart1RxTail:
   301                           	callstack 0
   302   000045                     	ds	1
   303   000046                     _eusart1RxHead:
   304                           	callstack 0
   305   000046                     	ds	1
   306                           
   307                           	psect	dataCOMRAM
   308   000047                     __pdataCOMRAM:
   309                           	callstack 0
   310   000047                     _LCD_isCursorMoving:
   311                           	callstack 0
   312   000047                     	ds	2
   313   000049                     _LCD_isCursorOn:
   314                           	callstack 0
   315   000049                     	ds	2
   316   00004B                     _LCD_isDisplayOn:
   317                           	callstack 0
   318   00004B                     	ds	2
   319   00004D                     _LCD_isIncrement:
   320                           	callstack 0
   321   00004D                     	ds	2
   322   00004F                     _LCD_posY:
   323                           	callstack 0
   324   00004F                     	ds	2
   325   000051                     _LCD_posX:
   326                           	callstack 0
   327   000051                     	ds	2
   328                           
   329                           	psect	bssBANK0
   330   0000BF                     __pbssBANK0:
   331                           	callstack 0
   332   0000BF                     _width:
   333                           	callstack 0
   334   0000BF                     	ds	2
   335   0000C1                     _prec:
   336                           	callstack 0
   337   0000C1                     	ds	2
   338   0000C3                     _flags:
   339                           	callstack 0
   340   0000C3                     	ds	1
   341   0000C4                     _command:
   342                           	callstack 0
   343   0000C4                     	ds	35
   344                           
   345                           	psect	bssBANK1
   346   000100                     __pbssBANK1:
   347                           	callstack 0
   348   000100                     _dbuf:
   349                           	callstack 0
   350   000100                     	ds	32
   351                           
   352                           	psect	cstackBANK0
   353   000060                     __pcstackBANK0:
   354                           	callstack 0
   355   000060                     ?_strlen:
   356                           	callstack 0
   357   000060                     ?_ADC_GetConversion:
   358                           	callstack 0
   359   000060                     ?___awdiv:
   360                           	callstack 0
   361   000060                     ?___awmod:
   362                           	callstack 0
   363   000060                     EUSART1_Write@txData:
   364                           	callstack 0
   365   000060                     ___delay@time:
   366                           	callstack 0
   367   000060                     __delay_us@us:
   368                           	callstack 0
   369   000060                     __delay_ms@ms:
   370                           	callstack 0
   371   000060                     LCD_8bitCodeNoWait@code:
   372                           	callstack 0
   373   000060                     LCD_4bitCodeNoWait@code:
   374                           	callstack 0
   375   000060                     ___awdiv@dividend:
   376                           	callstack 0
   377   000060                     ___awmod@dividend:
   378                           	callstack 0
   379   000060                     fputc@c:
   380                           	callstack 0
   381   000060                     strlen@s:
   382                           	callstack 0
   383   000060                     EUSART1_SetFramingErrorHandler@interruptHandler:
   384                           	callstack 0
   385   000060                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   386                           	callstack 0
   387   000060                     EUSART1_SetErrorHandler@interruptHandler:
   388                           	callstack 0
   389   000060                     EUSART1_SetRxInterruptHandler@interruptHandler:
   390                           	callstack 0
   391                           
   392                           ; 3 bytes @ 0x0
   393   000060                     	ds	2
   394   000062                     ??_ADC_GetConversion:
   395   000062                     ??___delay:
   396   000062                     ??__delay_us:
   397   000062                     ??__delay_ms:
   398   000062                     ??_LCD_8bitCodeNoWait:
   399   000062                     ??_LCD_4bitCodeNoWait:
   400   000062                     ___awdiv@divisor:
   401                           	callstack 0
   402   000062                     ___awmod@divisor:
   403                           	callstack 0
   404   000062                     fputc@fp:
   405                           	callstack 0
   406   000062                     strlen@a:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x2
   410   000062                     	ds	1
   411   000063                     ___delay@i:
   412                           	callstack 0
   413   000063                     __delay_us@i:
   414                           	callstack 0
   415   000063                     __delay_ms@i:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x3
   419   000063                     	ds	1
   420   000064                     ??_fputc:
   421   000064                     ADC_GetConversion@channel:
   422                           	callstack 0
   423   000064                     ___awdiv@counter:
   424                           	callstack 0
   425   000064                     ___awmod@counter:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0x4
   429   000064                     	ds	1
   430   000065                     ___awdiv@sign:
   431                           	callstack 0
   432   000065                     ___awmod@sign:
   433                           	callstack 0
   434   000065                     LCD_8bitCode@code:
   435                           	callstack 0
   436   000065                     LCD_4bitCode@code:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x5
   440   000065                     	ds	1
   441   000066                     ?_abs:
   442                           	callstack 0
   443   000066                     ___awdiv@quotient:
   444                           	callstack 0
   445   000066                     abs@a:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x6
   449   000066                     	ds	1
   450   000067                     LCD_Code@code:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x7
   454   000067                     	ds	1
   455   000068                     ??_abs:
   456                           
   457                           ; 1 bytes @ 0x8
   458   000068                     	ds	1
   459   000069                     LCD_SetCursorAt@pos:
   460                           	callstack 0
   461   000069                     fputs@s:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x9
   465   000069                     	ds	2
   466   00006B                     LCD_SetCursorAt@row:
   467                           	callstack 0
   468   00006B                     fputs@fp:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0xB
   472   00006B                     	ds	2
   473   00006D                     ??_LCD_SetCursorAt:
   474   00006D                     fputs@c:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0xD
   478   00006D                     	ds	1
   479   00006E                     fputs@i:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0xE
   483   00006E                     	ds	1
   484   00006F                     ??_LCD_Init:
   485                           
   486                           ; 1 bytes @ 0xF
   487   00006F                     	ds	1
   488   000070                     pad@fp:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x10
   492   000070                     	ds	2
   493   000072                     pad@buf:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x12
   497   000072                     	ds	2
   498   000074                     pad@p:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x14
   502   000074                     	ds	2
   503   000076                     ??_pad:
   504                           
   505                           ; 1 bytes @ 0x16
   506   000076                     	ds	1
   507   000077                     pad@i:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x17
   511   000077                     	ds	2
   512   000079                     pad@w:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x19
   516   000079                     	ds	2
   517   00007B                     dtoa@fp:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x1B
   521   00007B                     	ds	2
   522   00007D                     dtoa@d:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x1D
   526   00007D                     	ds	2
   527   00007F                     _dtoa$2026:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x1F
   531   00007F                     	ds	2
   532   000081                     dtoa@p:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x21
   536   000081                     	ds	2
   537   000083                     dtoa@w:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x23
   541   000083                     	ds	2
   542   000085                     dtoa@s:
   543                           	callstack 0
   544                           
   545                           ; 1 bytes @ 0x25
   546   000085                     	ds	1
   547   000086                     dtoa@i:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x26
   551   000086                     	ds	2
   552   000088                     vfpfcnvrt@fp:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x28
   556   000088                     	ds	2
   557   00008A                     vfpfcnvrt@fmt:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x2A
   561   00008A                     	ds	2
   562   00008C                     vfpfcnvrt@ap:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x2C
   566   00008C                     	ds	2
   567   00008E                     ??_vfpfcnvrt:
   568                           
   569                           ; 1 bytes @ 0x2E
   570   00008E                     	ds	2
   571   000090                     vfpfcnvrt@convarg:
   572                           	callstack 0
   573                           
   574                           ; 4 bytes @ 0x30
   575   000090                     	ds	4
   576   000094                     vfpfcnvrt@cp:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x34
   580   000094                     	ds	2
   581   000096                     ?_vfprintf:
   582                           	callstack 0
   583   000096                     vfprintf@fp:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x36
   587   000096                     	ds	2
   588   000098                     vfprintf@fmt:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x38
   592   000098                     	ds	2
   593   00009A                     vfprintf@ap:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x3A
   597   00009A                     	ds	2
   598   00009C                     vfprintf@cfmt:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x3C
   602   00009C                     	ds	2
   603   00009E                     ?_sprintf:
   604                           	callstack 0
   605   00009E                     sprintf@s:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x3E
   609   00009E                     	ds	2
   610   0000A0                     sprintf@fmt:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x40
   614   0000A0                     	ds	6
   615   0000A6                     sprintf@ap:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x46
   619   0000A6                     	ds	2
   620   0000A8                     sprintf@f:
   621                           	callstack 0
   622                           
   623                           ; 12 bytes @ 0x48
   624   0000A8                     	ds	12
   625   0000B4                     ??_main:
   626                           
   627                           ; 1 bytes @ 0x54
   628   0000B4                     	ds	3
   629   0000B7                     main@potValue:
   630                           	callstack 0
   631                           
   632                           ; 5 bytes @ 0x57
   633   0000B7                     	ds	5
   634   0000BC                     main@len:
   635                           	callstack 0
   636                           
   637                           ; 1 bytes @ 0x5C
   638   0000BC                     	ds	1
   639   0000BD                     main@i:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x5D
   643   0000BD                     	ds	2
   644                           
   645                           	psect	cstackCOMRAM
   646   000001                     __pcstackCOMRAM:
   647                           	callstack 0
   648   000001                     ?i2_strlen:
   649                           	callstack 0
   650   000001                     EUSART1_Read@readValue:
   651                           	callstack 0
   652   000001                     i2___delay@time:
   653                           	callstack 0
   654   000001                     i2__delay_us@us:
   655                           	callstack 0
   656   000001                     i2__delay_ms@ms:
   657                           	callstack 0
   658   000001                     i2LCD_8bitCodeNoWait@code:
   659                           	callstack 0
   660   000001                     i2LCD_4bitCodeNoWait@code:
   661                           	callstack 0
   662   000001                     i2strlen@s:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x0
   666   000001                     	ds	2
   667   000003                     ??i2___delay:
   668   000003                     ??i2__delay_us:
   669   000003                     ??i2__delay_ms:
   670   000003                     ??i2_LCD_8bitCodeNoWait:
   671   000003                     ??i2_LCD_4bitCodeNoWait:
   672   000003                     i2strlen@a:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x2
   676   000003                     	ds	1
   677   000004                     i2___delay@i:
   678                           	callstack 0
   679   000004                     i2__delay_us@i:
   680                           	callstack 0
   681   000004                     i2__delay_ms@i:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0x3
   685   000004                     	ds	2
   686   000006                     i2LCD_8bitCode@code:
   687                           	callstack 0
   688   000006                     i2LCD_4bitCode@code:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x5
   692   000006                     	ds	2
   693   000008                     i2LCD_Code@code:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x7
   697   000008                     	ds	2
   698   00000A                     i2LCD_SetCursorAt@pos:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x9
   702   00000A                     	ds	2
   703   00000C                     i2LCD_SetCursorAt@row:
   704                           	callstack 0
   705                           
   706                           ; 2 bytes @ 0xB
   707   00000C                     	ds	2
   708   00000E                     ??i2_LCD_SetCursorAt:
   709                           
   710                           ; 1 bytes @ 0xD
   711   00000E                     	ds	2
   712   000010                     LCD_MoveCursorLeft@howMuch:
   713                           	callstack 0
   714   000010                     LCD_MoveCursorRight@howMuch:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0xF
   718   000010                     	ds	2
   719   000012                     ??_LCD_MoveCursorLeft:
   720   000012                     ??_LCD_MoveCursorRight:
   721                           
   722                           ; 1 bytes @ 0x11
   723   000012                     	ds	2
   724   000014                     LCD_PrintChar@inputChar:
   725                           	callstack 0
   726                           
   727                           ; 1 bytes @ 0x13
   728   000014                     	ds	1
   729   000015                     LCD_PrintStr@str:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x14
   733   000015                     	ds	2
   734   000017                     
   735                           ; 1 bytes @ 0x16
   736   000017                     	ds	1
   737   000018                     LCD_PrintStr@initialX:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x17
   741   000018                     	ds	2
   742   00001A                     LCD_PrintStr@initialY:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x19
   746   00001A                     	ds	2
   747   00001C                     LCD_PrintStr@i:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x1B
   751   00001C                     	ds	2
   752   00001E                     ??_PrintOnScreen:
   753                           
   754                           ; 1 bytes @ 0x1D
   755   00001E                     	ds	2
   756   000020                     PrintOnScreen@len:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0x1F
   760   000020                     	ds	2
   761   000022                     PrintOnScreen@received:
   762                           	callstack 0
   763                           
   764                           ; 1 bytes @ 0x21
   765   000022                     	ds	1
   766   000023                     PrintOnScreen@length:
   767                           	callstack 0
   768                           
   769                           ; 1 bytes @ 0x22
   770   000023                     	ds	1
   771   000024                     PrintOnScreen@i:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x23
   775   000024                     	ds	2
   776   000026                     ??_INTERRUPT_InterruptManager:
   777                           
   778                           ; 1 bytes @ 0x25
   779   000026                     	ds	6
   780                           
   781 ;;
   782 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   783 ;;
   784 ;; *************** function _main *****************
   785 ;; Defined at:
   786 ;;		line 51 in file "main.c"
   787 ;; Parameters:    Size  Location     Type
   788 ;;		None
   789 ;; Auto vars:     Size  Location     Type
   790 ;;  i               2   93[BANK0 ] int 
   791 ;;  potValue        5   87[BANK0 ] unsigned char [5]
   792 ;;  len             1   92[BANK0 ] unsigned char 
   793 ;; Return value:  Size  Location     Type
   794 ;;                  1    wreg      void 
   795 ;; Registers used:
   796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   797 ;; Tracked objects:
   798 ;;		On entry : 0/0
   799 ;;		On exit  : 0/0
   800 ;;		Unchanged: 0/0
   801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   803 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   804 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   805 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   806 ;;Total ram usage:       11 bytes
   807 ;; Hardware stack levels required when called: 18
   808 ;; This function calls:
   809 ;;		_ADC_GetConversion
   810 ;;		_EUSART1_Write
   811 ;;		_LCD_Init
   812 ;;		_SYSTEM_Initialize
   813 ;;		_sprintf
   814 ;;		_strlen
   815 ;; This function is called by:
   816 ;;		Startup code after reset
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text0
   821   0015BE                     __ptext0:
   822                           	callstack 0
   823   0015BE                     _main:
   824                           	callstack 13
   825   0015BE                     
   826                           ;main.c: 54:     SYSTEM_Initialize();
   827   0015BE  EC22  F012         	call	_SYSTEM_Initialize	;wreg free
   828                           
   829                           ;main.c: 55:     LCD_Init();
   830   0015C2  ECA6  F009         	call	_LCD_Init	;wreg free
   831   0015C6                     
   832                           ;main.c: 62:     (INTCONbits.GIE = 1);
   833   0015C6  8EF2               	bsf	242,7,c	;volatile
   834   0015C8                     
   835                           ;main.c: 68:     (INTCONbits.PEIE = 1);
   836   0015C8  8CF2               	bsf	242,6,c	;volatile
   837   0015CA                     
   838                           ;main.c: 72:     PORTGbits.RG5 = 1;
   839   0015CA  8A86               	bsf	134,5,c	;volatile
   840   0015CC                     l3840:
   841                           
   842                           ;main.c: 76:         EUSART1_Write(PORTBbits.RB3 + '0');
   843   0015CC  B681               	btfsc	129,3,c	;volatile
   844   0015CE  EFEB  F00A         	goto	u2921
   845   0015D2  EFEE  F00A         	goto	u2920
   846   0015D6                     u2921:
   847   0015D6  0E01               	movlw	1
   848   0015D8  EFEF  F00A         	goto	u2926
   849   0015DC                     u2920:
   850   0015DC  0E00               	movlw	0
   851   0015DE                     u2926:
   852   0015DE  0F30               	addlw	48
   853   0015E0  EC16  F012         	call	_EUSART1_Write
   854   0015E4                     
   855                           ;main.c: 77:         EUSART1_Write(' ');
   856   0015E4  0E20               	movlw	32
   857   0015E6  EC16  F012         	call	_EUSART1_Write
   858   0015EA                     
   859                           ;main.c: 78:         EUSART1_Write(PORTBbits.RB1 + '0');
   860   0015EA  B281               	btfsc	129,1,c	;volatile
   861   0015EC  EFFA  F00A         	goto	u2931
   862   0015F0  EFFD  F00A         	goto	u2930
   863   0015F4                     u2931:
   864   0015F4  0E01               	movlw	1
   865   0015F6  EFFE  F00A         	goto	u2936
   866   0015FA                     u2930:
   867   0015FA  0E00               	movlw	0
   868   0015FC                     u2936:
   869   0015FC  0F30               	addlw	48
   870   0015FE  EC16  F012         	call	_EUSART1_Write
   871                           
   872                           ;main.c: 79:         EUSART1_Write(' ');
   873   001602  0E20               	movlw	32
   874   001604  EC16  F012         	call	_EUSART1_Write
   875   001608                     
   876                           ;main.c: 80:         char potValue[5];;main.c: 81:         sprintf(potValue, "%d", ADC_G
      +                          etConversion(Potentiometer));
   877   001608  0EB7               	movlw	low main@potValue
   878   00160A  0100               	movlb	0	; () banked
   879   00160C  6F9E               	movwf	sprintf@s& (0+255),b
   880   00160E  0E00               	movlw	high main@potValue
   881   001610  6F9F               	movwf	(sprintf@s+1)& (0+255),b
   882   001612  0E01               	movlw	low STR_1
   883   001614  6FA0               	movwf	sprintf@fmt& (0+255),b
   884   001616  0E10               	movlw	high STR_1
   885   001618  6FA1               	movwf	(sprintf@fmt+1)& (0+255),b
   886   00161A  0E02               	movlw	2
   887   00161C  EC0B  F011         	call	_ADC_GetConversion
   888   001620  C060  F0A2         	movff	?_ADC_GetConversion,?_sprintf+4
   889   001624  C061  F0A3         	movff	?_ADC_GetConversion+1,?_sprintf+5
   890   001628  EC77  F00F         	call	_sprintf	;wreg free
   891   00162C                     
   892                           ;main.c: 82:         uint8_t len = strlen(potValue);
   893   00162C  0EB7               	movlw	low main@potValue
   894   00162E  0100               	movlb	0	; () banked
   895   001630  6F60               	movwf	strlen@s& (0+255),b
   896   001632  0E00               	movlw	high main@potValue
   897   001634  6F61               	movwf	(strlen@s+1)& (0+255),b
   898   001636  EC4B  F011         	call	_strlen	;wreg free
   899   00163A  0100               	movlb	0	; () banked
   900   00163C  5160               	movf	?_strlen& (0+255),w,b
   901   00163E  6FBC               	movwf	main@len& (0+255),b
   902   001640                     
   903                           ; BSR set to: 0
   904                           ;main.c: 83:         for(int i = 0; i < len; i++){
   905   001640  0E00               	movlw	0
   906   001642  6FBE               	movwf	(main@i+1)& (0+255),b
   907   001644  0E00               	movlw	0
   908   001646  6FBD               	movwf	main@i& (0+255),b
   909   001648  EF32  F00B         	goto	l3856
   910   00164C                     l3852:
   911                           
   912                           ; BSR set to: 0
   913                           ;main.c: 84:             EUSART1_Write(potValue[i]);
   914   00164C  0EB7               	movlw	low main@potValue
   915   00164E  25BD               	addwf	main@i& (0+255),w,b
   916   001650  6ED9               	movwf	fsr2l,c
   917   001652  0E00               	movlw	high main@potValue
   918   001654  21BE               	addwfc	(main@i+1)& (0+255),w,b
   919   001656  6EDA               	movwf	fsr2h,c
   920   001658  50DF               	movf	indf2,w,c
   921   00165A  EC16  F012         	call	_EUSART1_Write
   922   00165E                     
   923                           ;main.c: 85:         }
   924   00165E  0100               	movlb	0	; () banked
   925   001660  4BBD               	infsnz	main@i& (0+255),f,b
   926   001662  2BBE               	incf	(main@i+1)& (0+255),f,b
   927   001664                     l3856:
   928                           
   929                           ; BSR set to: 0
   930   001664  51BC               	movf	main@len& (0+255),w,b
   931   001666  6FB4               	movwf	??_main& (0+255),b
   932   001668  6BB5               	clrf	(??_main+1)& (0+255),b
   933   00166A  51B4               	movf	??_main& (0+255),w,b
   934   00166C  5DBD               	subwf	main@i& (0+255),w,b
   935   00166E  51BE               	movf	(main@i+1)& (0+255),w,b
   936   001670  0A80               	xorlw	128
   937   001672  6FB6               	movwf	(??_main+2)& (0+255),b
   938   001674  51B5               	movf	(??_main+1)& (0+255),w,b
   939   001676  0A80               	xorlw	128
   940   001678  59B6               	subwfb	(??_main+2)& (0+255),w,b
   941   00167A  A0D8               	btfss	status,0,c
   942   00167C  EF42  F00B         	goto	u2941
   943   001680  EF44  F00B         	goto	u2940
   944   001684                     u2941:
   945   001684  EF26  F00B         	goto	l3852
   946   001688                     u2940:
   947   001688                     
   948                           ; BSR set to: 0
   949                           ;main.c: 86:         EUSART1_Write(' ');
   950   001688  0E20               	movlw	32
   951   00168A  EC16  F012         	call	_EUSART1_Write
   952                           
   953                           ;main.c: 87:         EUSART1_Write(3);
   954   00168E  0E03               	movlw	3
   955   001690  EC16  F012         	call	_EUSART1_Write
   956   001694                     
   957                           ;main.c: 88:         _delay((unsigned long)((100)*(25000000/4000.0)));
   958   001694  0E04               	movlw	4
   959   001696  0100               	movlb	0	; () banked
   960   001698  6FB5               	movwf	(??_main+1)& (0+255),b
   961   00169A  0E2C               	movlw	44
   962   00169C  6FB4               	movwf	??_main& (0+255),b
   963   00169E  0EAB               	movlw	171
   964   0016A0                     u2957:
   965   0016A0  2EE8               	decfsz	wreg,f,c
   966   0016A2  D7FE               	bra	u2957
   967   0016A4  2FB4               	decfsz	??_main& (0+255),f,b
   968   0016A6  D7FC               	bra	u2957
   969   0016A8  2FB5               	decfsz	(??_main+1)& (0+255),f,b
   970   0016AA  D7FA               	bra	u2957
   971   0016AC  D000               	nop2	
   972   0016AE  EFE6  F00A         	goto	l3840
   973   0016B2  EF41  F000         	goto	start
   974   0016B6                     __end_of_main:
   975                           	callstack 0
   976                           
   977 ;; *************** function _strlen *****************
   978 ;; Defined at:
   979 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strlen.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;  s               2    0[BANK0 ] PTR const unsigned char 
   982 ;;		 -> main@potValue(5), command(35), LCD_PrintNum@strNumber(20), 
   983 ;; Auto vars:     Size  Location     Type
   984 ;;  a               2    2[BANK0 ] PTR const unsigned char 
   985 ;;		 -> main@potValue(5), command(35), LCD_PrintNum@strNumber(20), 
   986 ;; Return value:  Size  Location     Type
   987 ;;                  2    0[BANK0 ] unsigned int 
   988 ;; Registers used:
   989 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   995 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   996 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   998 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   999 ;;Total ram usage:        4 bytes
  1000 ;; Hardware stack levels used: 1
  1001 ;; Hardware stack levels required when called: 10
  1002 ;; This function calls:
  1003 ;;		Nothing
  1004 ;; This function is called by:
  1005 ;;		_main
  1006 ;;		_LCD_TypeStr
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           	psect	text1
  1011   002296                     __ptext1:
  1012                           	callstack 0
  1013   002296                     _strlen:
  1014                           	callstack 20
  1015   002296  C060  F062         	movff	strlen@s,strlen@a
  1016   00229A  C061  F063         	movff	strlen@s+1,strlen@a+1
  1017   00229E  EF54  F011         	goto	l3678
  1018   0022A2                     l3676:
  1019   0022A2  0100               	movlb	0	; () banked
  1020   0022A4  4B60               	infsnz	strlen@s& (0+255),f,b
  1021   0022A6  2B61               	incf	(strlen@s+1)& (0+255),f,b
  1022   0022A8                     l3678:
  1023   0022A8  C060  FFD9         	movff	strlen@s,fsr2l
  1024   0022AC  C061  FFDA         	movff	strlen@s+1,fsr2h
  1025   0022B0  50DF               	movf	indf2,w,c
  1026   0022B2  A4D8               	btfss	status,2,c
  1027   0022B4  EF5E  F011         	goto	u2741
  1028   0022B8  EF60  F011         	goto	u2740
  1029   0022BC                     u2741:
  1030   0022BC  EF51  F011         	goto	l3676
  1031   0022C0                     u2740:
  1032   0022C0  0100               	movlb	0	; () banked
  1033   0022C2  5162               	movf	strlen@a& (0+255),w,b
  1034   0022C4  5D60               	subwf	strlen@s& (0+255),w,b
  1035   0022C6  6F60               	movwf	?_strlen& (0+255),b
  1036   0022C8  5163               	movf	(strlen@a+1)& (0+255),w,b
  1037   0022CA  5961               	subwfb	(strlen@s+1)& (0+255),w,b
  1038   0022CC  6F61               	movwf	(?_strlen+1)& (0+255),b
  1039   0022CE                     
  1040                           ; BSR set to: 0
  1041   0022CE  0012               	return		;funcret
  1042   0022D0                     __end_of_strlen:
  1043                           	callstack 0
  1044                           
  1045 ;; *************** function _sprintf *****************
  1046 ;; Defined at:
  1047 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;  s               2   62[BANK0 ] PTR unsigned char 
  1050 ;;		 -> main@potValue(5), LCD_PrintNum@strNumber(20), 
  1051 ;;  fmt             2   64[BANK0 ] PTR const unsigned char 
  1052 ;;		 -> STR_2(3), STR_1(3), 
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;  f              12   72[BANK0 ] struct _IO_FILE
  1055 ;;  ap              2   70[BANK0 ] PTR void [1]
  1056 ;;		 -> ?_sprintf(2), 
  1057 ;;  ret             2    0        int 
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  2   62[BANK0 ] int 
  1060 ;; Registers used:
  1061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1067 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1068 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1070 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;Total ram usage:       22 bytes
  1072 ;; Hardware stack levels used: 1
  1073 ;; Hardware stack levels required when called: 17
  1074 ;; This function calls:
  1075 ;;		_vfprintf
  1076 ;; This function is called by:
  1077 ;;		_main
  1078 ;;		_LCD_PrintNum
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           	psect	text2
  1083   001EEE                     __ptext2:
  1084                           	callstack 0
  1085   001EEE                     _sprintf:
  1086                           	callstack 13
  1087   001EEE  0EA2               	movlw	low (?_sprintf+4)
  1088   001EF0  0100               	movlb	0	; () banked
  1089   001EF2  6FA6               	movwf	sprintf@ap& (0+255),b
  1090   001EF4  0E00               	movlw	high (?_sprintf+4)
  1091   001EF6  6FA7               	movwf	(sprintf@ap+1)& (0+255),b
  1092   001EF8  C09E  F0A8         	movff	sprintf@s,sprintf@f
  1093   001EFC  C09F  F0A9         	movff	sprintf@s+1,sprintf@f+1
  1094   001F00                     
  1095                           ; BSR set to: 0
  1096   001F00  0E00               	movlw	0
  1097   001F02  6FAC               	movwf	(sprintf@f+4)& (0+255),b
  1098   001F04  0E00               	movlw	0
  1099   001F06  6FAB               	movwf	(sprintf@f+3)& (0+255),b
  1100   001F08                     
  1101                           ; BSR set to: 0
  1102   001F08  0E00               	movlw	0
  1103   001F0A  6FB3               	movwf	(sprintf@f+11)& (0+255),b
  1104   001F0C  0E00               	movlw	0
  1105   001F0E  6FB2               	movwf	(sprintf@f+10)& (0+255),b
  1106   001F10                     
  1107                           ; BSR set to: 0
  1108   001F10  0EA8               	movlw	low sprintf@f
  1109   001F12  6F96               	movwf	vfprintf@fp& (0+255),b
  1110   001F14  0E00               	movlw	high sprintf@f
  1111   001F16  6F97               	movwf	(vfprintf@fp+1)& (0+255),b
  1112   001F18  C0A0  F098         	movff	sprintf@fmt,vfprintf@fmt
  1113   001F1C  C0A1  F099         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1114   001F20  0EA6               	movlw	low sprintf@ap
  1115   001F22  6F9A               	movwf	vfprintf@ap& (0+255),b
  1116   001F24  0E00               	movlw	high sprintf@ap
  1117   001F26  6F9B               	movwf	(vfprintf@ap+1)& (0+255),b
  1118   001F28  EC4C  F00F         	call	_vfprintf	;wreg free
  1119   001F2C  0100               	movlb	0	; () banked
  1120   001F2E  51AB               	movf	(sprintf@f+3)& (0+255),w,b
  1121   001F30  259E               	addwf	sprintf@s& (0+255),w,b
  1122   001F32  6ED9               	movwf	fsr2l,c
  1123   001F34  51AC               	movf	(sprintf@f+4)& (0+255),w,b
  1124   001F36  219F               	addwfc	(sprintf@s+1)& (0+255),w,b
  1125   001F38  6EDA               	movwf	fsr2h,c
  1126   001F3A  6ADF               	clrf	indf2,c
  1127   001F3C                     
  1128                           ; BSR set to: 0
  1129   001F3C  0012               	return		;funcret
  1130   001F3E                     __end_of_sprintf:
  1131                           	callstack 0
  1132                           
  1133 ;; *************** function _vfprintf *****************
  1134 ;; Defined at:
  1135 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;  fp              2   54[BANK0 ] PTR struct _IO_FILE
  1138 ;;		 -> sprintf@f(12), 
  1139 ;;  fmt             2   56[BANK0 ] PTR const unsigned char 
  1140 ;;		 -> STR_2(3), STR_1(3), 
  1141 ;;  ap              2   58[BANK0 ] PTR PTR void 
  1142 ;;		 -> sprintf@ap(2), 
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;  cfmt            2   60[BANK0 ] PTR unsigned char 
  1145 ;;		 -> STR_2(3), STR_1(3), 
  1146 ;; Return value:  Size  Location     Type
  1147 ;;                  2   54[BANK0 ] int 
  1148 ;; Registers used:
  1149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1155 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1156 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1158 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1159 ;;Total ram usage:        8 bytes
  1160 ;; Hardware stack levels used: 1
  1161 ;; Hardware stack levels required when called: 16
  1162 ;; This function calls:
  1163 ;;		_vfpfcnvrt
  1164 ;; This function is called by:
  1165 ;;		_sprintf
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           	psect	text3
  1170   001E98                     __ptext3:
  1171                           	callstack 0
  1172   001E98                     _vfprintf:
  1173                           	callstack 13
  1174   001E98                     
  1175                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  1176   001E98  C098  F09C         	movff	vfprintf@fmt,vfprintf@cfmt
  1177   001E9C  C099  F09D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1178                           
  1179                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1180   001EA0  EF61  F00F         	goto	l3628
  1181   001EA4                     l3626:
  1182                           
  1183                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1184   001EA4  C096  F088         	movff	vfprintf@fp,vfpfcnvrt@fp
  1185   001EA8  C097  F089         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1186   001EAC  0E9C               	movlw	low vfprintf@cfmt
  1187   001EAE  0100               	movlb	0	; () banked
  1188   001EB0  6F8A               	movwf	vfpfcnvrt@fmt& (0+255),b
  1189   001EB2  0E00               	movlw	high vfprintf@cfmt
  1190   001EB4  6F8B               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1191   001EB6  C09A  F08C         	movff	vfprintf@ap,vfpfcnvrt@ap
  1192   001EBA  C09B  F08D         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1193   001EBE  EC44  F00A         	call	_vfpfcnvrt	;wreg free
  1194   001EC2                     l3628:
  1195                           
  1196                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1197   001EC2  C09C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1198   001EC6  C09D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1199   001ECA                     	if	0	;tblptru may be non-zero
  1200   001ECA                     	endif
  1201   001ECA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1202   001ECA  0E00               	movlw	low (__mediumconst shr (0+16))
  1203   001ECC  6EF8               	movwf	tblptru,c
  1204   001ECE                     	endif
  1205   001ECE  0008               	tblrd		*
  1206   001ED0  50F5               	movf	tablat,w,c
  1207   001ED2  0900               	iorlw	0
  1208   001ED4  A4D8               	btfss	status,2,c
  1209   001ED6  EF6F  F00F         	goto	u2701
  1210   001EDA  EF71  F00F         	goto	u2700
  1211   001EDE                     u2701:
  1212   001EDE  EF52  F00F         	goto	l3626
  1213   001EE2                     u2700:
  1214   001EE2                     
  1215                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  1216   001EE2  0E00               	movlw	0
  1217   001EE4  0100               	movlb	0	; () banked
  1218   001EE6  6F97               	movwf	(?_vfprintf+1)& (0+255),b
  1219   001EE8  0E00               	movlw	0
  1220   001EEA  6F96               	movwf	?_vfprintf& (0+255),b
  1221   001EEC                     
  1222                           ; BSR set to: 0
  1223   001EEC  0012               	return		;funcret
  1224   001EEE                     __end_of_vfprintf:
  1225                           	callstack 0
  1226                           
  1227 ;; *************** function _vfpfcnvrt *****************
  1228 ;; Defined at:
  1229 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;  fp              2   40[BANK0 ] PTR struct _IO_FILE
  1232 ;;		 -> sprintf@f(12), 
  1233 ;;  fmt             2   42[BANK0 ] PTR PTR unsigned char 
  1234 ;;		 -> vfprintf@cfmt(2), 
  1235 ;;  ap              2   44[BANK0 ] PTR PTR void 
  1236 ;;		 -> sprintf@ap(2), 
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;  convarg         4   48[BANK0 ] struct .
  1239 ;;  cp              2   52[BANK0 ] PTR unsigned char 
  1240 ;;		 -> STR_2(3), STR_1(3), 
  1241 ;;  i               2    0        int 
  1242 ;;  done            2    0        int 
  1243 ;;  c               1    0        unsigned char 
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      void 
  1246 ;; Registers used:
  1247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1253 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1254 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1255 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;Total ram usage:       14 bytes
  1258 ;; Hardware stack levels used: 1
  1259 ;; Hardware stack levels required when called: 15
  1260 ;; This function calls:
  1261 ;;		_dtoa
  1262 ;;		_fputc
  1263 ;; This function is called by:
  1264 ;;		_vfprintf
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           	psect	text4
  1269   001488                     __ptext4:
  1270                           	callstack 0
  1271   001488                     _vfpfcnvrt:
  1272                           	callstack 13
  1273   001488                     
  1274                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  1275   001488  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1276   00148C  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1277   001490  CFDE FFF6          	movff	postinc2,tblptrl
  1278   001494  CFDD FFF7          	movff	postdec2,tblptrh
  1279   001498                     	if	0	;tblptru may be non-zero
  1280   001498                     	endif
  1281   001498                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1282   001498  0E00               	movlw	low (__mediumconst shr (0+16))
  1283   00149A  6EF8               	movwf	tblptru,c
  1284   00149C                     	endif
  1285   00149C  0008               	tblrd		*
  1286   00149E  50F5               	movf	tablat,w,c
  1287   0014A0  0A25               	xorlw	37
  1288   0014A2  A4D8               	btfss	status,2,c
  1289   0014A4  EF56  F00A         	goto	u2621
  1290   0014A8  EF58  F00A         	goto	u2620
  1291   0014AC                     u2621:
  1292   0014AC  EFC7  F00A         	goto	l3546
  1293   0014B0                     u2620:
  1294   0014B0                     
  1295                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  1296   0014B0  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1297   0014B4  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1298   0014B8  2ADE               	incf	postinc2,f,c
  1299   0014BA  0E00               	movlw	0
  1300   0014BC  22DD               	addwfc	postdec2,f,c
  1301   0014BE                     
  1302                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  1303   0014BE  0E00               	movlw	0
  1304   0014C0  0100               	movlb	0	; () banked
  1305   0014C2  6FC0               	movwf	(_width+1)& (0+255),b
  1306   0014C4  0E00               	movlw	0
  1307   0014C6  6FBF               	movwf	_width& (0+255),b
  1308   0014C8  C0BF  F0C3         	movff	_width,_flags
  1309   0014CC                     
  1310                           ; BSR set to: 0
  1311                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  1312   0014CC  69C1               	setf	_prec& (0+255),b
  1313   0014CE  69C2               	setf	(_prec+1)& (0+255),b
  1314   0014D0                     
  1315                           ; BSR set to: 0
  1316                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  1317   0014D0  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1318   0014D4  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1319   0014D8  CFDE F094          	movff	postinc2,vfpfcnvrt@cp
  1320   0014DC  CFDD F095          	movff	postdec2,vfpfcnvrt@cp+1
  1321   0014E0                     
  1322                           ; BSR set to: 0
  1323                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1324   0014E0  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1325   0014E4  C095  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1326   0014E8                     	if	0	;tblptru may be non-zero
  1327   0014E8                     	endif
  1328   0014E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1329   0014E8  0E00               	movlw	low (__mediumconst shr (0+16))
  1330   0014EA  6EF8               	movwf	tblptru,c
  1331   0014EC                     	endif
  1332   0014EC  0008               	tblrd		*
  1333   0014EE  50F5               	movf	tablat,w,c
  1334   0014F0  0A64               	xorlw	100
  1335   0014F2  B4D8               	btfsc	status,2,c
  1336   0014F4  EF7E  F00A         	goto	u2631
  1337   0014F8  EF80  F00A         	goto	u2630
  1338   0014FC                     u2631:
  1339   0014FC  EF90  F00A         	goto	l3536
  1340   001500                     u2630:
  1341   001500                     
  1342                           ; BSR set to: 0
  1343   001500  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1344   001504  C095  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1345   001508                     	if	0	;tblptru may be non-zero
  1346   001508                     	endif
  1347   001508                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1348   001508  0E00               	movlw	low (__mediumconst shr (0+16))
  1349   00150A  6EF8               	movwf	tblptru,c
  1350   00150C                     	endif
  1351   00150C  0008               	tblrd		*
  1352   00150E  50F5               	movf	tablat,w,c
  1353   001510  0A69               	xorlw	105
  1354   001512  A4D8               	btfss	status,2,c
  1355   001514  EF8E  F00A         	goto	u2641
  1356   001518  EF90  F00A         	goto	u2640
  1357   00151C                     u2641:
  1358   00151C  EFBE  F00A         	goto	l3542
  1359   001520                     u2640:
  1360   001520                     l3536:
  1361                           
  1362                           ; BSR set to: 0
  1363                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1364   001520  C08C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1365   001524  C08D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1366   001528  CFDF F08E          	movff	indf2,??_vfpfcnvrt
  1367   00152C  0E02               	movlw	2
  1368   00152E  26DE               	addwf	postinc2,f,c
  1369   001530  CFDF F08F          	movff	indf2,??_vfpfcnvrt+1
  1370   001534  0E00               	movlw	0
  1371   001536  22DD               	addwfc	postdec2,f,c
  1372   001538  C08E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1373   00153C  C08F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1374   001540  CFDE F090          	movff	postinc2,vfpfcnvrt@convarg
  1375   001544  CFDD F091          	movff	postdec2,vfpfcnvrt@convarg+1
  1376                           
  1377                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  1378   001548  0E01               	movlw	1
  1379   00154A  2594               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1380   00154C  6F8E               	movwf	??_vfpfcnvrt& (0+255),b
  1381   00154E  0E00               	movlw	0
  1382   001550  2195               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1383   001552  6F8F               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1384   001554  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1385   001558  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1386   00155C  C08E  FFDE         	movff	??_vfpfcnvrt,postinc2
  1387   001560  C08F  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1388   001564                     
  1389                           ; BSR set to: 0
  1390                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1391   001564  C088  F07B         	movff	vfpfcnvrt@fp,dtoa@fp
  1392   001568  C089  F07C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1393   00156C  C090  F07D         	movff	vfpfcnvrt@convarg,dtoa@d
  1394   001570  C091  F07E         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1395   001574  ECD9  F008         	call	_dtoa	;wreg free
  1396   001578  EFDE  F00A         	goto	l1282
  1397   00157C                     l3542:
  1398                           
  1399                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  1400   00157C  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1401   001580  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1402   001584  2ADE               	incf	postinc2,f,c
  1403   001586  0E00               	movlw	0
  1404   001588  22DD               	addwfc	postdec2,f,c
  1405   00158A  EFDE  F00A         	goto	l1282
  1406   00158E                     l3546:
  1407                           
  1408                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  1409   00158E  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1410   001592  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1411   001596  CFDE FFF6          	movff	postinc2,tblptrl
  1412   00159A  CFDD FFF7          	movff	postdec2,tblptrh
  1413   00159E                     	if	0	;tblptru may be non-zero
  1414   00159E                     	endif
  1415   00159E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1416   00159E  0E00               	movlw	low (__mediumconst shr (0+16))
  1417   0015A0  6EF8               	movwf	tblptru,c
  1418   0015A2                     	endif
  1419   0015A2  0008               	tblrd		*
  1420   0015A4  50F5               	movf	tablat,w,c
  1421   0015A6  0100               	movlb	0	; () banked
  1422   0015A8  6F60               	movwf	fputc@c& (0+255),b
  1423   0015AA  6B61               	clrf	(fputc@c+1)& (0+255),b
  1424   0015AC  C088  F062         	movff	vfpfcnvrt@fp,fputc@fp
  1425   0015B0  C089  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1426   0015B4  ECAD  F00C         	call	_fputc	;wreg free
  1427   0015B8  EFBE  F00A         	goto	l3542
  1428   0015BC                     l1282:
  1429   0015BC  0012               	return		;funcret
  1430   0015BE                     __end_of_vfpfcnvrt:
  1431                           	callstack 0
  1432                           
  1433 ;; *************** function _dtoa *****************
  1434 ;; Defined at:
  1435 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  1438 ;;		 -> sprintf@f(12), 
  1439 ;;  d               2   29[BANK0 ] int 
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;  i               2   38[BANK0 ] int 
  1442 ;;  w               2   35[BANK0 ] int 
  1443 ;;  p               2   33[BANK0 ] int 
  1444 ;;  s               1   37[BANK0 ] unsigned char 
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      void 
  1447 ;; Registers used:
  1448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1454 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1455 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1457 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1458 ;;Total ram usage:       13 bytes
  1459 ;; Hardware stack levels used: 1
  1460 ;; Hardware stack levels required when called: 14
  1461 ;; This function calls:
  1462 ;;		___awdiv
  1463 ;;		___awmod
  1464 ;;		_abs
  1465 ;;		_pad
  1466 ;; This function is called by:
  1467 ;;		_vfpfcnvrt
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           	psect	text5
  1472   0011B2                     __ptext5:
  1473                           	callstack 0
  1474   0011B2                     _dtoa:
  1475                           	callstack 13
  1476   0011B2                     
  1477                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  1478   0011B2  0100               	movlb	0	; () banked
  1479   0011B4  BF7E               	btfsc	(dtoa@d+1)& (0+255),7,b
  1480   0011B6  EFDF  F008         	goto	u2521
  1481   0011BA  EFE2  F008         	goto	u2520
  1482   0011BE                     u2521:
  1483   0011BE  0E01               	movlw	1
  1484   0011C0  EFE3  F008         	goto	u2530
  1485   0011C4                     u2520:
  1486   0011C4  0E00               	movlw	0
  1487   0011C6                     u2530:
  1488   0011C6  6F85               	movwf	dtoa@s& (0+255),b
  1489   0011C8                     
  1490                           ; BSR set to: 0
  1491                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  1492   0011C8  5185               	movf	dtoa@s& (0+255),w,b
  1493   0011CA  B4D8               	btfsc	status,2,c
  1494   0011CC  EFEA  F008         	goto	u2541
  1495   0011D0  EFEC  F008         	goto	u2540
  1496   0011D4                     u2541:
  1497   0011D4  EFF0  F008         	goto	l3466
  1498   0011D8                     u2540:
  1499   0011D8                     
  1500                           ; BSR set to: 0
  1501                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  1502   0011D8  6D7D               	negf	dtoa@d& (0+255),b
  1503   0011DA  1F7E               	comf	(dtoa@d+1)& (0+255),f,b
  1504   0011DC  B0D8               	btfsc	status,0,c
  1505   0011DE  2B7E               	incf	(dtoa@d+1)& (0+255),f,b
  1506   0011E0                     l3466:
  1507                           
  1508                           ; BSR set to: 0
  1509                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  1510   0011E0  BFC2               	btfsc	(_prec+1)& (0+255),7,b
  1511   0011E2  EFF7  F008         	goto	u2550
  1512   0011E6  EFF5  F008         	goto	u2551
  1513   0011EA                     u2551:
  1514   0011EA  EFFD  F008         	goto	l1261
  1515   0011EE                     u2550:
  1516   0011EE                     
  1517                           ; BSR set to: 0
  1518   0011EE  0E00               	movlw	0
  1519   0011F0  6F82               	movwf	(dtoa@p+1)& (0+255),b
  1520   0011F2  0E01               	movlw	1
  1521   0011F4  6F81               	movwf	dtoa@p& (0+255),b
  1522   0011F6  EF01  F009         	goto	l1263
  1523   0011FA                     l1261:
  1524                           
  1525                           ; BSR set to: 0
  1526   0011FA  C0C1  F081         	movff	_prec,dtoa@p
  1527   0011FE  C0C2  F082         	movff	_prec+1,dtoa@p+1
  1528   001202                     l1263:
  1529                           
  1530                           ; BSR set to: 0
  1531                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  1532   001202  C0BF  F083         	movff	_width,dtoa@w
  1533   001206  C0C0  F084         	movff	_width+1,dtoa@w+1
  1534   00120A                     
  1535                           ; BSR set to: 0
  1536                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  1537   00120A  5185               	movf	dtoa@s& (0+255),w,b
  1538   00120C  B4D8               	btfsc	status,2,c
  1539   00120E  EF0B  F009         	goto	u2561
  1540   001212  EF0D  F009         	goto	u2560
  1541   001216                     u2561:
  1542   001216  EF24  F009         	goto	l1264
  1543   00121A                     u2560:
  1544   00121A                     
  1545                           ; BSR set to: 0
  1546                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  1547   00121A  0783               	decf	dtoa@w& (0+255),f,b
  1548   00121C  A0D8               	btfss	status,0,c
  1549   00121E  0784               	decf	(dtoa@w+1)& (0+255),f,b
  1550   001220                     
  1551                           ; BSR set to: 0
  1552                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  1553   001220  5185               	movf	dtoa@s& (0+255),w,b
  1554   001222  A4D8               	btfss	status,2,c
  1555   001224  EF16  F009         	goto	u2571
  1556   001228  EF18  F009         	goto	u2570
  1557   00122C                     u2571:
  1558   00122C  EF1E  F009         	goto	l3478
  1559   001230                     u2570:
  1560   001230                     
  1561                           ; BSR set to: 0
  1562   001230  0E00               	movlw	0
  1563   001232  6F80               	movwf	(_dtoa$2026+1)& (0+255),b
  1564   001234  0E2B               	movlw	43
  1565   001236  6F7F               	movwf	_dtoa$2026& (0+255),b
  1566   001238  EF22  F009         	goto	l3480
  1567   00123C                     l3478:
  1568                           
  1569                           ; BSR set to: 0
  1570   00123C  0E00               	movlw	0
  1571   00123E  6F80               	movwf	(_dtoa$2026+1)& (0+255),b
  1572   001240  0E2D               	movlw	45
  1573   001242  6F7F               	movwf	_dtoa$2026& (0+255),b
  1574   001244                     l3480:
  1575                           
  1576                           ; BSR set to: 0
  1577   001244  C07F  F085         	movff	_dtoa$2026,dtoa@s
  1578   001248                     l1264:
  1579                           
  1580                           ; BSR set to: 0
  1581                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  1582   001248  0E00               	movlw	0
  1583   00124A  6F87               	movwf	(dtoa@i+1)& (0+255),b
  1584   00124C  0E1F               	movlw	31
  1585   00124E  6F86               	movwf	dtoa@i& (0+255),b
  1586   001250                     
  1587                           ; BSR set to: 0
  1588                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  1589   001250  0E00               	movlw	0
  1590   001252  0101               	movlb	1	; () banked
  1591   001254  6F1F               	movwf	(_dbuf+31)& (0+255),b
  1592                           
  1593                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  1594   001256  EF5E  F009         	goto	l3494
  1595   00125A                     l3484:
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  1599   00125A  0786               	decf	dtoa@i& (0+255),f,b
  1600   00125C  A0D8               	btfss	status,0,c
  1601   00125E  0787               	decf	(dtoa@i+1)& (0+255),f,b
  1602   001260                     
  1603                           ; BSR set to: 0
  1604                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  1605   001260  0E00               	movlw	low _dbuf
  1606   001262  2586               	addwf	dtoa@i& (0+255),w,b
  1607   001264  6ED9               	movwf	fsr2l,c
  1608   001266  0E01               	movlw	high _dbuf
  1609   001268  2187               	addwfc	(dtoa@i+1)& (0+255),w,b
  1610   00126A  6EDA               	movwf	fsr2h,c
  1611   00126C  C07D  F060         	movff	dtoa@d,___awmod@dividend
  1612   001270  C07E  F061         	movff	dtoa@d+1,___awmod@dividend+1
  1613   001274  0E00               	movlw	0
  1614   001276  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  1615   001278  0E0A               	movlw	10
  1616   00127A  6F62               	movwf	___awmod@divisor& (0+255),b
  1617   00127C  ECD6  F00D         	call	___awmod	;wreg free
  1618   001280  C060  F066         	movff	?___awmod,abs@a
  1619   001284  C061  F067         	movff	?___awmod+1,abs@a+1
  1620   001288  ECC9  F010         	call	_abs	;wreg free
  1621   00128C  0100               	movlb	0	; () banked
  1622   00128E  5166               	movf	?_abs& (0+255),w,b
  1623   001290  0F30               	addlw	48
  1624   001292  6EDF               	movwf	indf2,c
  1625   001294                     
  1626                           ; BSR set to: 0
  1627                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  1628   001294  0781               	decf	dtoa@p& (0+255),f,b
  1629   001296  A0D8               	btfss	status,0,c
  1630   001298  0782               	decf	(dtoa@p+1)& (0+255),f,b
  1631   00129A                     
  1632                           ; BSR set to: 0
  1633                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  1634   00129A  0783               	decf	dtoa@w& (0+255),f,b
  1635   00129C  A0D8               	btfss	status,0,c
  1636   00129E  0784               	decf	(dtoa@w+1)& (0+255),f,b
  1637   0012A0                     
  1638                           ; BSR set to: 0
  1639                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  1640   0012A0  C07D  F060         	movff	dtoa@d,___awdiv@dividend
  1641   0012A4  C07E  F061         	movff	dtoa@d+1,___awdiv@dividend+1
  1642   0012A8  0E00               	movlw	0
  1643   0012AA  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  1644   0012AC  0E0A               	movlw	10
  1645   0012AE  6F62               	movwf	___awdiv@divisor& (0+255),b
  1646   0012B0  EC13  F00D         	call	___awdiv	;wreg free
  1647   0012B4  C060  F07D         	movff	?___awdiv,dtoa@d
  1648   0012B8  C061  F07E         	movff	?___awdiv+1,dtoa@d+1
  1649   0012BC                     l3494:
  1650                           
  1651                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  1652   0012BC  0100               	movlb	0	; () banked
  1653   0012BE  BF87               	btfsc	(dtoa@i+1)& (0+255),7,b
  1654   0012C0  EF6A  F009         	goto	u2581
  1655   0012C4  5187               	movf	(dtoa@i+1)& (0+255),w,b
  1656   0012C6  E108               	bnz	u2580
  1657   0012C8  0586               	decf	dtoa@i& (0+255),w,b
  1658   0012CA  A0D8               	btfss	status,0,c
  1659   0012CC  EF6A  F009         	goto	u2581
  1660   0012D0  EF6C  F009         	goto	u2580
  1661   0012D4                     u2581:
  1662   0012D4  EF82  F009         	goto	l3500
  1663   0012D8                     u2580:
  1664   0012D8                     
  1665                           ; BSR set to: 0
  1666   0012D8  517D               	movf	dtoa@d& (0+255),w,b
  1667   0012DA  117E               	iorwf	(dtoa@d+1)& (0+255),w,b
  1668   0012DC  A4D8               	btfss	status,2,c
  1669   0012DE  EF73  F009         	goto	u2591
  1670   0012E2  EF75  F009         	goto	u2590
  1671   0012E6                     u2591:
  1672   0012E6  EF2D  F009         	goto	l3484
  1673   0012EA                     u2590:
  1674   0012EA                     
  1675                           ; BSR set to: 0
  1676   0012EA  BF82               	btfsc	(dtoa@p+1)& (0+255),7,b
  1677   0012EC  EF82  F009         	goto	u2600
  1678   0012F0  5182               	movf	(dtoa@p+1)& (0+255),w,b
  1679   0012F2  E106               	bnz	u2601
  1680   0012F4  0581               	decf	dtoa@p& (0+255),w,b
  1681   0012F6  B0D8               	btfsc	status,0,c
  1682   0012F8  EF80  F009         	goto	u2601
  1683   0012FC  EF82  F009         	goto	u2600
  1684   001300                     u2601:
  1685   001300  EF2D  F009         	goto	l3484
  1686   001304                     u2600:
  1687   001304                     l3500:
  1688                           
  1689                           ; BSR set to: 0
  1690                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  1691   001304  5185               	movf	dtoa@s& (0+255),w,b
  1692   001306  B4D8               	btfsc	status,2,c
  1693   001308  EF88  F009         	goto	u2611
  1694   00130C  EF8A  F009         	goto	u2610
  1695   001310                     u2611:
  1696   001310  EF95  F009         	goto	l3506
  1697   001314                     u2610:
  1698   001314                     
  1699                           ; BSR set to: 0
  1700                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  1701   001314  0786               	decf	dtoa@i& (0+255),f,b
  1702   001316  A0D8               	btfss	status,0,c
  1703   001318  0787               	decf	(dtoa@i+1)& (0+255),f,b
  1704   00131A                     
  1705                           ; BSR set to: 0
  1706                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  1707   00131A  0E00               	movlw	low _dbuf
  1708   00131C  2586               	addwf	dtoa@i& (0+255),w,b
  1709   00131E  6ED9               	movwf	fsr2l,c
  1710   001320  0E01               	movlw	high _dbuf
  1711   001322  2187               	addwfc	(dtoa@i+1)& (0+255),w,b
  1712   001324  6EDA               	movwf	fsr2h,c
  1713   001326  C085  FFDF         	movff	dtoa@s,indf2
  1714   00132A                     l3506:
  1715                           
  1716                           ; BSR set to: 0
  1717                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1718   00132A  C07B  F070         	movff	dtoa@fp,pad@fp
  1719   00132E  C07C  F071         	movff	dtoa@fp+1,pad@fp+1
  1720   001332  0E00               	movlw	low _dbuf
  1721   001334  2586               	addwf	dtoa@i& (0+255),w,b
  1722   001336  6F72               	movwf	pad@buf& (0+255),b
  1723   001338  0E01               	movlw	high _dbuf
  1724   00133A  2187               	addwfc	(dtoa@i+1)& (0+255),w,b
  1725   00133C  6F73               	movwf	(pad@buf+1)& (0+255),b
  1726   00133E  C083  F074         	movff	dtoa@w,pad@p
  1727   001342  C084  F075         	movff	dtoa@w+1,pad@p+1
  1728   001346  EC2F  F00E         	call	_pad	;wreg free
  1729   00134A  0012               	return		;funcret
  1730   00134C                     __end_of_dtoa:
  1731                           	callstack 0
  1732                           
  1733 ;; *************** function _pad *****************
  1734 ;; Defined at:
  1735 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  1738 ;;		 -> sprintf@f(12), 
  1739 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  1740 ;;		 -> dbuf(32), 
  1741 ;;  p               2   20[BANK0 ] int 
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;  w               2   25[BANK0 ] int 
  1744 ;;  i               2   23[BANK0 ] int 
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  1    wreg      void 
  1747 ;; Registers used:
  1748 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1754 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1755 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1756 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1757 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1758 ;;Total ram usage:       11 bytes
  1759 ;; Hardware stack levels used: 1
  1760 ;; Hardware stack levels required when called: 13
  1761 ;; This function calls:
  1762 ;;		_fputc
  1763 ;;		_fputs
  1764 ;; This function is called by:
  1765 ;;		_dtoa
  1766 ;; This function uses a non-reentrant model
  1767 ;;
  1768                           
  1769                           	psect	text6
  1770   001C5E                     __ptext6:
  1771                           	callstack 0
  1772   001C5E                     _pad:
  1773                           	callstack 13
  1774   001C5E                     
  1775                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  1776   001C5E  0100               	movlb	0	; () banked
  1777   001C60  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  1778   001C62  EF35  F00E         	goto	u2491
  1779   001C66  EF37  F00E         	goto	u2490
  1780   001C6A                     u2491:
  1781   001C6A  EF3D  F00E         	goto	l3442
  1782   001C6E                     u2490:
  1783   001C6E                     
  1784                           ; BSR set to: 0
  1785   001C6E  C074  F079         	movff	pad@p,pad@w
  1786   001C72  C075  F07A         	movff	pad@p+1,pad@w+1
  1787   001C76  EF41  F00E         	goto	l1252
  1788   001C7A                     l3442:
  1789                           
  1790                           ; BSR set to: 0
  1791   001C7A  0E00               	movlw	0
  1792   001C7C  6F7A               	movwf	(pad@w+1)& (0+255),b
  1793   001C7E  0E00               	movlw	0
  1794   001C80  6F79               	movwf	pad@w& (0+255),b
  1795   001C82                     l1252:
  1796                           
  1797                           ; BSR set to: 0
  1798                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  1799   001C82  0E00               	movlw	0
  1800   001C84  6F78               	movwf	(pad@i+1)& (0+255),b
  1801   001C86  0E00               	movlw	0
  1802   001C88  6F77               	movwf	pad@i& (0+255),b
  1803                           
  1804                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  1805   001C8A  EF54  F00E         	goto	l3448
  1806   001C8E                     l3444:
  1807                           
  1808                           ; BSR set to: 0
  1809                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  1810   001C8E  0E00               	movlw	0
  1811   001C90  6F61               	movwf	(fputc@c+1)& (0+255),b
  1812   001C92  0E20               	movlw	32
  1813   001C94  6F60               	movwf	fputc@c& (0+255),b
  1814   001C96  C070  F062         	movff	pad@fp,fputc@fp
  1815   001C9A  C071  F063         	movff	pad@fp+1,fputc@fp+1
  1816   001C9E  ECAD  F00C         	call	_fputc	;wreg free
  1817   001CA2                     
  1818                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  1819   001CA2  0100               	movlb	0	; () banked
  1820   001CA4  4B77               	infsnz	pad@i& (0+255),f,b
  1821   001CA6  2B78               	incf	(pad@i+1)& (0+255),f,b
  1822   001CA8                     l3448:
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  1826   001CA8  5179               	movf	pad@w& (0+255),w,b
  1827   001CAA  5D77               	subwf	pad@i& (0+255),w,b
  1828   001CAC  5178               	movf	(pad@i+1)& (0+255),w,b
  1829   001CAE  0A80               	xorlw	128
  1830   001CB0  6F76               	movwf	??_pad& (0+255),b
  1831   001CB2  517A               	movf	(pad@w+1)& (0+255),w,b
  1832   001CB4  0A80               	xorlw	128
  1833   001CB6  5976               	subwfb	??_pad& (0+255),w,b
  1834   001CB8  A0D8               	btfss	status,0,c
  1835   001CBA  EF61  F00E         	goto	u2501
  1836   001CBE  EF63  F00E         	goto	u2500
  1837   001CC2                     u2501:
  1838   001CC2  EF47  F00E         	goto	l3444
  1839   001CC6                     u2500:
  1840   001CC6                     
  1841                           ; BSR set to: 0
  1842                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  1843   001CC6  C072  F069         	movff	pad@buf,fputs@s
  1844   001CCA  C073  F06A         	movff	pad@buf+1,fputs@s+1
  1845   001CCE  C070  F06B         	movff	pad@fp,fputs@fp
  1846   001CD2  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  1847   001CD6  EC3D  F010         	call	_fputs	;wreg free
  1848   001CDA  0012               	return		;funcret
  1849   001CDC                     __end_of_pad:
  1850                           	callstack 0
  1851                           
  1852 ;; *************** function _fputs *****************
  1853 ;; Defined at:
  1854 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  1857 ;;		 -> dbuf(32), 
  1858 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  1859 ;;		 -> sprintf@f(12), 
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;  i               2   14[BANK0 ] int 
  1862 ;;  c               1   13[BANK0 ] unsigned char 
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  2    9[BANK0 ] int 
  1865 ;; Registers used:
  1866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1872 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1873 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1875 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1876 ;;Total ram usage:        7 bytes
  1877 ;; Hardware stack levels used: 1
  1878 ;; Hardware stack levels required when called: 12
  1879 ;; This function calls:
  1880 ;;		_fputc
  1881 ;; This function is called by:
  1882 ;;		_pad
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           	psect	text7
  1887   00207A                     __ptext7:
  1888                           	callstack 0
  1889   00207A                     _fputs:
  1890                           	callstack 13
  1891   00207A  0E00               	movlw	0
  1892   00207C  0100               	movlb	0	; () banked
  1893   00207E  6F6F               	movwf	(fputs@i+1)& (0+255),b
  1894   002080  0E00               	movlw	0
  1895   002082  6F6E               	movwf	fputs@i& (0+255),b
  1896   002084  EF50  F010         	goto	l3296
  1897   002088                     l3292:
  1898                           
  1899                           ; BSR set to: 0
  1900   002088  C06D  F060         	movff	fputs@c,fputc@c
  1901   00208C  6B61               	clrf	(fputc@c+1)& (0+255),b
  1902   00208E  C06B  F062         	movff	fputs@fp,fputc@fp
  1903   002092  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  1904   002096  ECAD  F00C         	call	_fputc	;wreg free
  1905   00209A  0100               	movlb	0	; () banked
  1906   00209C  4B6E               	infsnz	fputs@i& (0+255),f,b
  1907   00209E  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  1908   0020A0                     l3296:
  1909                           
  1910                           ; BSR set to: 0
  1911   0020A0  516E               	movf	fputs@i& (0+255),w,b
  1912   0020A2  2569               	addwf	fputs@s& (0+255),w,b
  1913   0020A4  6ED9               	movwf	fsr2l,c
  1914   0020A6  516F               	movf	(fputs@i+1)& (0+255),w,b
  1915   0020A8  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  1916   0020AA  6EDA               	movwf	fsr2h,c
  1917   0020AC  50DF               	movf	indf2,w,c
  1918   0020AE  6F6D               	movwf	fputs@c& (0+255),b
  1919   0020B0  516D               	movf	fputs@c& (0+255),w,b
  1920   0020B2  A4D8               	btfss	status,2,c
  1921   0020B4  EF5E  F010         	goto	u2331
  1922   0020B8  EF60  F010         	goto	u2330
  1923   0020BC                     u2331:
  1924   0020BC  EF44  F010         	goto	l3292
  1925   0020C0                     u2330:
  1926   0020C0                     
  1927                           ; BSR set to: 0
  1928   0020C0  0012               	return		;funcret
  1929   0020C2                     __end_of_fputs:
  1930                           	callstack 0
  1931                           
  1932 ;; *************** function _fputc *****************
  1933 ;; Defined at:
  1934 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;  c               2    0[BANK0 ] int 
  1937 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  1938 ;;		 -> sprintf@f(12), 
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;		None
  1941 ;; Return value:  Size  Location     Type
  1942 ;;                  2    0[BANK0 ] int 
  1943 ;; Registers used:
  1944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1945 ;; Tracked objects:
  1946 ;;		On entry : 0/0
  1947 ;;		On exit  : 0/0
  1948 ;;		Unchanged: 0/0
  1949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1950 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1952 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1953 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1954 ;;Total ram usage:        9 bytes
  1955 ;; Hardware stack levels used: 1
  1956 ;; Hardware stack levels required when called: 11
  1957 ;; This function calls:
  1958 ;;		_putch
  1959 ;; This function is called by:
  1960 ;;		_pad
  1961 ;;		_vfpfcnvrt
  1962 ;;		_fputs
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           	psect	text8
  1967   00195A                     __ptext8:
  1968                           	callstack 0
  1969   00195A                     _fputc:
  1970                           	callstack 16
  1971   00195A  0100               	movlb	0	; () banked
  1972   00195C  5162               	movf	fputc@fp& (0+255),w,b
  1973   00195E  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  1974   001960  B4D8               	btfsc	status,2,c
  1975   001962  EFB5  F00C         	goto	u2271
  1976   001966  EFB7  F00C         	goto	u2270
  1977   00196A                     u2271:
  1978   00196A  EFC0  F00C         	goto	l3268
  1979   00196E                     u2270:
  1980   00196E                     
  1981                           ; BSR set to: 0
  1982   00196E  5162               	movf	fputc@fp& (0+255),w,b
  1983   001970  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  1984   001972  A4D8               	btfss	status,2,c
  1985   001974  EFBE  F00C         	goto	u2281
  1986   001978  EFC0  F00C         	goto	u2280
  1987   00197C                     u2281:
  1988   00197C  EFC5  F00C         	goto	l3270
  1989   001980                     u2280:
  1990   001980                     l3268:
  1991                           
  1992                           ; BSR set to: 0
  1993   001980  5160               	movf	fputc@c& (0+255),w,b
  1994   001982  ECA8  F012         	call	_putch
  1995   001986  EF12  F00D         	goto	l1307
  1996   00198A                     l3270:
  1997                           
  1998                           ; BSR set to: 0
  1999   00198A  EE20 F00A          	lfsr	2,10
  2000   00198E  5162               	movf	fputc@fp& (0+255),w,b
  2001   001990  26D9               	addwf	fsr2l,f,c
  2002   001992  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2003   001994  22DA               	addwfc	fsr2h,f,c
  2004   001996  50DE               	movf	postinc2,w,c
  2005   001998  10DE               	iorwf	postinc2,w,c
  2006   00199A  B4D8               	btfsc	status,2,c
  2007   00199C  EFD2  F00C         	goto	u2291
  2008   0019A0  EFD4  F00C         	goto	u2290
  2009   0019A4                     u2291:
  2010   0019A4  EFEF  F00C         	goto	l3274
  2011   0019A8                     u2290:
  2012   0019A8                     
  2013                           ; BSR set to: 0
  2014   0019A8  EE20 F00A          	lfsr	2,10
  2015   0019AC  5162               	movf	fputc@fp& (0+255),w,b
  2016   0019AE  26D9               	addwf	fsr2l,f,c
  2017   0019B0  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2018   0019B2  22DA               	addwfc	fsr2h,f,c
  2019   0019B4  EE10 F003          	lfsr	1,3
  2020   0019B8  5162               	movf	fputc@fp& (0+255),w,b
  2021   0019BA  26E1               	addwf	fsr1l,f,c
  2022   0019BC  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2023   0019BE  22E2               	addwfc	fsr1h,f,c
  2024   0019C0  50DE               	movf	postinc2,w,c
  2025   0019C2  5CE6               	subwf	postinc1,w,c
  2026   0019C4  50E6               	movf	postinc1,w,c
  2027   0019C6  0A80               	xorlw	128
  2028   0019C8  6F68               	movwf	(??_fputc+4)& (0+255),b
  2029   0019CA  50DE               	movf	postinc2,w,c
  2030   0019CC  0A80               	xorlw	128
  2031   0019CE  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  2032   0019D0  B0D8               	btfsc	status,0,c
  2033   0019D2  EFED  F00C         	goto	u2301
  2034   0019D6  EFEF  F00C         	goto	u2300
  2035   0019DA                     u2301:
  2036   0019DA  EF12  F00D         	goto	l1307
  2037   0019DE                     u2300:
  2038   0019DE                     l3274:
  2039                           
  2040                           ; BSR set to: 0
  2041   0019DE  EE20 F003          	lfsr	2,3
  2042   0019E2  5162               	movf	fputc@fp& (0+255),w,b
  2043   0019E4  26D9               	addwf	fsr2l,f,c
  2044   0019E6  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2045   0019E8  22DA               	addwfc	fsr2h,f,c
  2046   0019EA  CFDE F064          	movff	postinc2,??_fputc
  2047   0019EE  CFDD F065          	movff	postdec2,??_fputc+1
  2048   0019F2  C062  FFD9         	movff	fputc@fp,fsr2l
  2049   0019F6  C063  FFDA         	movff	fputc@fp+1,fsr2h
  2050   0019FA  CFDE F066          	movff	postinc2,??_fputc+2
  2051   0019FE  CFDD F067          	movff	postdec2,??_fputc+3
  2052   001A02  5164               	movf	??_fputc& (0+255),w,b
  2053   001A04  2566               	addwf	(??_fputc+2)& (0+255),w,b
  2054   001A06  6ED9               	movwf	fsr2l,c
  2055   001A08  5165               	movf	(??_fputc+1)& (0+255),w,b
  2056   001A0A  2167               	addwfc	(??_fputc+3)& (0+255),w,b
  2057   001A0C  6EDA               	movwf	fsr2h,c
  2058   001A0E  C060  FFDF         	movff	fputc@c,indf2
  2059   001A12  EE20 F003          	lfsr	2,3
  2060   001A16  5162               	movf	fputc@fp& (0+255),w,b
  2061   001A18  26D9               	addwf	fsr2l,f,c
  2062   001A1A  5163               	movf	(fputc@fp+1)& (0+255),w,b
  2063   001A1C  22DA               	addwfc	fsr2h,f,c
  2064   001A1E  2ADE               	incf	postinc2,f,c
  2065   001A20  0E00               	movlw	0
  2066   001A22  22DD               	addwfc	postdec2,f,c
  2067   001A24                     l1307:
  2068   001A24  0012               	return		;funcret
  2069   001A26                     __end_of_fputc:
  2070                           	callstack 0
  2071                           
  2072 ;; *************** function _putch *****************
  2073 ;; Defined at:
  2074 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;  c               1    wreg     unsigned char 
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;  c               1    0[COMRAM] unsigned char 
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  1    wreg      void 
  2081 ;; Registers used:
  2082 ;;		wreg
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2092 ;;Total ram usage:        0 bytes
  2093 ;; Hardware stack levels used: 1
  2094 ;; Hardware stack levels required when called: 10
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_fputc
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           	psect	text9
  2103   002550                     __ptext9:
  2104                           	callstack 0
  2105   002550                     _putch:
  2106                           	callstack 16
  2107   002550  0012               	return		;funcret
  2108   002552                     __end_of_putch:
  2109                           	callstack 0
  2110                           
  2111 ;; *************** function _abs *****************
  2112 ;; Defined at:
  2113 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;  a               2    6[BANK0 ] int 
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;		None
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  2    6[BANK0 ] int 
  2120 ;; Registers used:
  2121 ;;		wreg, status,2, status,0
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2127 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2129 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2130 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2131 ;;Total ram usage:        4 bytes
  2132 ;; Hardware stack levels used: 1
  2133 ;; Hardware stack levels required when called: 10
  2134 ;; This function calls:
  2135 ;;		Nothing
  2136 ;; This function is called by:
  2137 ;;		_dtoa
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           	psect	text10
  2142   002192                     __ptext10:
  2143                           	callstack 0
  2144   002192                     _abs:
  2145                           	callstack 16
  2146   002192  0100               	movlb	0	; () banked
  2147   002194  BF67               	btfsc	(abs@a+1)& (0+255),7,b
  2148   002196  EFD7  F010         	goto	u2510
  2149   00219A  5167               	movf	(abs@a+1)& (0+255),w,b
  2150   00219C  E106               	bnz	u2511
  2151   00219E  0566               	decf	abs@a& (0+255),w,b
  2152   0021A0  B0D8               	btfsc	status,0,c
  2153   0021A2  EFD5  F010         	goto	u2511
  2154   0021A6  EFD7  F010         	goto	u2510
  2155   0021AA                     u2511:
  2156   0021AA  EFE5  F010         	goto	l1292
  2157   0021AE                     u2510:
  2158   0021AE                     
  2159                           ; BSR set to: 0
  2160   0021AE  C066  F068         	movff	abs@a,??_abs
  2161   0021B2  C067  F069         	movff	abs@a+1,??_abs+1
  2162   0021B6  1F68               	comf	??_abs& (0+255),f,b
  2163   0021B8  1F69               	comf	(??_abs+1)& (0+255),f,b
  2164   0021BA  4B68               	infsnz	??_abs& (0+255),f,b
  2165   0021BC  2B69               	incf	(??_abs+1)& (0+255),f,b
  2166   0021BE  C068  F066         	movff	??_abs,?_abs
  2167   0021C2  C069  F067         	movff	??_abs+1,?_abs+1
  2168   0021C6  EFE9  F010         	goto	l1295
  2169   0021CA                     l1292:
  2170                           
  2171                           ; BSR set to: 0
  2172   0021CA  C066  F066         	movff	abs@a,?_abs
  2173   0021CE  C067  F067         	movff	abs@a+1,?_abs+1
  2174   0021D2                     l1295:
  2175                           
  2176                           ; BSR set to: 0
  2177   0021D2  0012               	return		;funcret
  2178   0021D4                     __end_of_abs:
  2179                           	callstack 0
  2180                           
  2181 ;; *************** function ___awmod *****************
  2182 ;; Defined at:
  2183 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  dividend        2    0[BANK0 ] int 
  2186 ;;  divisor         2    2[BANK0 ] int 
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;  sign            1    5[BANK0 ] unsigned char 
  2189 ;;  counter         1    4[BANK0 ] unsigned char 
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  2    0[BANK0 ] int 
  2192 ;; Registers used:
  2193 ;;		wreg, status,2, status,0
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2199 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2200 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2202 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2203 ;;Total ram usage:        6 bytes
  2204 ;; Hardware stack levels used: 1
  2205 ;; Hardware stack levels required when called: 10
  2206 ;; This function calls:
  2207 ;;		Nothing
  2208 ;; This function is called by:
  2209 ;;		_dtoa
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           	psect	text11
  2214   001BAC                     __ptext11:
  2215                           	callstack 0
  2216   001BAC                     ___awmod:
  2217                           	callstack 16
  2218   001BAC  0E00               	movlw	0
  2219   001BAE  0100               	movlb	0	; () banked
  2220   001BB0  6F65               	movwf	___awmod@sign& (0+255),b
  2221   001BB2                     
  2222                           ; BSR set to: 0
  2223   001BB2  BF61               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  2224   001BB4  EFE0  F00D         	goto	u2430
  2225   001BB8  EFDE  F00D         	goto	u2431
  2226   001BBC                     u2431:
  2227   001BBC  EFE6  F00D         	goto	l3410
  2228   001BC0                     u2430:
  2229   001BC0                     
  2230                           ; BSR set to: 0
  2231   001BC0  6D60               	negf	___awmod@dividend& (0+255),b
  2232   001BC2  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  2233   001BC4  B0D8               	btfsc	status,0,c
  2234   001BC6  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  2235   001BC8                     
  2236                           ; BSR set to: 0
  2237   001BC8  0E01               	movlw	1
  2238   001BCA  6F65               	movwf	___awmod@sign& (0+255),b
  2239   001BCC                     l3410:
  2240                           
  2241                           ; BSR set to: 0
  2242   001BCC  BF63               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  2243   001BCE  EFED  F00D         	goto	u2440
  2244   001BD2  EFEB  F00D         	goto	u2441
  2245   001BD6                     u2441:
  2246   001BD6  EFF1  F00D         	goto	l3414
  2247   001BDA                     u2440:
  2248   001BDA                     
  2249                           ; BSR set to: 0
  2250   001BDA  6D62               	negf	___awmod@divisor& (0+255),b
  2251   001BDC  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  2252   001BDE  B0D8               	btfsc	status,0,c
  2253   001BE0  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  2254   001BE2                     l3414:
  2255                           
  2256                           ; BSR set to: 0
  2257   001BE2  5162               	movf	___awmod@divisor& (0+255),w,b
  2258   001BE4  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  2259   001BE6  B4D8               	btfsc	status,2,c
  2260   001BE8  EFF8  F00D         	goto	u2451
  2261   001BEC  EFFA  F00D         	goto	u2450
  2262   001BF0                     u2451:
  2263   001BF0  EF1E  F00E         	goto	l3430
  2264   001BF4                     u2450:
  2265   001BF4                     
  2266                           ; BSR set to: 0
  2267   001BF4  0E01               	movlw	1
  2268   001BF6  6F64               	movwf	___awmod@counter& (0+255),b
  2269   001BF8  EF02  F00E         	goto	l3420
  2270   001BFC                     l3418:
  2271                           
  2272                           ; BSR set to: 0
  2273   001BFC  90D8               	bcf	status,0,c
  2274   001BFE  3762               	rlcf	___awmod@divisor& (0+255),f,b
  2275   001C00  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  2276   001C02  2B64               	incf	___awmod@counter& (0+255),f,b
  2277   001C04                     l3420:
  2278                           
  2279                           ; BSR set to: 0
  2280   001C04  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  2281   001C06  EF07  F00E         	goto	u2461
  2282   001C0A  EF09  F00E         	goto	u2460
  2283   001C0E                     u2461:
  2284   001C0E  EFFE  F00D         	goto	l3418
  2285   001C12                     u2460:
  2286   001C12                     l3422:
  2287                           
  2288                           ; BSR set to: 0
  2289   001C12  5162               	movf	___awmod@divisor& (0+255),w,b
  2290   001C14  5D60               	subwf	___awmod@dividend& (0+255),w,b
  2291   001C16  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  2292   001C18  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  2293   001C1A  A0D8               	btfss	status,0,c
  2294   001C1C  EF12  F00E         	goto	u2471
  2295   001C20  EF14  F00E         	goto	u2470
  2296   001C24                     u2471:
  2297   001C24  EF18  F00E         	goto	l3426
  2298   001C28                     u2470:
  2299   001C28                     
  2300                           ; BSR set to: 0
  2301   001C28  5162               	movf	___awmod@divisor& (0+255),w,b
  2302   001C2A  5F60               	subwf	___awmod@dividend& (0+255),f,b
  2303   001C2C  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  2304   001C2E  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  2305   001C30                     l3426:
  2306                           
  2307                           ; BSR set to: 0
  2308   001C30  90D8               	bcf	status,0,c
  2309   001C32  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  2310   001C34  3362               	rrcf	___awmod@divisor& (0+255),f,b
  2311   001C36                     
  2312                           ; BSR set to: 0
  2313   001C36  2F64               	decfsz	___awmod@counter& (0+255),f,b
  2314   001C38  EF09  F00E         	goto	l3422
  2315   001C3C                     l3430:
  2316                           
  2317                           ; BSR set to: 0
  2318   001C3C  5165               	movf	___awmod@sign& (0+255),w,b
  2319   001C3E  B4D8               	btfsc	status,2,c
  2320   001C40  EF24  F00E         	goto	u2481
  2321   001C44  EF26  F00E         	goto	u2480
  2322   001C48                     u2481:
  2323   001C48  EF2A  F00E         	goto	l3434
  2324   001C4C                     u2480:
  2325   001C4C                     
  2326                           ; BSR set to: 0
  2327   001C4C  6D60               	negf	___awmod@dividend& (0+255),b
  2328   001C4E  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  2329   001C50  B0D8               	btfsc	status,0,c
  2330   001C52  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  2331   001C54                     l3434:
  2332                           
  2333                           ; BSR set to: 0
  2334   001C54  C060  F060         	movff	___awmod@dividend,?___awmod
  2335   001C58  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  2336   001C5C                     
  2337                           ; BSR set to: 0
  2338   001C5C  0012               	return		;funcret
  2339   001C5E                     __end_of___awmod:
  2340                           	callstack 0
  2341                           
  2342 ;; *************** function ___awdiv *****************
  2343 ;; Defined at:
  2344 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;  dividend        2    0[BANK0 ] int 
  2347 ;;  divisor         2    2[BANK0 ] int 
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;  quotient        2    6[BANK0 ] int 
  2350 ;;  sign            1    5[BANK0 ] unsigned char 
  2351 ;;  counter         1    4[BANK0 ] unsigned char 
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  2    0[BANK0 ] int 
  2354 ;; Registers used:
  2355 ;;		wreg, status,2, status,0
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2361 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2362 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2364 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2365 ;;Total ram usage:        8 bytes
  2366 ;; Hardware stack levels used: 1
  2367 ;; Hardware stack levels required when called: 10
  2368 ;; This function calls:
  2369 ;;		Nothing
  2370 ;; This function is called by:
  2371 ;;		_dtoa
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           	psect	text12
  2376   001A26                     __ptext12:
  2377                           	callstack 0
  2378   001A26                     ___awdiv:
  2379                           	callstack 16
  2380   001A26  0E00               	movlw	0
  2381   001A28  0100               	movlb	0	; () banked
  2382   001A2A  6F65               	movwf	___awdiv@sign& (0+255),b
  2383   001A2C                     
  2384                           ; BSR set to: 0
  2385   001A2C  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  2386   001A2E  EF1D  F00D         	goto	u2370
  2387   001A32  EF1B  F00D         	goto	u2371
  2388   001A36                     u2371:
  2389   001A36  EF23  F00D         	goto	l3366
  2390   001A3A                     u2370:
  2391   001A3A                     
  2392                           ; BSR set to: 0
  2393   001A3A  6D62               	negf	___awdiv@divisor& (0+255),b
  2394   001A3C  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  2395   001A3E  B0D8               	btfsc	status,0,c
  2396   001A40  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  2397   001A42                     
  2398                           ; BSR set to: 0
  2399   001A42  0E01               	movlw	1
  2400   001A44  6F65               	movwf	___awdiv@sign& (0+255),b
  2401   001A46                     l3366:
  2402                           
  2403                           ; BSR set to: 0
  2404   001A46  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  2405   001A48  EF2A  F00D         	goto	u2380
  2406   001A4C  EF28  F00D         	goto	u2381
  2407   001A50                     u2381:
  2408   001A50  EF30  F00D         	goto	l3372
  2409   001A54                     u2380:
  2410   001A54                     
  2411                           ; BSR set to: 0
  2412   001A54  6D60               	negf	___awdiv@dividend& (0+255),b
  2413   001A56  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  2414   001A58  B0D8               	btfsc	status,0,c
  2415   001A5A  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  2416   001A5C                     
  2417                           ; BSR set to: 0
  2418   001A5C  0E01               	movlw	1
  2419   001A5E  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  2420   001A60                     l3372:
  2421                           
  2422                           ; BSR set to: 0
  2423   001A60  0E00               	movlw	0
  2424   001A62  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  2425   001A64  0E00               	movlw	0
  2426   001A66  6F66               	movwf	___awdiv@quotient& (0+255),b
  2427   001A68                     
  2428                           ; BSR set to: 0
  2429   001A68  5162               	movf	___awdiv@divisor& (0+255),w,b
  2430   001A6A  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  2431   001A6C  B4D8               	btfsc	status,2,c
  2432   001A6E  EF3B  F00D         	goto	u2391
  2433   001A72  EF3D  F00D         	goto	u2390
  2434   001A76                     u2391:
  2435   001A76  EF65  F00D         	goto	l3394
  2436   001A7A                     u2390:
  2437   001A7A                     
  2438                           ; BSR set to: 0
  2439   001A7A  0E01               	movlw	1
  2440   001A7C  6F64               	movwf	___awdiv@counter& (0+255),b
  2441   001A7E  EF45  F00D         	goto	l3380
  2442   001A82                     l3378:
  2443                           
  2444                           ; BSR set to: 0
  2445   001A82  90D8               	bcf	status,0,c
  2446   001A84  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  2447   001A86  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  2448   001A88  2B64               	incf	___awdiv@counter& (0+255),f,b
  2449   001A8A                     l3380:
  2450                           
  2451                           ; BSR set to: 0
  2452   001A8A  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  2453   001A8C  EF4A  F00D         	goto	u2401
  2454   001A90  EF4C  F00D         	goto	u2400
  2455   001A94                     u2401:
  2456   001A94  EF41  F00D         	goto	l3378
  2457   001A98                     u2400:
  2458   001A98                     l3382:
  2459                           
  2460                           ; BSR set to: 0
  2461   001A98  90D8               	bcf	status,0,c
  2462   001A9A  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  2463   001A9C  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  2464   001A9E                     
  2465                           ; BSR set to: 0
  2466   001A9E  5162               	movf	___awdiv@divisor& (0+255),w,b
  2467   001AA0  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  2468   001AA2  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2469   001AA4  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  2470   001AA6  A0D8               	btfss	status,0,c
  2471   001AA8  EF58  F00D         	goto	u2411
  2472   001AAC  EF5A  F00D         	goto	u2410
  2473   001AB0                     u2411:
  2474   001AB0  EF5F  F00D         	goto	l3390
  2475   001AB4                     u2410:
  2476   001AB4                     
  2477                           ; BSR set to: 0
  2478   001AB4  5162               	movf	___awdiv@divisor& (0+255),w,b
  2479   001AB6  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  2480   001AB8  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2481   001ABA  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  2482   001ABC                     
  2483                           ; BSR set to: 0
  2484   001ABC  8166               	bsf	___awdiv@quotient& (0+255),0,b
  2485   001ABE                     l3390:
  2486                           
  2487                           ; BSR set to: 0
  2488   001ABE  90D8               	bcf	status,0,c
  2489   001AC0  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  2490   001AC2  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  2491   001AC4                     
  2492                           ; BSR set to: 0
  2493   001AC4  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  2494   001AC6  EF4C  F00D         	goto	l3382
  2495   001ACA                     l3394:
  2496                           
  2497                           ; BSR set to: 0
  2498   001ACA  5165               	movf	___awdiv@sign& (0+255),w,b
  2499   001ACC  B4D8               	btfsc	status,2,c
  2500   001ACE  EF6B  F00D         	goto	u2421
  2501   001AD2  EF6D  F00D         	goto	u2420
  2502   001AD6                     u2421:
  2503   001AD6  EF71  F00D         	goto	l3398
  2504   001ADA                     u2420:
  2505   001ADA                     
  2506                           ; BSR set to: 0
  2507   001ADA  6D66               	negf	___awdiv@quotient& (0+255),b
  2508   001ADC  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  2509   001ADE  B0D8               	btfsc	status,0,c
  2510   001AE0  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  2511   001AE2                     l3398:
  2512                           
  2513                           ; BSR set to: 0
  2514   001AE2  C066  F060         	movff	___awdiv@quotient,?___awdiv
  2515   001AE6  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  2516   001AEA                     
  2517                           ; BSR set to: 0
  2518   001AEA  0012               	return		;funcret
  2519   001AEC                     __end_of___awdiv:
  2520                           	callstack 0
  2521                           
  2522 ;; *************** function _SYSTEM_Initialize *****************
  2523 ;; Defined at:
  2524 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2525 ;; Parameters:    Size  Location     Type
  2526 ;;		None
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;		None
  2529 ;; Return value:  Size  Location     Type
  2530 ;;                  1    wreg      void 
  2531 ;; Registers used:
  2532 ;;		wreg, status,2, status,0, cstack
  2533 ;; Tracked objects:
  2534 ;;		On entry : 0/0
  2535 ;;		On exit  : 0/0
  2536 ;;		Unchanged: 0/0
  2537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2542 ;;Total ram usage:        0 bytes
  2543 ;; Hardware stack levels used: 1
  2544 ;; Hardware stack levels required when called: 12
  2545 ;; This function calls:
  2546 ;;		_ADC_Initialize
  2547 ;;		_EUSART1_Initialize
  2548 ;;		_INTERRUPT_Initialize
  2549 ;;		_OSCILLATOR_Initialize
  2550 ;;		_PIN_MANAGER_Initialize
  2551 ;; This function is called by:
  2552 ;;		_main
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           	psect	text13
  2557   002444                     __ptext13:
  2558                           	callstack 0
  2559   002444                     _SYSTEM_Initialize:
  2560                           	callstack 18
  2561   002444                     
  2562                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  2563   002444  ECA6  F012         	call	_INTERRUPT_Initialize	;wreg free
  2564   002448                     
  2565                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2566   002448  ECEA  F010         	call	_PIN_MANAGER_Initialize	;wreg free
  2567   00244C                     
  2568                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2569   00244C  EC9B  F012         	call	_OSCILLATOR_Initialize	;wreg free
  2570   002450                     
  2571                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  2572   002450  EC2D  F012         	call	_ADC_Initialize	;wreg free
  2573   002454                     
  2574                           ;mcc_generated_files/mcc.c: 57:     EUSART1_Initialize();
  2575   002454  ECA8  F00E         	call	_EUSART1_Initialize	;wreg free
  2576   002458  0012               	return		;funcret
  2577   00245A                     __end_of_SYSTEM_Initialize:
  2578                           	callstack 0
  2579                           
  2580 ;; *************** function _PIN_MANAGER_Initialize *****************
  2581 ;; Defined at:
  2582 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;		None
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;		None
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  1    wreg      void 
  2589 ;; Registers used:
  2590 ;;		wreg, status,2
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2600 ;;Total ram usage:        0 bytes
  2601 ;; Hardware stack levels used: 1
  2602 ;; Hardware stack levels required when called: 10
  2603 ;; This function calls:
  2604 ;;		Nothing
  2605 ;; This function is called by:
  2606 ;;		_SYSTEM_Initialize
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           
  2610                           	psect	text14
  2611   0021D4                     __ptext14:
  2612                           	callstack 0
  2613   0021D4                     _PIN_MANAGER_Initialize:
  2614                           	callstack 19
  2615   0021D4                     
  2616                           ;mcc_generated_files/pin_manager.c: 55:     LATE = 0x00;
  2617   0021D4  0E00               	movlw	0
  2618   0021D6  6E8D               	movwf	141,c	;volatile
  2619                           
  2620                           ;mcc_generated_files/pin_manager.c: 56:     LATJ = 0x00;
  2621   0021D8  0E00               	movlw	0
  2622   0021DA  6E91               	movwf	145,c	;volatile
  2623                           
  2624                           ;mcc_generated_files/pin_manager.c: 57:     LATD = 0x00;
  2625   0021DC  0E00               	movlw	0
  2626   0021DE  6E8C               	movwf	140,c	;volatile
  2627                           
  2628                           ;mcc_generated_files/pin_manager.c: 58:     LATA = 0x00;
  2629   0021E0  0E00               	movlw	0
  2630   0021E2  6E89               	movwf	137,c	;volatile
  2631                           
  2632                           ;mcc_generated_files/pin_manager.c: 59:     LATF = 0x00;
  2633   0021E4  0E00               	movlw	0
  2634   0021E6  6E8E               	movwf	142,c	;volatile
  2635                           
  2636                           ;mcc_generated_files/pin_manager.c: 60:     LATB = 0x00;
  2637   0021E8  0E00               	movlw	0
  2638   0021EA  6E8A               	movwf	138,c	;volatile
  2639                           
  2640                           ;mcc_generated_files/pin_manager.c: 61:     LATG = 0x00;
  2641   0021EC  0E00               	movlw	0
  2642   0021EE  6E8F               	movwf	143,c	;volatile
  2643                           
  2644                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  2645   0021F0  0E00               	movlw	0
  2646   0021F2  6E8B               	movwf	139,c	;volatile
  2647                           
  2648                           ;mcc_generated_files/pin_manager.c: 63:     LATH = 0x00;
  2649   0021F4  0E00               	movlw	0
  2650   0021F6  6E90               	movwf	144,c	;volatile
  2651   0021F8                     
  2652                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0xFF;
  2653   0021F8  6896               	setf	150,c	;volatile
  2654   0021FA                     
  2655                           ;mcc_generated_files/pin_manager.c: 69:     TRISF = 0xFF;
  2656   0021FA  6897               	setf	151,c	;volatile
  2657                           
  2658                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x3F;
  2659   0021FC  0E3F               	movlw	63
  2660   0021FE  6E92               	movwf	146,c	;volatile
  2661   002200                     
  2662                           ;mcc_generated_files/pin_manager.c: 71:     TRISG = 0xFF;
  2663   002200  6898               	setf	152,c	;volatile
  2664   002202                     
  2665                           ;mcc_generated_files/pin_manager.c: 72:     TRISB = 0xFF;
  2666   002202  6893               	setf	147,c	;volatile
  2667   002204                     
  2668                           ;mcc_generated_files/pin_manager.c: 73:     TRISH = 0xFF;
  2669   002204  6899               	setf	153,c	;volatile
  2670                           
  2671                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xBF;
  2672   002206  0EBF               	movlw	191
  2673   002208  6E94               	movwf	148,c	;volatile
  2674   00220A                     
  2675                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xFF;
  2676   00220A  6895               	setf	149,c	;volatile
  2677                           
  2678                           ;mcc_generated_files/pin_manager.c: 76:     TRISJ = 0xF8;
  2679   00220C  0EF8               	movlw	248
  2680   00220E  6E9A               	movwf	154,c	;volatile
  2681                           
  2682                           ;mcc_generated_files/pin_manager.c: 81:     ADCON1bits.PCFG = 0x00;
  2683   002210  0EF0               	movlw	-16
  2684   002212  16C1               	andwf	193,f,c	;volatile
  2685   002214  0012               	return		;funcret
  2686   002216                     __end_of_PIN_MANAGER_Initialize:
  2687                           	callstack 0
  2688                           
  2689 ;; *************** function _OSCILLATOR_Initialize *****************
  2690 ;; Defined at:
  2691 ;;		line 60 in file "mcc_generated_files/mcc.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;		None
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;		None
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  1    wreg      void 
  2698 ;; Registers used:
  2699 ;;		wreg, status,2
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2709 ;;Total ram usage:        0 bytes
  2710 ;; Hardware stack levels used: 1
  2711 ;; Hardware stack levels required when called: 10
  2712 ;; This function calls:
  2713 ;;		Nothing
  2714 ;; This function is called by:
  2715 ;;		_SYSTEM_Initialize
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           	psect	text15
  2720   002536                     __ptext15:
  2721                           	callstack 0
  2722   002536                     _OSCILLATOR_Initialize:
  2723                           	callstack 19
  2724   002536                     
  2725                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x00;
  2726   002536  0E00               	movlw	0
  2727   002538  6ED3               	movwf	211,c	;volatile
  2728                           
  2729                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  2730   00253A  0E00               	movlw	0
  2731   00253C  6E9B               	movwf	155,c	;volatile
  2732   00253E  0012               	return		;funcret
  2733   002540                     __end_of_OSCILLATOR_Initialize:
  2734                           	callstack 0
  2735                           
  2736 ;; *************** function _INTERRUPT_Initialize *****************
  2737 ;; Defined at:
  2738 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;		None
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;		None
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      void 
  2745 ;; Registers used:
  2746 ;;		None
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2756 ;;Total ram usage:        0 bytes
  2757 ;; Hardware stack levels used: 1
  2758 ;; Hardware stack levels required when called: 10
  2759 ;; This function calls:
  2760 ;;		Nothing
  2761 ;; This function is called by:
  2762 ;;		_SYSTEM_Initialize
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           	psect	text16
  2767   00254C                     __ptext16:
  2768                           	callstack 0
  2769   00254C                     _INTERRUPT_Initialize:
  2770                           	callstack 19
  2771   00254C                     
  2772                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  2773   00254C  9ED0               	bcf	208,7,c	;volatile
  2774   00254E  0012               	return		;funcret
  2775   002550                     __end_of_INTERRUPT_Initialize:
  2776                           	callstack 0
  2777                           
  2778 ;; *************** function _EUSART1_Initialize *****************
  2779 ;; Defined at:
  2780 ;;		line 118 in file "mcc_generated_files/eusart1.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;		None
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;		None
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  1    wreg      void 
  2787 ;; Registers used:
  2788 ;;		wreg, status,2, status,0, cstack
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2798 ;;Total ram usage:        0 bytes
  2799 ;; Hardware stack levels used: 1
  2800 ;; Hardware stack levels required when called: 11
  2801 ;; This function calls:
  2802 ;;		_EUSART1_SetErrorHandler
  2803 ;;		_EUSART1_SetFramingErrorHandler
  2804 ;;		_EUSART1_SetOverrunErrorHandler
  2805 ;;		_EUSART1_SetRxInterruptHandler
  2806 ;; This function is called by:
  2807 ;;		_SYSTEM_Initialize
  2808 ;; This function uses a non-reentrant model
  2809 ;;
  2810                           
  2811                           	psect	text17
  2812   001D50                     __ptext17:
  2813                           	callstack 0
  2814   001D50                     _EUSART1_Initialize:
  2815                           	callstack 18
  2816   001D50                     
  2817                           ;mcc_generated_files/eusart1.c: 121:     PIE1bits.RC1IE = 0;
  2818   001D50  9A9D               	bcf	157,5,c	;volatile
  2819   001D52                     
  2820                           ;mcc_generated_files/eusart1.c: 122:     EUSART1_SetRxInterruptHandler(PrintOnScreen);
  2821   001D52  0E06               	movlw	low _PrintOnScreen
  2822   001D54  0100               	movlb	0	; () banked
  2823   001D56  6F60               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler& (0+255),b
  2824   001D58  0E10               	movlw	high _PrintOnScreen
  2825   001D5A  6F61               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
  2826   001D5C  0E00               	movlw	low (_PrintOnScreen shr (0+16))
  2827   001D5E  6F62               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
  2828   001D60  EC64  F012         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  2829   001D64                     
  2830                           ;mcc_generated_files/eusart1.c: 126:     BAUDCON1 = 0x08;
  2831   001D64  0E08               	movlw	8
  2832   001D66  6E7E               	movwf	126,c	;volatile
  2833   001D68                     
  2834                           ;mcc_generated_files/eusart1.c: 129:     RCSTA1 = 0x90;
  2835   001D68  0E90               	movlw	144
  2836   001D6A  6EAB               	movwf	171,c	;volatile
  2837   001D6C                     
  2838                           ;mcc_generated_files/eusart1.c: 132:     TXSTA1 = 0x24;
  2839   001D6C  0E24               	movlw	36
  2840   001D6E  6EAC               	movwf	172,c	;volatile
  2841   001D70                     
  2842                           ;mcc_generated_files/eusart1.c: 135:     SPBRG1 = 0x35;
  2843   001D70  0E35               	movlw	53
  2844   001D72  6EAF               	movwf	175,c	;volatile
  2845   001D74                     
  2846                           ;mcc_generated_files/eusart1.c: 138:     SPBRGH1 = 0x00;
  2847   001D74  0E00               	movlw	0
  2848   001D76  6E7F               	movwf	127,c	;volatile
  2849   001D78                     
  2850                           ;mcc_generated_files/eusart1.c: 141:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  2851   001D78  0E52               	movlw	low _EUSART1_DefaultFramingErrorHandler
  2852   001D7A  0100               	movlb	0	; () banked
  2853   001D7C  6F60               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  2854   001D7E  0E25               	movlw	high _EUSART1_DefaultFramingErrorHandler
  2855   001D80  6F61               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  2856   001D82  0E00               	movlw	low (_EUSART1_DefaultFramingErrorHandler shr (0+16))
  2857   001D84  6F62               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+2)& (0+255),b
  2858   001D86  EC72  F012         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  2859   001D8A                     
  2860                           ;mcc_generated_files/eusart1.c: 142:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  2861   001D8A  0E40               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  2862   001D8C  0100               	movlb	0	; () banked
  2863   001D8E  6F60               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  2864   001D90  0E25               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  2865   001D92  6F61               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  2866   001D94  0E00               	movlw	low (_EUSART1_DefaultOverrunErrorHandler shr (0+16))
  2867   001D96  6F62               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+2)& (0+255),b
  2868   001D98  EC6B  F012         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  2869   001D9C                     
  2870                           ;mcc_generated_files/eusart1.c: 143:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  2871   001D9C  0E46               	movlw	low _EUSART1_DefaultErrorHandler
  2872   001D9E  0100               	movlb	0	; () banked
  2873   001DA0  6F60               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
  2874   001DA2  0E25               	movlw	high _EUSART1_DefaultErrorHandler
  2875   001DA4  6F61               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  2876   001DA6  0E00               	movlw	low (_EUSART1_DefaultErrorHandler shr (0+16))
  2877   001DA8  6F62               	movwf	(EUSART1_SetErrorHandler@interruptHandler+2)& (0+255),b
  2878   001DAA  EC79  F012         	call	_EUSART1_SetErrorHandler	;wreg free
  2879                           
  2880                           ;mcc_generated_files/eusart1.c: 145:     eusart1RxLastError.status = 0;
  2881   001DAE  0E00               	movlw	0
  2882   001DB0  6E43               	movwf	_eusart1RxLastError^0,c	;volatile
  2883                           
  2884                           ;mcc_generated_files/eusart1.c: 148:     eusart1RxHead = 0;
  2885   001DB2  0E00               	movlw	0
  2886   001DB4  6E46               	movwf	_eusart1RxHead^0,c	;volatile
  2887                           
  2888                           ;mcc_generated_files/eusart1.c: 149:     eusart1RxTail = 0;
  2889   001DB6  0E00               	movlw	0
  2890   001DB8  6E45               	movwf	_eusart1RxTail^0,c	;volatile
  2891                           
  2892                           ;mcc_generated_files/eusart1.c: 150:     eusart1RxCount = 0;
  2893   001DBA  0E00               	movlw	0
  2894   001DBC  6E44               	movwf	_eusart1RxCount^0,c	;volatile
  2895   001DBE                     
  2896                           ;mcc_generated_files/eusart1.c: 153:     PIE1bits.RC1IE = 1;
  2897   001DBE  8A9D               	bsf	157,5,c	;volatile
  2898   001DC0  0012               	return		;funcret
  2899   001DC2                     __end_of_EUSART1_Initialize:
  2900                           	callstack 0
  2901                           
  2902 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  2903 ;; Defined at:
  2904 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  2907 ;;		 -> PrintOnScreen(1), 
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;		None
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  1    wreg      void 
  2912 ;; Registers used:
  2913 ;;		wreg, status,2, status,0
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2919 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2922 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2923 ;;Total ram usage:        3 bytes
  2924 ;; Hardware stack levels used: 1
  2925 ;; Hardware stack levels required when called: 10
  2926 ;; This function calls:
  2927 ;;		Nothing
  2928 ;; This function is called by:
  2929 ;;		_EUSART1_Initialize
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933                           	psect	text18
  2934   0024C8                     __ptext18:
  2935                           	callstack 0
  2936   0024C8                     _EUSART1_SetRxInterruptHandler:
  2937                           	callstack 18
  2938   0024C8                     
  2939                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2940   0024C8  C060  F053         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  2941   0024CC  C061  F054         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  2942   0024D0  C062  F055         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+2,_EUSART1_RxDefaultInterruptHandl
      +                          er+2
  2943   0024D4  0012               	return		;funcret
  2944   0024D6                     __end_of_EUSART1_SetRxInterruptHandler:
  2945                           	callstack 0
  2946                           
  2947 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  2948 ;; Defined at:
  2949 ;;		line 260 in file "mcc_generated_files/eusart1.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  2952 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;		None
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  1    wreg      void 
  2957 ;; Registers used:
  2958 ;;		wreg, status,2, status,0
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2964 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2968 ;;Total ram usage:        3 bytes
  2969 ;; Hardware stack levels used: 1
  2970 ;; Hardware stack levels required when called: 10
  2971 ;; This function calls:
  2972 ;;		Nothing
  2973 ;; This function is called by:
  2974 ;;		_EUSART1_Initialize
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           	psect	text19
  2979   0024D6                     __ptext19:
  2980                           	callstack 0
  2981   0024D6                     _EUSART1_SetOverrunErrorHandler:
  2982                           	callstack 18
  2983   0024D6                     
  2984                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_OverrunErrorHandler = interruptHandler;
  2985   0024D6  C060  F0EA         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  2986   0024DA  C061  F0EB         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  2987   0024DE  C062  F0EC         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+2,_EUSART1_OverrunErrorHandler+2
  2988   0024E2  0012               	return		;funcret
  2989   0024E4                     __end_of_EUSART1_SetOverrunErrorHandler:
  2990                           	callstack 0
  2991                           
  2992 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  2993 ;; Defined at:
  2994 ;;		line 256 in file "mcc_generated_files/eusart1.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  2997 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  2998 ;; Auto vars:     Size  Location     Type
  2999 ;;		None
  3000 ;; Return value:  Size  Location     Type
  3001 ;;                  1    wreg      void 
  3002 ;; Registers used:
  3003 ;;		wreg, status,2, status,0
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3009 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3012 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3013 ;;Total ram usage:        3 bytes
  3014 ;; Hardware stack levels used: 1
  3015 ;; Hardware stack levels required when called: 10
  3016 ;; This function calls:
  3017 ;;		Nothing
  3018 ;; This function is called by:
  3019 ;;		_EUSART1_Initialize
  3020 ;; This function uses a non-reentrant model
  3021 ;;
  3022                           
  3023                           	psect	text20
  3024   0024E4                     __ptext20:
  3025                           	callstack 0
  3026   0024E4                     _EUSART1_SetFramingErrorHandler:
  3027                           	callstack 18
  3028   0024E4                     
  3029                           ;mcc_generated_files/eusart1.c: 257:     EUSART1_FramingErrorHandler = interruptHandler;
  3030   0024E4  C060  F0ED         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  3031   0024E8  C061  F0EE         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  3032   0024EC  C062  F0EF         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+2,_EUSART1_FramingErrorHandler+2
  3033   0024F0  0012               	return		;funcret
  3034   0024F2                     __end_of_EUSART1_SetFramingErrorHandler:
  3035                           	callstack 0
  3036                           
  3037 ;; *************** function _EUSART1_SetErrorHandler *****************
  3038 ;; Defined at:
  3039 ;;		line 264 in file "mcc_generated_files/eusart1.c"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  3042 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  3043 ;; Auto vars:     Size  Location     Type
  3044 ;;		None
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  1    wreg      void 
  3047 ;; Registers used:
  3048 ;;		wreg, status,2, status,0
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3054 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3057 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3058 ;;Total ram usage:        3 bytes
  3059 ;; Hardware stack levels used: 1
  3060 ;; Hardware stack levels required when called: 10
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		_EUSART1_Initialize
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           	psect	text21
  3069   0024F2                     __ptext21:
  3070                           	callstack 0
  3071   0024F2                     _EUSART1_SetErrorHandler:
  3072                           	callstack 18
  3073   0024F2                     
  3074                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_ErrorHandler = interruptHandler;
  3075   0024F2  C060  F0E7         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  3076   0024F6  C061  F0E8         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  3077   0024FA  C062  F0E9         	movff	EUSART1_SetErrorHandler@interruptHandler+2,_EUSART1_ErrorHandler+2
  3078   0024FE  0012               	return		;funcret
  3079   002500                     __end_of_EUSART1_SetErrorHandler:
  3080                           	callstack 0
  3081                           
  3082 ;; *************** function _ADC_Initialize *****************
  3083 ;; Defined at:
  3084 ;;		line 61 in file "mcc_generated_files/adc.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;		None
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;		None
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  1    wreg      void 
  3091 ;; Registers used:
  3092 ;;		wreg, status,2
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3102 ;;Total ram usage:        0 bytes
  3103 ;; Hardware stack levels used: 1
  3104 ;; Hardware stack levels required when called: 10
  3105 ;; This function calls:
  3106 ;;		Nothing
  3107 ;; This function is called by:
  3108 ;;		_SYSTEM_Initialize
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           	psect	text22
  3113   00245A                     __ptext22:
  3114                           	callstack 0
  3115   00245A                     _ADC_Initialize:
  3116                           	callstack 19
  3117   00245A                     
  3118                           ;mcc_generated_files/adc.c: 66:     ADCON1 = 0x00;
  3119   00245A  0E00               	movlw	0
  3120   00245C  6EC1               	movwf	193,c	;volatile
  3121                           
  3122                           ;mcc_generated_files/adc.c: 69:     ADCON2 = 0xBA;
  3123   00245E  0EBA               	movlw	186
  3124   002460  6EC0               	movwf	192,c	;volatile
  3125                           
  3126                           ;mcc_generated_files/adc.c: 72:     ADRESL = 0x00;
  3127   002462  0E00               	movlw	0
  3128   002464  6EC3               	movwf	195,c	;volatile
  3129                           
  3130                           ;mcc_generated_files/adc.c: 75:     ADRESH = 0x00;
  3131   002466  0E00               	movlw	0
  3132   002468  6EC4               	movwf	196,c	;volatile
  3133                           
  3134                           ;mcc_generated_files/adc.c: 78:     ADCON0 = 0x01;
  3135   00246A  0E01               	movlw	1
  3136   00246C  6EC2               	movwf	194,c	;volatile
  3137   00246E  0012               	return		;funcret
  3138   002470                     __end_of_ADC_Initialize:
  3139                           	callstack 0
  3140                           
  3141 ;; *************** function _LCD_Init *****************
  3142 ;; Defined at:
  3143 ;;		line 85 in file "LCD-library/LCD-library.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;		None
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;  LCD_f           2    0        int 
  3148 ;;  LCD_n           2    0        int 
  3149 ;;  LCD_dl          2    0        int 
  3150 ;; Return value:  Size  Location     Type
  3151 ;;                  1    wreg      void 
  3152 ;; Registers used:
  3153 ;;		wreg, status,2, status,0, cstack
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3161 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3162 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3163 ;;Total ram usage:        6 bytes
  3164 ;; Hardware stack levels used: 1
  3165 ;; Hardware stack levels required when called: 15
  3166 ;; This function calls:
  3167 ;;		_LCD_4bitCode
  3168 ;;		_LCD_4bitCodeNoWait
  3169 ;;		_LCD_8bitCode
  3170 ;;		_LCD_8bitCodeNoWait
  3171 ;;		_LCD_SetCursorAt
  3172 ;;		__delay_ms
  3173 ;;		__delay_us
  3174 ;; This function is called by:
  3175 ;;		_main
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           	psect	text23
  3180   00134C                     __ptext23:
  3181                           	callstack 0
  3182   00134C                     _LCD_Init:
  3183                           	callstack 15
  3184   00134C                     
  3185                           ;LCD-library/LCD-library.c: 86:     TRISE = TRISGbits.RG5 = TRISHbits.TRISH2 = TRISHbits
      +                          .TRISH1 = TRISHbits.TRISH0 = 0;
  3186   00134C  9099               	bcf	153,0,c	;volatile
  3187   00134E  9299               	bcf	153,1,c	;volatile
  3188   001350  9499               	bcf	153,2,c	;volatile
  3189   001352  9A98               	bcf	152,5,c	;volatile
  3190   001354  0E00               	movlw	0
  3191   001356  BA98               	btfsc	152,5,c	;volatile
  3192   001358  0E01               	movlw	1
  3193   00135A  6E96               	movwf	150,c	;volatile
  3194   00135C                     
  3195                           ;LCD-library/LCD-library.c: 90:     int LCD_dl, LCD_n, LCD_f;;LCD-library/LCD-library.c:
      +                           91:     if(8 == 8) LCD_dl = 1; else if(8 == 4) LCD_dl = 0;
  3196   00135C  0E00               	movlw	0
  3197   00135E  6E84               	movwf	132,c	;volatile
  3198   001360  B084               	btfsc	132,0,c	;volatile
  3199   001362  D002               	bra	u2715
  3200   001364  9287               	bcf	135,1,c	;volatile
  3201   001366  D001               	bra	u2716
  3202   001368                     u2715:
  3203   001368  8287               	bsf	135,1,c	;volatile
  3204   00136A                     u2716:
  3205   00136A  B287               	btfsc	135,1,c	;volatile
  3206   00136C  D002               	bra	u2725
  3207   00136E  9487               	bcf	135,2,c	;volatile
  3208   001370  D001               	bra	u2726
  3209   001372                     u2725:
  3210   001372  8487               	bsf	135,2,c	;volatile
  3211   001374                     u2726:
  3212   001374  A487               	btfss	135,2,c	;volatile
  3213   001376  D002               	bra	u2735
  3214   001378  8087               	bsf	135,0,c	;volatile
  3215   00137A  D001               	bra	u2737
  3216   00137C                     u2735:
  3217   00137C  9087               	bcf	135,0,c	;volatile
  3218   00137E                     u2737:
  3219   00137E                     
  3220                           ;LCD-library/LCD-library.c: 98:         _delay_ms(50);
  3221   00137E  0E00               	movlw	0
  3222   001380  0100               	movlb	0	; () banked
  3223   001382  6F61               	movwf	(__delay_ms@ms+1)& (0+255),b
  3224   001384  0E32               	movlw	50
  3225   001386  6F60               	movwf	__delay_ms@ms& (0+255),b
  3226   001388  EC61  F010         	call	__delay_ms	;wreg free
  3227   00138C                     
  3228                           ;LCD-library/LCD-library.c: 99:         LCD_8bitCodeNoWait(0b0000100000 + (LCD_dl<<4) + 
      +                          (LCD_n<<3) + (LCD_f<<2));
  3229   00138C  0E00               	movlw	0
  3230   00138E  0100               	movlb	0	; () banked
  3231   001390  6F61               	movwf	(LCD_8bitCodeNoWait@code+1)& (0+255),b
  3232   001392  0E38               	movlw	56
  3233   001394  6F60               	movwf	LCD_8bitCodeNoWait@code& (0+255),b
  3234   001396  EC9F  F00F         	call	_LCD_8bitCodeNoWait	;wreg free
  3235   00139A                     
  3236                           ;LCD-library/LCD-library.c: 100:         _delay_ms(10);
  3237   00139A  0E00               	movlw	0
  3238   00139C  0100               	movlb	0	; () banked
  3239   00139E  6F61               	movwf	(__delay_ms@ms+1)& (0+255),b
  3240   0013A0  0E0A               	movlw	10
  3241   0013A2  6F60               	movwf	__delay_ms@ms& (0+255),b
  3242   0013A4  EC61  F010         	call	__delay_ms	;wreg free
  3243   0013A8                     
  3244                           ;LCD-library/LCD-library.c: 101:         LCD_8bitCodeNoWait(0b0000100000 + (LCD_dl<<4) +
      +                           (LCD_n<<3) + (LCD_f<<2));
  3245   0013A8  0E00               	movlw	0
  3246   0013AA  0100               	movlb	0	; () banked
  3247   0013AC  6F61               	movwf	(LCD_8bitCodeNoWait@code+1)& (0+255),b
  3248   0013AE  0E38               	movlw	56
  3249   0013B0  6F60               	movwf	LCD_8bitCodeNoWait@code& (0+255),b
  3250   0013B2  EC9F  F00F         	call	_LCD_8bitCodeNoWait	;wreg free
  3251   0013B6                     
  3252                           ;LCD-library/LCD-library.c: 102:         _delay_us(200);
  3253   0013B6  0E00               	movlw	0
  3254   0013B8  0100               	movlb	0	; () banked
  3255   0013BA  6F61               	movwf	(__delay_us@us+1)& (0+255),b
  3256   0013BC  0EC8               	movlw	200
  3257   0013BE  6F60               	movwf	__delay_us@us& (0+255),b
  3258   0013C0  EC68  F011         	call	__delay_us	;wreg free
  3259   0013C4                     
  3260                           ;LCD-library/LCD-library.c: 103:         LCD_8bitCodeNoWait(0b0000100000 + (LCD_dl<<4) +
      +                           (LCD_n<<3) + (LCD_f<<2));
  3261   0013C4  0E00               	movlw	0
  3262   0013C6  0100               	movlb	0	; () banked
  3263   0013C8  6F61               	movwf	(LCD_8bitCodeNoWait@code+1)& (0+255),b
  3264   0013CA  0E38               	movlw	56
  3265   0013CC  6F60               	movwf	LCD_8bitCodeNoWait@code& (0+255),b
  3266   0013CE  EC9F  F00F         	call	_LCD_8bitCodeNoWait	;wreg free
  3267   0013D2                     
  3268                           ;LCD-library/LCD-library.c: 105:         _delay_us(200);
  3269   0013D2  0E00               	movlw	0
  3270   0013D4  0100               	movlb	0	; () banked
  3271   0013D6  6F61               	movwf	(__delay_us@us+1)& (0+255),b
  3272   0013D8  0EC8               	movlw	200
  3273   0013DA  6F60               	movwf	__delay_us@us& (0+255),b
  3274   0013DC  EC68  F011         	call	__delay_us	;wreg free
  3275   0013E0                     
  3276                           ;LCD-library/LCD-library.c: 107:         LCD_8bitCode(0b0000100000 + (LCD_dl<<4) + (LCD_
      +                          n<<3) + (LCD_f<<2));
  3277   0013E0  0E00               	movlw	0
  3278   0013E2  0100               	movlb	0	; () banked
  3279   0013E4  6F66               	movwf	(LCD_8bitCode@code+1)& (0+255),b
  3280   0013E6  0E38               	movlw	56
  3281   0013E8  6F65               	movwf	LCD_8bitCode@code& (0+255),b
  3282   0013EA  EC38  F012         	call	_LCD_8bitCode	;wreg free
  3283   0013EE                     
  3284                           ;LCD-library/LCD-library.c: 108:         LCD_8bitCode(0b0000001000);
  3285   0013EE  0E00               	movlw	0
  3286   0013F0  0100               	movlb	0	; () banked
  3287   0013F2  6F66               	movwf	(LCD_8bitCode@code+1)& (0+255),b
  3288   0013F4  0E08               	movlw	8
  3289   0013F6  6F65               	movwf	LCD_8bitCode@code& (0+255),b
  3290   0013F8  EC38  F012         	call	_LCD_8bitCode	;wreg free
  3291   0013FC                     
  3292                           ;LCD-library/LCD-library.c: 109:         LCD_8bitCode(0b0000000001);
  3293   0013FC  0E00               	movlw	0
  3294   0013FE  0100               	movlb	0	; () banked
  3295   001400  6F66               	movwf	(LCD_8bitCode@code+1)& (0+255),b
  3296   001402  0E01               	movlw	1
  3297   001404  6F65               	movwf	LCD_8bitCode@code& (0+255),b
  3298   001406  EC38  F012         	call	_LCD_8bitCode	;wreg free
  3299   00140A                     
  3300                           ;LCD-library/LCD-library.c: 110:         LCD_8bitCode(0b0000000100 + (LCD_isIncrement<<1
      +                          ) + LCD_isShift);
  3301   00140A  C04D  F06F         	movff	_LCD_isIncrement,??_LCD_Init
  3302   00140E  C04E  F070         	movff	_LCD_isIncrement+1,??_LCD_Init+1
  3303   001412  90D8               	bcf	status,0,c
  3304   001414  0100               	movlb	0	; () banked
  3305   001416  376F               	rlcf	??_LCD_Init& (0+255),f,b
  3306   001418  3770               	rlcf	(??_LCD_Init+1)& (0+255),f,b
  3307   00141A  0E04               	movlw	4
  3308   00141C  256F               	addwf	??_LCD_Init& (0+255),w,b
  3309   00141E  6F65               	movwf	LCD_8bitCode@code& (0+255),b
  3310   001420  0E00               	movlw	0
  3311   001422  2170               	addwfc	(??_LCD_Init+1)& (0+255),w,b
  3312   001424  6F66               	movwf	(LCD_8bitCode@code+1)& (0+255),b
  3313   001426  EC38  F012         	call	_LCD_8bitCode	;wreg free
  3314   00142A                     
  3315                           ;LCD-library/LCD-library.c: 113:         LCD_8bitCode(0b0000001000 + (LCD_isDisplayOn<<2
      +                          ) + (LCD_isCursorOn<<1) + LCD_isCursorBlinking);
  3316   00142A  C049  F06F         	movff	_LCD_isCursorOn,??_LCD_Init
  3317   00142E  C04A  F070         	movff	_LCD_isCursorOn+1,??_LCD_Init+1
  3318   001432  90D8               	bcf	status,0,c
  3319   001434  0100               	movlb	0	; () banked
  3320   001436  376F               	rlcf	??_LCD_Init& (0+255),f,b
  3321   001438  3770               	rlcf	(??_LCD_Init+1)& (0+255),f,b
  3322   00143A  C04B  F071         	movff	_LCD_isDisplayOn,??_LCD_Init+2
  3323   00143E  C04C  F072         	movff	_LCD_isDisplayOn+1,??_LCD_Init+3
  3324   001442  90D8               	bcf	status,0,c
  3325   001444  3771               	rlcf	(??_LCD_Init+2)& (0+255),f,b
  3326   001446  3772               	rlcf	(??_LCD_Init+3)& (0+255),f,b
  3327   001448  90D8               	bcf	status,0,c
  3328   00144A  3771               	rlcf	(??_LCD_Init+2)& (0+255),f,b
  3329   00144C  3772               	rlcf	(??_LCD_Init+3)& (0+255),f,b
  3330   00144E  516F               	movf	??_LCD_Init& (0+255),w,b
  3331   001450  2571               	addwf	(??_LCD_Init+2)& (0+255),w,b
  3332   001452  6F73               	movwf	(??_LCD_Init+4)& (0+255),b
  3333   001454  5170               	movf	(??_LCD_Init+1)& (0+255),w,b
  3334   001456  2172               	addwfc	(??_LCD_Init+3)& (0+255),w,b
  3335   001458  6F74               	movwf	(??_LCD_Init+5)& (0+255),b
  3336   00145A  503F               	movf	_LCD_isCursorBlinking^0,w,c
  3337   00145C  2773               	addwf	(??_LCD_Init+4)& (0+255),f,b
  3338   00145E  5040               	movf	(_LCD_isCursorBlinking+1)^0,w,c
  3339   001460  2374               	addwfc	(??_LCD_Init+5)& (0+255),f,b
  3340   001462  0E08               	movlw	8
  3341   001464  2573               	addwf	(??_LCD_Init+4)& (0+255),w,b
  3342   001466  6F65               	movwf	LCD_8bitCode@code& (0+255),b
  3343   001468  0E00               	movlw	0
  3344   00146A  2174               	addwfc	(??_LCD_Init+5)& (0+255),w,b
  3345   00146C  6F66               	movwf	(LCD_8bitCode@code+1)& (0+255),b
  3346   00146E  EC38  F012         	call	_LCD_8bitCode	;wreg free
  3347   001472                     
  3348                           ;LCD-library/LCD-library.c: 135:     LCD_SetCursorAt(LCD_posX, LCD_posY);
  3349   001472  C051  F069         	movff	_LCD_posX,LCD_SetCursorAt@pos
  3350   001476  C052  F06A         	movff	_LCD_posX+1,LCD_SetCursorAt@pos+1
  3351   00147A  C04F  F06B         	movff	_LCD_posY,LCD_SetCursorAt@row
  3352   00147E  C050  F06C         	movff	_LCD_posY+1,LCD_SetCursorAt@row+1
  3353   001482  ECD6  F00B         	call	_LCD_SetCursorAt	;wreg free
  3354   001486  0012               	return		;funcret
  3355   001488                     __end_of_LCD_Init:
  3356                           	callstack 0
  3357                           
  3358 ;; *************** function __delay_ms *****************
  3359 ;; Defined at:
  3360 ;;		line 8 in file "LCD-library/LCD-library.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;  ms              2    0[BANK0 ] int 
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;  i               2    3[BANK0 ] int 
  3365 ;; Return value:  Size  Location     Type
  3366 ;;                  1    wreg      void 
  3367 ;; Registers used:
  3368 ;;		wreg, status,2, status,0
  3369 ;; Tracked objects:
  3370 ;;		On entry : 0/0
  3371 ;;		On exit  : 0/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3374 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3375 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3376 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3377 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3378 ;;Total ram usage:        5 bytes
  3379 ;; Hardware stack levels used: 1
  3380 ;; Hardware stack levels required when called: 10
  3381 ;; This function calls:
  3382 ;;		Nothing
  3383 ;; This function is called by:
  3384 ;;		_LCD_Init
  3385 ;;		___delay_s
  3386 ;;		_LCD_TypeStr
  3387 ;; This function uses a non-reentrant model
  3388 ;;
  3389                           
  3390                           	psect	text24
  3391   0020C2                     __ptext24:
  3392                           	callstack 0
  3393   0020C2                     __delay_ms:
  3394                           	callstack 19
  3395   0020C2  0E00               	movlw	0
  3396   0020C4  0100               	movlb	0	; () banked
  3397   0020C6  6F64               	movwf	(__delay_ms@i+1)& (0+255),b
  3398   0020C8  0E00               	movlw	0
  3399   0020CA  6F63               	movwf	__delay_ms@i& (0+255),b
  3400   0020CC  EF74  F010         	goto	l55
  3401   0020D0                     l3554:
  3402                           
  3403                           ; BSR set to: 0
  3404   0020D0  0E09               	movlw	9
  3405   0020D2  0100               	movlb	0	; () banked
  3406   0020D4  6F62               	movwf	??__delay_ms& (0+255),b
  3407   0020D6  0E1C               	movlw	28
  3408   0020D8                     u2967:
  3409   0020D8  2EE8               	decfsz	wreg,f,c
  3410   0020DA  D7FE               	bra	u2967
  3411   0020DC  2F62               	decfsz	??__delay_ms& (0+255),f,b
  3412   0020DE  D7FC               	bra	u2967
  3413   0020E0  F000               	nop	
  3414   0020E2  0100               	movlb	0	; () banked
  3415   0020E4  4B63               	infsnz	__delay_ms@i& (0+255),f,b
  3416   0020E6  2B64               	incf	(__delay_ms@i+1)& (0+255),f,b
  3417   0020E8                     l55:
  3418                           
  3419                           ; BSR set to: 0
  3420   0020E8  5160               	movf	__delay_ms@ms& (0+255),w,b
  3421   0020EA  5D63               	subwf	__delay_ms@i& (0+255),w,b
  3422   0020EC  5164               	movf	(__delay_ms@i+1)& (0+255),w,b
  3423   0020EE  0A80               	xorlw	128
  3424   0020F0  6F62               	movwf	??__delay_ms& (0+255),b
  3425   0020F2  5161               	movf	(__delay_ms@ms+1)& (0+255),w,b
  3426   0020F4  0A80               	xorlw	128
  3427   0020F6  5962               	subwfb	??__delay_ms& (0+255),w,b
  3428   0020F8  A0D8               	btfss	status,0,c
  3429   0020FA  EF81  F010         	goto	u2651
  3430   0020FE  EF83  F010         	goto	u2650
  3431   002102                     u2651:
  3432   002102  EF68  F010         	goto	l3554
  3433   002106                     u2650:
  3434   002106                     
  3435                           ; BSR set to: 0
  3436   002106  0012               	return		;funcret
  3437   002108                     __end_of__delay_ms:
  3438                           	callstack 0
  3439                           
  3440 ;; *************** function _LCD_SetCursorAt *****************
  3441 ;; Defined at:
  3442 ;;		line 232 in file "LCD-library/LCD-library.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;  pos             2    9[BANK0 ] int 
  3445 ;;  row             2   11[BANK0 ] int 
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;		None
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  1    wreg      void 
  3450 ;; Registers used:
  3451 ;;		wreg, status,2, status,0, cstack
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3457 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3459 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3460 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3461 ;;Total ram usage:        6 bytes
  3462 ;; Hardware stack levels used: 1
  3463 ;; Hardware stack levels required when called: 14
  3464 ;; This function calls:
  3465 ;;		_LCD_Code
  3466 ;; This function is called by:
  3467 ;;		_LCD_Init
  3468 ;;		_LCD_TypeStr
  3469 ;;		_LCD_MoveCursorUp
  3470 ;;		_LCD_MoveCursorDown
  3471 ;;		_LCD_NewChar
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475                           	psect	text25
  3476   0017AC                     __ptext25:
  3477                           	callstack 0
  3478   0017AC                     _LCD_SetCursorAt:
  3479                           	callstack 15
  3480   0017AC                     
  3481                           ;LCD-library/LCD-library.c: 233:     if(pos >= 1 && pos <= 16 && row >= 1 && row <= 2){
  3482   0017AC  0100               	movlb	0	; () banked
  3483   0017AE  BF6A               	btfsc	(LCD_SetCursorAt@pos+1)& (0+255),7,b
  3484   0017B0  EFE2  F00B         	goto	u2661
  3485   0017B4  516A               	movf	(LCD_SetCursorAt@pos+1)& (0+255),w,b
  3486   0017B6  E108               	bnz	u2660
  3487   0017B8  0569               	decf	LCD_SetCursorAt@pos& (0+255),w,b
  3488   0017BA  A0D8               	btfss	status,0,c
  3489   0017BC  EFE2  F00B         	goto	u2661
  3490   0017C0  EFE4  F00B         	goto	u2660
  3491   0017C4                     u2661:
  3492   0017C4  EF41  F00C         	goto	l165
  3493   0017C8                     u2660:
  3494   0017C8                     
  3495                           ; BSR set to: 0
  3496   0017C8  BF6A               	btfsc	(LCD_SetCursorAt@pos+1)& (0+255),7,b
  3497   0017CA  EFF2  F00B         	goto	u2670
  3498   0017CE  516A               	movf	(LCD_SetCursorAt@pos+1)& (0+255),w,b
  3499   0017D0  E107               	bnz	u2671
  3500   0017D2  0E11               	movlw	17
  3501   0017D4  5D69               	subwf	LCD_SetCursorAt@pos& (0+255),w,b
  3502   0017D6  B0D8               	btfsc	status,0,c
  3503   0017D8  EFF0  F00B         	goto	u2671
  3504   0017DC  EFF2  F00B         	goto	u2670
  3505   0017E0                     u2671:
  3506   0017E0  EF41  F00C         	goto	l165
  3507   0017E4                     u2670:
  3508   0017E4                     
  3509                           ; BSR set to: 0
  3510   0017E4  BF6C               	btfsc	(LCD_SetCursorAt@row+1)& (0+255),7,b
  3511   0017E6  EFFD  F00B         	goto	u2681
  3512   0017EA  516C               	movf	(LCD_SetCursorAt@row+1)& (0+255),w,b
  3513   0017EC  E108               	bnz	u2680
  3514   0017EE  056B               	decf	LCD_SetCursorAt@row& (0+255),w,b
  3515   0017F0  A0D8               	btfss	status,0,c
  3516   0017F2  EFFD  F00B         	goto	u2681
  3517   0017F6  EFFF  F00B         	goto	u2680
  3518   0017FA                     u2681:
  3519   0017FA  EF41  F00C         	goto	l165
  3520   0017FE                     u2680:
  3521   0017FE                     
  3522                           ; BSR set to: 0
  3523   0017FE  BF6C               	btfsc	(LCD_SetCursorAt@row+1)& (0+255),7,b
  3524   001800  EF0D  F00C         	goto	u2690
  3525   001804  516C               	movf	(LCD_SetCursorAt@row+1)& (0+255),w,b
  3526   001806  E107               	bnz	u2691
  3527   001808  0E03               	movlw	3
  3528   00180A  5D6B               	subwf	LCD_SetCursorAt@row& (0+255),w,b
  3529   00180C  B0D8               	btfsc	status,0,c
  3530   00180E  EF0B  F00C         	goto	u2691
  3531   001812  EF0D  F00C         	goto	u2690
  3532   001816                     u2691:
  3533   001816  EF41  F00C         	goto	l165
  3534   00181A                     u2690:
  3535   00181A                     
  3536                           ; BSR set to: 0
  3537                           ;LCD-library/LCD-library.c: 234:         LCD_posX = pos;
  3538   00181A  C069  F051         	movff	LCD_SetCursorAt@pos,_LCD_posX
  3539   00181E  C06A  F052         	movff	LCD_SetCursorAt@pos+1,_LCD_posX+1
  3540                           
  3541                           ;LCD-library/LCD-library.c: 235:         LCD_posY = row;
  3542   001822  C06B  F04F         	movff	LCD_SetCursorAt@row,_LCD_posY
  3543   001826  C06C  F050         	movff	LCD_SetCursorAt@row+1,_LCD_posY+1
  3544                           
  3545                           ;LCD-library/LCD-library.c: 236:         switch(row) {
  3546   00182A  EF2B  F00C         	goto	l3576
  3547   00182E                     l3568:
  3548                           
  3549                           ; BSR set to: 0
  3550   00182E  0E7F               	movlw	127
  3551   001830  2569               	addwf	LCD_SetCursorAt@pos& (0+255),w,b
  3552   001832  6F67               	movwf	LCD_Code@code& (0+255),b
  3553   001834  0E00               	movlw	0
  3554   001836  216A               	addwfc	(LCD_SetCursorAt@pos+1)& (0+255),w,b
  3555   001838  6F68               	movwf	(LCD_Code@code+1)& (0+255),b
  3556   00183A  EC80  F012         	call	_LCD_Code	;wreg free
  3557   00183E  EF41  F00C         	goto	l165
  3558   001842                     l3570:
  3559                           
  3560                           ; BSR set to: 0
  3561   001842  0EBF               	movlw	191
  3562   001844  2569               	addwf	LCD_SetCursorAt@pos& (0+255),w,b
  3563   001846  6F67               	movwf	LCD_Code@code& (0+255),b
  3564   001848  0E00               	movlw	0
  3565   00184A  216A               	addwfc	(LCD_SetCursorAt@pos+1)& (0+255),w,b
  3566   00184C  6F68               	movwf	(LCD_Code@code+1)& (0+255),b
  3567   00184E  EC80  F012         	call	_LCD_Code	;wreg free
  3568   001852  EF41  F00C         	goto	l165
  3569   001856                     l3576:
  3570                           
  3571                           ; BSR set to: 0
  3572   001856  C06B  F06D         	movff	LCD_SetCursorAt@row,??_LCD_SetCursorAt
  3573   00185A  C06C  F06E         	movff	LCD_SetCursorAt@row+1,??_LCD_SetCursorAt+1
  3574                           
  3575                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3576                           ; Switch size 1, requested type "simple"
  3577                           ; Number of cases is 1, Range of values is 0 to 0
  3578                           ; switch strategies available:
  3579                           ; Name         Instructions Cycles
  3580                           ; simple_byte            4     3 (average)
  3581                           ;	Chosen strategy is simple_byte
  3582   00185E  516E               	movf	(??_LCD_SetCursorAt+1)& (0+255),w,b
  3583   001860  0A00               	xorlw	0	; case 0
  3584   001862  B4D8               	btfsc	status,2,c
  3585   001864  EF36  F00C         	goto	l3922
  3586   001868  EF17  F00C         	goto	l3568
  3587   00186C                     l3922:
  3588                           
  3589                           ; BSR set to: 0
  3590                           ; Switch size 1, requested type "simple"
  3591                           ; Number of cases is 2, Range of values is 1 to 2
  3592                           ; switch strategies available:
  3593                           ; Name         Instructions Cycles
  3594                           ; simple_byte            7     4 (average)
  3595                           ;	Chosen strategy is simple_byte
  3596   00186C  516D               	movf	??_LCD_SetCursorAt& (0+255),w,b
  3597   00186E  0A01               	xorlw	1	; case 1
  3598   001870  B4D8               	btfsc	status,2,c
  3599   001872  EF17  F00C         	goto	l3568
  3600   001876  0A03               	xorlw	3	; case 2
  3601   001878  B4D8               	btfsc	status,2,c
  3602   00187A  EF21  F00C         	goto	l3570
  3603   00187E  EF17  F00C         	goto	l3568
  3604   001882                     l165:
  3605   001882  0012               	return		;funcret
  3606   001884                     __end_of_LCD_SetCursorAt:
  3607                           	callstack 0
  3608                           
  3609 ;; *************** function _LCD_Code *****************
  3610 ;; Defined at:
  3611 ;;		line 77 in file "LCD-library/LCD-library.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;  code            2    7[BANK0 ] int 
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;		None
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  1    wreg      void 
  3618 ;; Registers used:
  3619 ;;		wreg, status,2, status,0, cstack
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3625 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3628 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3629 ;;Total ram usage:        2 bytes
  3630 ;; Hardware stack levels used: 1
  3631 ;; Hardware stack levels required when called: 13
  3632 ;; This function calls:
  3633 ;;		_LCD_4bitCode
  3634 ;;		_LCD_8bitCode
  3635 ;; This function is called by:
  3636 ;;		_LCD_SetCursorAt
  3637 ;;		_LCD_TurnOff
  3638 ;;		_LCD_TurnOn
  3639 ;;		_LCD_home
  3640 ;;		_LCD_CursorOff
  3641 ;;		_LCD_CursorOn
  3642 ;;		_LCD_CursorBlinkingOn
  3643 ;;		_LCD_CursorBlinkingOff
  3644 ;;		_LCD_NewChar
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           	psect	text26
  3649   002500                     __ptext26:
  3650                           	callstack 0
  3651   002500                     _LCD_Code:
  3652                           	callstack 15
  3653   002500  C067  F065         	movff	LCD_Code@code,LCD_8bitCode@code
  3654   002504  C068  F066         	movff	LCD_Code@code+1,LCD_8bitCode@code+1
  3655   002508  EC38  F012         	call	_LCD_8bitCode	;wreg free
  3656   00250C  0012               	return		;funcret
  3657   00250E                     __end_of_LCD_Code:
  3658                           	callstack 0
  3659                           
  3660 ;; *************** function _LCD_8bitCode *****************
  3661 ;; Defined at:
  3662 ;;		line 59 in file "LCD-library/LCD-library.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;  code            2    5[BANK0 ] int 
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;		None
  3667 ;; Return value:  Size  Location     Type
  3668 ;;                  1    wreg      void 
  3669 ;; Registers used:
  3670 ;;		wreg, status,2, status,0, cstack
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3676 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3679 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3680 ;;Total ram usage:        2 bytes
  3681 ;; Hardware stack levels used: 1
  3682 ;; Hardware stack levels required when called: 12
  3683 ;; This function calls:
  3684 ;;		_LCD_8bitCodeNoWait
  3685 ;;		_LCD_Wait
  3686 ;; This function is called by:
  3687 ;;		_LCD_Code
  3688 ;;		_LCD_Init
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692                           	psect	text27
  3693   002470                     __ptext27:
  3694                           	callstack 0
  3695   002470                     _LCD_8bitCode:
  3696                           	callstack 15
  3697   002470                     
  3698                           ;LCD-library/LCD-library.c: 60:     LCD_8bitCodeNoWait(code);
  3699   002470  C065  F060         	movff	LCD_8bitCode@code,LCD_8bitCodeNoWait@code
  3700   002474  C066  F061         	movff	LCD_8bitCode@code+1,LCD_8bitCodeNoWait@code+1
  3701   002478  EC9F  F00F         	call	_LCD_8bitCodeNoWait	;wreg free
  3702                           
  3703                           ;LCD-library/LCD-library.c: 61:     LCD_Wait();
  3704   00247C  EC5C  F012         	call	_LCD_Wait	;wreg free
  3705   002480  0012               	return		;funcret
  3706   002482                     __end_of_LCD_8bitCode:
  3707                           	callstack 0
  3708                           
  3709 ;; *************** function _LCD_8bitCodeNoWait *****************
  3710 ;; Defined at:
  3711 ;;		line 52 in file "LCD-library/LCD-library.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;  code            2    0[BANK0 ] int 
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;		None
  3716 ;; Return value:  Size  Location     Type
  3717 ;;                  1    wreg      void 
  3718 ;; Registers used:
  3719 ;;		wreg, status,2, status,0
  3720 ;; Tracked objects:
  3721 ;;		On entry : 0/0
  3722 ;;		On exit  : 0/0
  3723 ;;		Unchanged: 0/0
  3724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3725 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3727 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3728 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3729 ;;Total ram usage:        5 bytes
  3730 ;; Hardware stack levels used: 1
  3731 ;; Hardware stack levels required when called: 10
  3732 ;; This function calls:
  3733 ;;		Nothing
  3734 ;; This function is called by:
  3735 ;;		_LCD_8bitCode
  3736 ;;		_LCD_Init
  3737 ;; This function uses a non-reentrant model
  3738 ;;
  3739                           
  3740                           	psect	text28
  3741   001F3E                     __ptext28:
  3742                           	callstack 0
  3743   001F3E                     _LCD_8bitCodeNoWait:
  3744                           	callstack 16
  3745   001F3E                     
  3746                           ;LCD-library/LCD-library.c: 53:     PORTHbits.RH2 = (code & 0b1000000000) >> 9;
  3747   001F3E  C060  F062         	movff	LCD_8bitCodeNoWait@code,??_LCD_8bitCodeNoWait
  3748   001F42  C061  F063         	movff	LCD_8bitCodeNoWait@code+1,??_LCD_8bitCodeNoWait+1
  3749   001F46  0E09               	movlw	9
  3750   001F48  0100               	movlb	0	; () banked
  3751   001F4A  6F64               	movwf	(??_LCD_8bitCodeNoWait+2)& (0+255),b
  3752   001F4C                     u2345:
  3753   001F4C  3563               	rlcf	(??_LCD_8bitCodeNoWait+1)& (0+255),w,b
  3754   001F4E  3363               	rrcf	(??_LCD_8bitCodeNoWait+1)& (0+255),f,b
  3755   001F50  3362               	rrcf	??_LCD_8bitCodeNoWait& (0+255),f,b
  3756   001F52  2F64               	decfsz	(??_LCD_8bitCodeNoWait+2)& (0+255),f,b
  3757   001F54  EFA6  F00F         	goto	u2345
  3758   001F58  0E01               	movlw	1
  3759   001F5A  1762               	andwf	??_LCD_8bitCodeNoWait& (0+255),f,b
  3760   001F5C  4762               	rlncf	??_LCD_8bitCodeNoWait& (0+255),f,b
  3761   001F5E  4762               	rlncf	??_LCD_8bitCodeNoWait& (0+255),f,b
  3762   001F60  5087               	movf	135,w,c	;volatile
  3763   001F62  1962               	xorwf	??_LCD_8bitCodeNoWait& (0+255),w,b
  3764   001F64  0BFB               	andlw	-5
  3765   001F66  1962               	xorwf	??_LCD_8bitCodeNoWait& (0+255),w,b
  3766   001F68  6E87               	movwf	135,c	;volatile
  3767                           
  3768                           ;LCD-library/LCD-library.c: 54:     PORTHbits.RH1 = (code & 0b0100000000) >> 8;
  3769   001F6A  C061  F062         	movff	LCD_8bitCodeNoWait@code+1,??_LCD_8bitCodeNoWait
  3770   001F6E  6B63               	clrf	(??_LCD_8bitCodeNoWait+1)& (0+255),b
  3771   001F70  BF62               	btfsc	??_LCD_8bitCodeNoWait& (0+255),7,b
  3772   001F72  6963               	setf	(??_LCD_8bitCodeNoWait+1)& (0+255),b
  3773   001F74  0E01               	movlw	1
  3774   001F76  1762               	andwf	??_LCD_8bitCodeNoWait& (0+255),f,b
  3775   001F78  4762               	rlncf	??_LCD_8bitCodeNoWait& (0+255),f,b
  3776   001F7A  5087               	movf	135,w,c	;volatile
  3777   001F7C  1962               	xorwf	??_LCD_8bitCodeNoWait& (0+255),w,b
  3778   001F7E  0BFD               	andlw	-3
  3779   001F80  1962               	xorwf	??_LCD_8bitCodeNoWait& (0+255),w,b
  3780   001F82  6E87               	movwf	135,c	;volatile
  3781   001F84                     
  3782                           ; BSR set to: 0
  3783                           ;LCD-library/LCD-library.c: 55:     PORTE = code & 0b0011111111;
  3784   001F84  C060  FF84         	movff	LCD_8bitCodeNoWait@code,3972	;volatile
  3785   001F88                     
  3786                           ; BSR set to: 0
  3787                           ;LCD-library/LCD-library.c: 56:     PORTHbits.RH0 = 1;
  3788   001F88  8087               	bsf	135,0,c	;volatile
  3789   001F8A                     
  3790                           ; BSR set to: 0
  3791                           ;LCD-library/LCD-library.c: 57:     PORTHbits.RH0 = 0;
  3792   001F8A  9087               	bcf	135,0,c	;volatile
  3793   001F8C                     
  3794                           ; BSR set to: 0
  3795   001F8C  0012               	return		;funcret
  3796   001F8E                     __end_of_LCD_8bitCodeNoWait:
  3797                           	callstack 0
  3798                           
  3799 ;; *************** function _LCD_4bitCode *****************
  3800 ;; Defined at:
  3801 ;;		line 72 in file "LCD-library/LCD-library.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  code            2    5[BANK0 ] int 
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;		None
  3806 ;; Return value:  Size  Location     Type
  3807 ;;                  1    wreg      void 
  3808 ;; Registers used:
  3809 ;;		wreg, status,2, status,0, cstack
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3815 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3818 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3819 ;;Total ram usage:        2 bytes
  3820 ;; Hardware stack levels used: 1
  3821 ;; Hardware stack levels required when called: 12
  3822 ;; This function calls:
  3823 ;;		_LCD_4bitCodeNoWait
  3824 ;;		_LCD_Wait
  3825 ;; This function is called by:
  3826 ;;		_LCD_Code
  3827 ;;		_LCD_Init
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           
  3831                           	psect	text29
  3832   002482                     __ptext29:
  3833                           	callstack 0
  3834   002482                     _LCD_4bitCode:
  3835                           	callstack 15
  3836   002482                     
  3837                           ;LCD-library/LCD-library.c: 73:     LCD_4bitCodeNoWait(code);
  3838   002482  C065  F060         	movff	LCD_4bitCode@code,LCD_4bitCodeNoWait@code
  3839   002486  C066  F061         	movff	LCD_4bitCode@code+1,LCD_4bitCodeNoWait@code+1
  3840   00248A  ECE1  F00E         	call	_LCD_4bitCodeNoWait	;wreg free
  3841                           
  3842                           ;LCD-library/LCD-library.c: 74:     LCD_Wait();
  3843   00248E  EC5C  F012         	call	_LCD_Wait	;wreg free
  3844   002492  0012               	return		;funcret
  3845   002494                     __end_of_LCD_4bitCode:
  3846                           	callstack 0
  3847                           
  3848 ;; *************** function _LCD_Wait *****************
  3849 ;; Defined at:
  3850 ;;		line 11 in file "LCD-library/LCD-library.c"
  3851 ;; Parameters:    Size  Location     Type
  3852 ;;		None
  3853 ;; Auto vars:     Size  Location     Type
  3854 ;;		None
  3855 ;; Return value:  Size  Location     Type
  3856 ;;                  1    wreg      void 
  3857 ;; Registers used:
  3858 ;;		wreg, status,2, status,0, cstack
  3859 ;; Tracked objects:
  3860 ;;		On entry : 0/0
  3861 ;;		On exit  : 0/0
  3862 ;;		Unchanged: 0/0
  3863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3868 ;;Total ram usage:        0 bytes
  3869 ;; Hardware stack levels used: 1
  3870 ;; Hardware stack levels required when called: 11
  3871 ;; This function calls:
  3872 ;;		___delay
  3873 ;;		__delay_us
  3874 ;; This function is called by:
  3875 ;;		_LCD_8bitCode
  3876 ;;		_LCD_4bitCode
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           	psect	text30
  3881   0024B8                     __ptext30:
  3882                           	callstack 0
  3883   0024B8                     _LCD_Wait:
  3884                           	callstack 15
  3885   0024B8  0E01               	movlw	1
  3886   0024BA  0100               	movlb	0	; () banked
  3887   0024BC  6F61               	movwf	(__delay_us@us+1)& (0+255),b
  3888   0024BE  0EF4               	movlw	244
  3889   0024C0  6F60               	movwf	__delay_us@us& (0+255),b
  3890   0024C2  EC68  F011         	call	__delay_us	;wreg free
  3891   0024C6  0012               	return		;funcret
  3892   0024C8                     __end_of_LCD_Wait:
  3893                           	callstack 0
  3894                           
  3895 ;; *************** function __delay_us *****************
  3896 ;; Defined at:
  3897 ;;		line 7 in file "LCD-library/LCD-library.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;  us              2    0[BANK0 ] int 
  3900 ;; Auto vars:     Size  Location     Type
  3901 ;;  i               2    3[BANK0 ] int 
  3902 ;; Return value:  Size  Location     Type
  3903 ;;                  1    wreg      void 
  3904 ;; Registers used:
  3905 ;;		wreg, status,2, status,0
  3906 ;; Tracked objects:
  3907 ;;		On entry : 0/0
  3908 ;;		On exit  : 0/0
  3909 ;;		Unchanged: 0/0
  3910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3911 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3912 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3913 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3914 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3915 ;;Total ram usage:        5 bytes
  3916 ;; Hardware stack levels used: 1
  3917 ;; Hardware stack levels required when called: 10
  3918 ;; This function calls:
  3919 ;;		Nothing
  3920 ;; This function is called by:
  3921 ;;		_LCD_Wait
  3922 ;;		_LCD_Init
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           	psect	text31
  3927   0022D0                     __ptext31:
  3928                           	callstack 0
  3929   0022D0                     __delay_us:
  3930                           	callstack 19
  3931   0022D0  0E00               	movlw	0
  3932   0022D2  0100               	movlb	0	; () banked
  3933   0022D4  6F64               	movwf	(__delay_us@i+1)& (0+255),b
  3934   0022D6  0E00               	movlw	0
  3935   0022D8  6F63               	movwf	__delay_us@i& (0+255),b
  3936   0022DA  EF75  F011         	goto	l3288
  3937   0022DE                     l50:
  3938                           
  3939                           ; BSR set to: 0
  3940   0022DE  D000               	nop2		;2 cycle nop
  3941   0022E0  D000               	nop2		;2 cycle nop
  3942   0022E2  D000               	nop2		;2 cycle nop
  3943   0022E4  0100               	movlb	0	; () banked
  3944   0022E6  4B63               	infsnz	__delay_us@i& (0+255),f,b
  3945   0022E8  2B64               	incf	(__delay_us@i+1)& (0+255),f,b
  3946   0022EA                     l3288:
  3947                           
  3948                           ; BSR set to: 0
  3949   0022EA  5160               	movf	__delay_us@us& (0+255),w,b
  3950   0022EC  5D63               	subwf	__delay_us@i& (0+255),w,b
  3951   0022EE  5164               	movf	(__delay_us@i+1)& (0+255),w,b
  3952   0022F0  0A80               	xorlw	128
  3953   0022F2  6F62               	movwf	??__delay_us& (0+255),b
  3954   0022F4  5161               	movf	(__delay_us@us+1)& (0+255),w,b
  3955   0022F6  0A80               	xorlw	128
  3956   0022F8  5962               	subwfb	??__delay_us& (0+255),w,b
  3957   0022FA  A0D8               	btfss	status,0,c
  3958   0022FC  EF82  F011         	goto	u2321
  3959   002300  EF84  F011         	goto	u2320
  3960   002304                     u2321:
  3961   002304  EF6F  F011         	goto	l50
  3962   002308                     u2320:
  3963   002308                     
  3964                           ; BSR set to: 0
  3965   002308  0012               	return		;funcret
  3966   00230A                     __end_of__delay_us:
  3967                           	callstack 0
  3968                           
  3969 ;; *************** function ___delay *****************
  3970 ;; Defined at:
  3971 ;;		line 6 in file "LCD-library/LCD-library.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;  time            2    0[BANK0 ] int 
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;  i               2    3[BANK0 ] int 
  3976 ;; Return value:  Size  Location     Type
  3977 ;;                  1    wreg      void 
  3978 ;; Registers used:
  3979 ;;		wreg, status,2, status,0
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3985 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3986 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3987 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3988 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3989 ;;Total ram usage:        5 bytes
  3990 ;; Hardware stack levels used: 1
  3991 ;; Hardware stack levels required when called: 10
  3992 ;; This function calls:
  3993 ;;		Nothing
  3994 ;; This function is called by:
  3995 ;;		_LCD_Wait
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           
  3999                           	psect	text32
  4000   002376                     __ptext32:
  4001                           	callstack 0
  4002   002376                     ___delay:
  4003                           	callstack 15
  4004   002376  0E00               	movlw	0
  4005   002378  0100               	movlb	0	; () banked
  4006   00237A  6F64               	movwf	(___delay@i+1)& (0+255),b
  4007   00237C  0E00               	movlw	0
  4008   00237E  6F63               	movwf	___delay@i& (0+255),b
  4009   002380  EFC4  F011         	goto	l3282
  4010   002384                     l3280:
  4011                           
  4012                           ; BSR set to: 0
  4013   002384  4B63               	infsnz	___delay@i& (0+255),f,b
  4014   002386  2B64               	incf	(___delay@i+1)& (0+255),f,b
  4015   002388                     l3282:
  4016                           
  4017                           ; BSR set to: 0
  4018   002388  5160               	movf	___delay@time& (0+255),w,b
  4019   00238A  5D63               	subwf	___delay@i& (0+255),w,b
  4020   00238C  5164               	movf	(___delay@i+1)& (0+255),w,b
  4021   00238E  0A80               	xorlw	128
  4022   002390  6F62               	movwf	??___delay& (0+255),b
  4023   002392  5161               	movf	(___delay@time+1)& (0+255),w,b
  4024   002394  0A80               	xorlw	128
  4025   002396  5962               	subwfb	??___delay& (0+255),w,b
  4026   002398  A0D8               	btfss	status,0,c
  4027   00239A  EFD1  F011         	goto	u2311
  4028   00239E  EFD3  F011         	goto	u2310
  4029   0023A2                     u2311:
  4030   0023A2  EFC2  F011         	goto	l3280
  4031   0023A6                     u2310:
  4032   0023A6                     
  4033                           ; BSR set to: 0
  4034   0023A6  0012               	return		;funcret
  4035   0023A8                     __end_of___delay:
  4036                           	callstack 0
  4037                           
  4038 ;; *************** function _LCD_4bitCodeNoWait *****************
  4039 ;; Defined at:
  4040 ;;		line 64 in file "LCD-library/LCD-library.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;  code            2    0[BANK0 ] int 
  4043 ;; Auto vars:     Size  Location     Type
  4044 ;;		None
  4045 ;; Return value:  Size  Location     Type
  4046 ;;                  1    wreg      void 
  4047 ;; Registers used:
  4048 ;;		wreg, status,2, status,0
  4049 ;; Tracked objects:
  4050 ;;		On entry : 0/0
  4051 ;;		On exit  : 0/0
  4052 ;;		Unchanged: 0/0
  4053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4054 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4056 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4057 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4058 ;;Total ram usage:        5 bytes
  4059 ;; Hardware stack levels used: 1
  4060 ;; Hardware stack levels required when called: 10
  4061 ;; This function calls:
  4062 ;;		Nothing
  4063 ;; This function is called by:
  4064 ;;		_LCD_4bitCode
  4065 ;;		_LCD_Init
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           	psect	text33
  4070   001DC2                     __ptext33:
  4071                           	callstack 0
  4072   001DC2                     _LCD_4bitCodeNoWait:
  4073                           	callstack 16
  4074   001DC2                     
  4075                           ;LCD-library/LCD-library.c: 65:     PORTHbits.RH2 = (code & 0b100000) >> 5;
  4076   001DC2  C060  F062         	movff	LCD_4bitCodeNoWait@code,??_LCD_4bitCodeNoWait
  4077   001DC6  C061  F063         	movff	LCD_4bitCodeNoWait@code+1,??_LCD_4bitCodeNoWait+1
  4078   001DCA  0E05               	movlw	5
  4079   001DCC  0100               	movlb	0	; () banked
  4080   001DCE  6F64               	movwf	(??_LCD_4bitCodeNoWait+2)& (0+255),b
  4081   001DD0                     u2355:
  4082   001DD0  3563               	rlcf	(??_LCD_4bitCodeNoWait+1)& (0+255),w,b
  4083   001DD2  3363               	rrcf	(??_LCD_4bitCodeNoWait+1)& (0+255),f,b
  4084   001DD4  3362               	rrcf	??_LCD_4bitCodeNoWait& (0+255),f,b
  4085   001DD6  2F64               	decfsz	(??_LCD_4bitCodeNoWait+2)& (0+255),f,b
  4086   001DD8  EFE8  F00E         	goto	u2355
  4087   001DDC  0E01               	movlw	1
  4088   001DDE  1762               	andwf	??_LCD_4bitCodeNoWait& (0+255),f,b
  4089   001DE0  4762               	rlncf	??_LCD_4bitCodeNoWait& (0+255),f,b
  4090   001DE2  4762               	rlncf	??_LCD_4bitCodeNoWait& (0+255),f,b
  4091   001DE4  5087               	movf	135,w,c	;volatile
  4092   001DE6  1962               	xorwf	??_LCD_4bitCodeNoWait& (0+255),w,b
  4093   001DE8  0BFB               	andlw	-5
  4094   001DEA  1962               	xorwf	??_LCD_4bitCodeNoWait& (0+255),w,b
  4095   001DEC  6E87               	movwf	135,c	;volatile
  4096                           
  4097                           ;LCD-library/LCD-library.c: 66:     PORTHbits.RH1 = (code & 0b010000) >> 4;
  4098   001DEE  C060  F062         	movff	LCD_4bitCodeNoWait@code,??_LCD_4bitCodeNoWait
  4099   001DF2  C061  F063         	movff	LCD_4bitCodeNoWait@code+1,??_LCD_4bitCodeNoWait+1
  4100   001DF6  0E04               	movlw	4
  4101   001DF8  6F64               	movwf	(??_LCD_4bitCodeNoWait+2)& (0+255),b
  4102   001DFA                     u2365:
  4103   001DFA  3563               	rlcf	(??_LCD_4bitCodeNoWait+1)& (0+255),w,b
  4104   001DFC  3363               	rrcf	(??_LCD_4bitCodeNoWait+1)& (0+255),f,b
  4105   001DFE  3362               	rrcf	??_LCD_4bitCodeNoWait& (0+255),f,b
  4106   001E00  2F64               	decfsz	(??_LCD_4bitCodeNoWait+2)& (0+255),f,b
  4107   001E02  EFFD  F00E         	goto	u2365
  4108   001E06  0E01               	movlw	1
  4109   001E08  1762               	andwf	??_LCD_4bitCodeNoWait& (0+255),f,b
  4110   001E0A  4762               	rlncf	??_LCD_4bitCodeNoWait& (0+255),f,b
  4111   001E0C  5087               	movf	135,w,c	;volatile
  4112   001E0E  1962               	xorwf	??_LCD_4bitCodeNoWait& (0+255),w,b
  4113   001E10  0BFD               	andlw	-3
  4114   001E12  1962               	xorwf	??_LCD_4bitCodeNoWait& (0+255),w,b
  4115   001E14  6E87               	movwf	135,c	;volatile
  4116                           
  4117                           ;LCD-library/LCD-library.c: 67:     PORTE &= 0b00001111;
  4118   001E16  0E0F               	movlw	15
  4119   001E18  1684               	andwf	132,f,c	;volatile
  4120                           
  4121                           ;LCD-library/LCD-library.c: 68:     PORTE |= (code & 0b001111) << 4;
  4122   001E1A  C060  F062         	movff	LCD_4bitCodeNoWait@code,??_LCD_4bitCodeNoWait	;volatile
  4123   001E1E  0E0F               	movlw	15
  4124   001E20  1762               	andwf	??_LCD_4bitCodeNoWait& (0+255),f,b
  4125   001E22  3962               	swapf	??_LCD_4bitCodeNoWait& (0+255),w,b
  4126   001E24  0BF0               	andlw	240
  4127   001E26  1284               	iorwf	132,f,c	;volatile
  4128   001E28                     
  4129                           ; BSR set to: 0
  4130                           ;LCD-library/LCD-library.c: 69:     PORTHbits.RH0 = 1;
  4131   001E28  8087               	bsf	135,0,c	;volatile
  4132   001E2A                     
  4133                           ; BSR set to: 0
  4134                           ;LCD-library/LCD-library.c: 70:     PORTHbits.RH0 = 0;
  4135   001E2A  9087               	bcf	135,0,c	;volatile
  4136   001E2C                     
  4137                           ; BSR set to: 0
  4138   001E2C  0012               	return		;funcret
  4139   001E2E                     __end_of_LCD_4bitCodeNoWait:
  4140                           	callstack 0
  4141                           
  4142 ;; *************** function _EUSART1_Write *****************
  4143 ;; Defined at:
  4144 ;;		line 197 in file "mcc_generated_files/eusart1.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;  txData          1    wreg     unsigned char 
  4147 ;; Auto vars:     Size  Location     Type
  4148 ;;  txData          1    0[BANK0 ] unsigned char 
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  1    wreg      void 
  4151 ;; Registers used:
  4152 ;;		wreg
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/0
  4155 ;;		On exit  : 0/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4159 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4161 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4162 ;;Total ram usage:        1 bytes
  4163 ;; Hardware stack levels used: 1
  4164 ;; Hardware stack levels required when called: 10
  4165 ;; This function calls:
  4166 ;;		Nothing
  4167 ;; This function is called by:
  4168 ;;		_main
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171                           
  4172                           	psect	text34
  4173   00242C                     __ptext34:
  4174                           	callstack 0
  4175   00242C                     _EUSART1_Write:
  4176                           	callstack 20
  4177                           
  4178                           ; BSR set to: 0
  4179                           ;incstack = 0
  4180                           ;EUSART1_Write@txData stored from wreg
  4181   00242C  0100               	movlb	0	; () banked
  4182   00242E  6F60               	movwf	EUSART1_Write@txData& (0+255),b
  4183   002430                     l400:
  4184                           
  4185                           ;mcc_generated_files/eusart1.c: 199:     while(0 == PIR1bits.TX1IF)
  4186   002430  A89E               	btfss	158,4,c	;volatile
  4187   002432  EF1D  F012         	goto	u2751
  4188   002436  EF1F  F012         	goto	u2750
  4189   00243A                     u2751:
  4190   00243A  EF18  F012         	goto	l400
  4191   00243E                     u2750:
  4192   00243E                     
  4193                           ;mcc_generated_files/eusart1.c: 203:     TXREG1 = txData;
  4194   00243E  C060  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  4195   002442  0012               	return		;funcret
  4196   002444                     __end_of_EUSART1_Write:
  4197                           	callstack 0
  4198                           
  4199 ;; *************** function _ADC_GetConversion *****************
  4200 ;; Defined at:
  4201 ;;		line 109 in file "mcc_generated_files/adc.c"
  4202 ;; Parameters:    Size  Location     Type
  4203 ;;  channel         1    wreg     enum E4918
  4204 ;; Auto vars:     Size  Location     Type
  4205 ;;  channel         1    4[BANK0 ] enum E4918
  4206 ;; Return value:  Size  Location     Type
  4207 ;;                  2    0[BANK0 ] unsigned short 
  4208 ;; Registers used:
  4209 ;;		wreg, status,2, status,0
  4210 ;; Tracked objects:
  4211 ;;		On entry : 0/0
  4212 ;;		On exit  : 0/0
  4213 ;;		Unchanged: 0/0
  4214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4215 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4216 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4217 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4218 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4219 ;;Total ram usage:        5 bytes
  4220 ;; Hardware stack levels used: 1
  4221 ;; Hardware stack levels required when called: 10
  4222 ;; This function calls:
  4223 ;;		Nothing
  4224 ;; This function is called by:
  4225 ;;		_main
  4226 ;; This function uses a non-reentrant model
  4227 ;;
  4228                           
  4229                           	psect	text35
  4230   002216                     __ptext35:
  4231                           	callstack 0
  4232   002216                     _ADC_GetConversion:
  4233                           	callstack 20
  4234                           
  4235                           ;incstack = 0
  4236                           ;ADC_GetConversion@channel stored from wreg
  4237   002216  0100               	movlb	0	; () banked
  4238   002218  6F64               	movwf	ADC_GetConversion@channel& (0+255),b
  4239   00221A                     
  4240                           ;mcc_generated_files/adc.c: 109: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 110: {;mcc_generated_files/adc.c: 112:     ADCON0bits.CHS = ch
      +                          annel;
  4241   00221A  C064  F062         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  4242   00221E  0100               	movlb	0	; () banked
  4243   002220  4762               	rlncf	??_ADC_GetConversion& (0+255),f,b
  4244   002222  4762               	rlncf	??_ADC_GetConversion& (0+255),f,b
  4245   002224  50C2               	movf	194,w,c	;volatile
  4246   002226  1962               	xorwf	??_ADC_GetConversion& (0+255),w,b
  4247   002228  0BC3               	andlw	-61
  4248   00222A  1962               	xorwf	??_ADC_GetConversion& (0+255),w,b
  4249   00222C  6EC2               	movwf	194,c	;volatile
  4250   00222E                     
  4251                           ; BSR set to: 0
  4252                           ;mcc_generated_files/adc.c: 115:     ADCON0bits.ADON = 1;
  4253   00222E  80C2               	bsf	194,0,c	;volatile
  4254   002230                     
  4255                           ; BSR set to: 0
  4256                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.GO_nDONE = 1;
  4257   002230  82C2               	bsf	194,1,c	;volatile
  4258   002232                     l543:
  4259                           
  4260                           ;mcc_generated_files/adc.c: 121:     while (ADCON0bits.GO_nDONE)
  4261   002232  B2C2               	btfsc	194,1,c	;volatile
  4262   002234  EF1E  F011         	goto	u2761
  4263   002238  EF20  F011         	goto	u2760
  4264   00223C                     u2761:
  4265   00223C  EF19  F011         	goto	l543
  4266   002240                     u2760:
  4267   002240                     
  4268                           ;mcc_generated_files/adc.c: 126:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  4269   002240  50C4               	movf	196,w,c	;volatile
  4270   002242  0100               	movlb	0	; () banked
  4271   002244  6F63               	movwf	(??_ADC_GetConversion+1)& (0+255),b
  4272   002246  6B62               	clrf	??_ADC_GetConversion& (0+255),b
  4273   002248  50C3               	movf	195,w,c	;volatile
  4274   00224A  2562               	addwf	??_ADC_GetConversion& (0+255),w,b
  4275   00224C  6F60               	movwf	?_ADC_GetConversion& (0+255),b
  4276   00224E  0E00               	movlw	0
  4277   002250  2163               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
  4278   002252  6F61               	movwf	(?_ADC_GetConversion+1)& (0+255),b
  4279   002254                     
  4280                           ; BSR set to: 0
  4281   002254  0012               	return		;funcret
  4282   002256                     __end_of_ADC_GetConversion:
  4283                           	callstack 0
  4284                           
  4285 ;; *************** function _INTERRUPT_InterruptManager *****************
  4286 ;; Defined at:
  4287 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;		None
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;		None
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  1    wreg      void 
  4294 ;; Registers used:
  4295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4303 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4304 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4305 ;;Total ram usage:        6 bytes
  4306 ;; Hardware stack levels used: 1
  4307 ;; Hardware stack levels required when called: 9
  4308 ;; This function calls:
  4309 ;;		NULL
  4310 ;;		_PrintOnScreen
  4311 ;; This function is called by:
  4312 ;;		Interrupt level 2
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           	psect	intcode
  4317   000008                     __pintcode:
  4318                           	callstack 0
  4319   000008                     _INTERRUPT_InterruptManager:
  4320                           	callstack 13
  4321                           
  4322                           ; BSR set to: 0
  4323                           ;incstack = 0
  4324   000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4325   00000A  CFFA F026          	movff	pclath,??_INTERRUPT_InterruptManager
  4326   00000E  CFFB F027          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4327   000012  CFE1 F028          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
  4328   000016  CFE2 F029          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
  4329   00001A  CFD9 F02A          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
  4330   00001E  CFDA F02B          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
  4331   000022                     
  4332                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  4333   000022  ACF2               	btfss	242,6,c	;volatile
  4334   000024  EF16  F000         	goto	i2u220_41
  4335   000028  EF18  F000         	goto	i2u220_40
  4336   00002C                     i2u220_41:
  4337   00002C  EF33  F000         	goto	i2l457
  4338   000030                     i2u220_40:
  4339   000030                     
  4340                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  4341   000030  AA9D               	btfss	157,5,c	;volatile
  4342   000032  EF1D  F000         	goto	i2u221_41
  4343   000036  EF1F  F000         	goto	i2u221_40
  4344   00003A                     i2u221_41:
  4345   00003A  EF33  F000         	goto	i2l457
  4346   00003E                     i2u221_40:
  4347   00003E  AA9E               	btfss	158,5,c	;volatile
  4348   000040  EF24  F000         	goto	i2u222_41
  4349   000044  EF26  F000         	goto	i2u222_40
  4350   000048                     i2u222_41:
  4351   000048  EF33  F000         	goto	i2l457
  4352   00004C                     i2u222_40:
  4353   00004C                     
  4354                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART1_RxDefaultInterruptHandler();
  4355   00004C  D802               	call	i2u223_48
  4356   00004E  EF33  F000         	goto	i2u223_49
  4357   000052                     i2u223_48:
  4358   000052  0005               	push	
  4359   000054  6EFA               	movwf	pclath,c
  4360   000056  5053               	movf	_EUSART1_RxDefaultInterruptHandler^0,w,c
  4361   000058  6EFD               	movwf	tosl,c
  4362   00005A  5054               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^0,w,c
  4363   00005C  6EFE               	movwf	tosh,c
  4364   00005E  5055               	movf	(_EUSART1_RxDefaultInterruptHandler+2)^0,w,c
  4365   000060  6EFF               	movwf	tosu,c
  4366   000062  50FA               	movf	pclath,w,c
  4367   000064  0012               	return		;indir
  4368   000066                     i2u223_49:
  4369   000066                     i2l457:
  4370   000066  C02B  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
  4371   00006A  C02A  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
  4372   00006E  C029  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
  4373   000072  C028  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
  4374   000076  C027  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4375   00007A  C026  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4376   00007E  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4377   000080  0011               	retfie		f
  4378   000082                     __end_of_INTERRUPT_InterruptManager:
  4379                           	callstack 0
  4380                           
  4381 ;; *************** function _PrintOnScreen *****************
  4382 ;; Defined at:
  4383 ;;		line 83 in file "mcc_generated_files/eusart1.c"
  4384 ;; Parameters:    Size  Location     Type
  4385 ;;		None
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;  i               2   35[COMRAM] int 
  4388 ;;  len             2   31[COMRAM] int 
  4389 ;;  length          1   34[COMRAM] unsigned char 
  4390 ;;  received        1   33[COMRAM] unsigned char 
  4391 ;; Return value:  Size  Location     Type
  4392 ;;                  1    wreg      void 
  4393 ;; Registers used:
  4394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/0
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4401 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4402 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4403 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4404 ;;Total ram usage:        8 bytes
  4405 ;; Hardware stack levels used: 1
  4406 ;; Hardware stack levels required when called: 8
  4407 ;; This function calls:
  4408 ;;		_EUSART1_Read
  4409 ;;		_EUSART1_Receive_ISR
  4410 ;;		_LCD_Clear
  4411 ;;		_LCD_PrintStr
  4412 ;;		i2_strlen
  4413 ;; This function is called by:
  4414 ;;		_EUSART1_Initialize
  4415 ;;		_INTERRUPT_InterruptManager
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           	psect	text37
  4420   001006                     __ptext37:
  4421                           	callstack 0
  4422   001006                     _PrintOnScreen:
  4423                           	callstack 13
  4424   001006                     
  4425                           ;mcc_generated_files/eusart1.c: 84:     EUSART1_Receive_ISR();
  4426   001006  EC76  F00D         	call	_EUSART1_Receive_ISR	;wreg free
  4427   00100A                     
  4428                           ;mcc_generated_files/eusart1.c: 85:     char received = EUSART1_Read();
  4429   00100A  ECC7  F00F         	call	_EUSART1_Read	;wreg free
  4430   00100E  6E22               	movwf	PrintOnScreen@received^0,c
  4431   001010                     
  4432                           ;mcc_generated_files/eusart1.c: 86:     if (received == 3){
  4433   001010  0E03               	movlw	3
  4434   001012  1822               	xorwf	PrintOnScreen@received^0,w,c
  4435   001014  A4D8               	btfss	status,2,c
  4436   001016  EF0F  F008         	goto	i2u193_41
  4437   00101A  EF11  F008         	goto	i2u193_40
  4438   00101E                     i2u193_41:
  4439   00101E  EFC1  F008         	goto	i2l3030
  4440   001022                     i2u193_40:
  4441   001022                     
  4442                           ;mcc_generated_files/eusart1.c: 87:         if (command[0] == 'l'){
  4443   001022  0E6C               	movlw	108
  4444   001024  0100               	movlb	0	; () banked
  4445   001026  19C4               	xorwf	_command& (0+255),w,b
  4446   001028  A4D8               	btfss	status,2,c
  4447   00102A  EF19  F008         	goto	i2u194_41
  4448   00102E  EF1B  F008         	goto	i2u194_40
  4449   001032                     i2u194_41:
  4450   001032  EF62  F008         	goto	i2l3014
  4451   001036                     i2u194_40:
  4452   001036                     
  4453                           ; BSR set to: 0
  4454                           ;mcc_generated_files/eusart1.c: 88:             int len = strlen(command);
  4455   001036  0EC4               	movlw	low _command
  4456   001038  6E01               	movwf	i2strlen@s^0,c
  4457   00103A  0E00               	movlw	high _command
  4458   00103C  6E02               	movwf	(i2strlen@s+1)^0,c
  4459   00103E  EC85  F011         	call	i2_strlen	;wreg free
  4460   001042  C001  F020         	movff	?i2_strlen,PrintOnScreen@len
  4461   001046  C002  F021         	movff	?i2_strlen+1,PrintOnScreen@len+1
  4462   00104A                     
  4463                           ;mcc_generated_files/eusart1.c: 89:             for (int i = 0; i < len; i++){
  4464   00104A  0E00               	movlw	0
  4465   00104C  6E25               	movwf	(PrintOnScreen@i+1)^0,c
  4466   00104E  0E00               	movlw	0
  4467   001050  6E24               	movwf	PrintOnScreen@i^0,c
  4468   001052  EF3B  F008         	goto	i2l3006
  4469   001056                     i2l3002:
  4470                           
  4471                           ;mcc_generated_files/eusart1.c: 90:                 command[i] = command[i + 1];
  4472   001056  0EC5               	movlw	low (_command+1)
  4473   001058  2424               	addwf	PrintOnScreen@i^0,w,c
  4474   00105A  6ED9               	movwf	fsr2l,c
  4475   00105C  0E00               	movlw	high (_command+1)
  4476   00105E  2025               	addwfc	(PrintOnScreen@i+1)^0,w,c
  4477   001060  6EDA               	movwf	fsr2h,c
  4478   001062  0EC4               	movlw	low _command
  4479   001064  2424               	addwf	PrintOnScreen@i^0,w,c
  4480   001066  6EE1               	movwf	fsr1l,c
  4481   001068  0E00               	movlw	high _command
  4482   00106A  2025               	addwfc	(PrintOnScreen@i+1)^0,w,c
  4483   00106C  6EE2               	movwf	fsr1h,c
  4484   00106E  CFDF FFE7          	movff	indf2,indf1
  4485   001072                     
  4486                           ;mcc_generated_files/eusart1.c: 91:             }
  4487   001072  4A24               	infsnz	PrintOnScreen@i^0,f,c
  4488   001074  2A25               	incf	(PrintOnScreen@i+1)^0,f,c
  4489   001076                     i2l3006:
  4490   001076  5020               	movf	PrintOnScreen@len^0,w,c
  4491   001078  5C24               	subwf	PrintOnScreen@i^0,w,c
  4492   00107A  5025               	movf	(PrintOnScreen@i+1)^0,w,c
  4493   00107C  0A80               	xorlw	128
  4494   00107E  6E1E               	movwf	??_PrintOnScreen^0,c
  4495   001080  5021               	movf	(PrintOnScreen@len+1)^0,w,c
  4496   001082  0A80               	xorlw	128
  4497   001084  581E               	subwfb	??_PrintOnScreen^0,w,c
  4498   001086  A0D8               	btfss	status,0,c
  4499   001088  EF48  F008         	goto	i2u195_41
  4500   00108C  EF4A  F008         	goto	i2u195_40
  4501   001090                     i2u195_41:
  4502   001090  EF2B  F008         	goto	i2l3002
  4503   001094                     i2u195_40:
  4504   001094                     
  4505                           ;mcc_generated_files/eusart1.c: 92:             LCD_Clear();
  4506   001094  ECEC  F011         	call	_LCD_Clear	;wreg free
  4507   001098                     
  4508                           ;mcc_generated_files/eusart1.c: 93:             LCD_PrintStr(command);
  4509   001098  0EC4               	movlw	low _command
  4510   00109A  6E15               	movwf	LCD_PrintStr@str^0,c
  4511   00109C  0E00               	movlw	high _command
  4512   00109E  6E16               	movwf	(LCD_PrintStr@str+1)^0,c
  4513   0010A0  EC5B  F00B         	call	_LCD_PrintStr	;wreg free
  4514   0010A4                     
  4515                           ;mcc_generated_files/eusart1.c: 94:             command[strlen(command) - 1] = ' ';
  4516   0010A4  0EC4               	movlw	low _command
  4517   0010A6  6E01               	movwf	i2strlen@s^0,c
  4518   0010A8  0E00               	movlw	high _command
  4519   0010AA  6E02               	movwf	(i2strlen@s+1)^0,c
  4520   0010AC  EC85  F011         	call	i2_strlen	;wreg free
  4521   0010B0  0EC3               	movlw	low (_command+65535)
  4522   0010B2  2401               	addwf	?i2_strlen^0,w,c
  4523   0010B4  6ED9               	movwf	fsr2l,c
  4524   0010B6  0E00               	movlw	high (_command+65535)
  4525   0010B8  2002               	addwfc	(?i2_strlen+1)^0,w,c
  4526   0010BA  6EDA               	movwf	fsr2h,c
  4527   0010BC  0E20               	movlw	32
  4528   0010BE  6EDF               	movwf	indf2,c
  4529                           
  4530                           ;mcc_generated_files/eusart1.c: 95:         }
  4531   0010C0  EFBC  F008         	goto	i2l3028
  4532   0010C4                     i2l3014:
  4533                           
  4534                           ; BSR set to: 0
  4535   0010C4  0E64               	movlw	100
  4536   0010C6  19C4               	xorwf	_command& (0+255),w,b
  4537   0010C8  A4D8               	btfss	status,2,c
  4538   0010CA  EF69  F008         	goto	i2u196_41
  4539   0010CE  EF6B  F008         	goto	i2u196_40
  4540   0010D2                     i2u196_41:
  4541   0010D2  EFBC  F008         	goto	i2l3028
  4542   0010D6                     i2u196_40:
  4543   0010D6  EFA3  F008         	goto	i2l3026
  4544   0010DA                     i2l3018:
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;mcc_generated_files/eusart1.c: 99:                     PORTJbits.RJ0 = !PORTJbits.RJ0;
  4548   0010DA  A088               	btfss	136,0,c	;volatile
  4549   0010DC  EF72  F008         	goto	i2u197_41
  4550   0010E0  EF76  F008         	goto	i2u197_40
  4551   0010E4                     i2u197_41:
  4552   0010E4  6A1E               	clrf	??_PrintOnScreen^0,c
  4553   0010E6  2A1E               	incf	??_PrintOnScreen^0,f,c
  4554   0010E8  EF77  F008         	goto	i2u198_48
  4555   0010EC                     i2u197_40:
  4556   0010EC  6A1E               	clrf	??_PrintOnScreen^0,c
  4557   0010EE                     i2u198_48:
  4558   0010EE  5088               	movf	136,w,c	;volatile
  4559   0010F0  181E               	xorwf	??_PrintOnScreen^0,w,c
  4560   0010F2  0BFE               	andlw	-2
  4561   0010F4  181E               	xorwf	??_PrintOnScreen^0,w,c
  4562   0010F6  6E88               	movwf	136,c	;volatile
  4563                           
  4564                           ;mcc_generated_files/eusart1.c: 100:                     break;
  4565   0010F8  EFBC  F008         	goto	i2l3028
  4566   0010FC                     i2l3020:
  4567                           
  4568                           ; BSR set to: 0
  4569                           ;mcc_generated_files/eusart1.c: 102:                     PORTJbits.RJ1 = !PORTJbits.RJ1;
  4570   0010FC  A288               	btfss	136,1,c	;volatile
  4571   0010FE  EF83  F008         	goto	i2u199_41
  4572   001102  EF87  F008         	goto	i2u199_40
  4573   001106                     i2u199_41:
  4574   001106  6A1E               	clrf	??_PrintOnScreen^0,c
  4575   001108  2A1E               	incf	??_PrintOnScreen^0,f,c
  4576   00110A  EF88  F008         	goto	i2u200_48
  4577   00110E                     i2u199_40:
  4578   00110E  6A1E               	clrf	??_PrintOnScreen^0,c
  4579   001110                     i2u200_48:
  4580   001110  461E               	rlncf	??_PrintOnScreen^0,f,c
  4581   001112  5088               	movf	136,w,c	;volatile
  4582   001114  181E               	xorwf	??_PrintOnScreen^0,w,c
  4583   001116  0BFD               	andlw	-3
  4584   001118  181E               	xorwf	??_PrintOnScreen^0,w,c
  4585   00111A  6E88               	movwf	136,c	;volatile
  4586                           
  4587                           ;mcc_generated_files/eusart1.c: 103:                     break;
  4588   00111C  EFBC  F008         	goto	i2l3028
  4589   001120                     i2l3022:
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;mcc_generated_files/eusart1.c: 105:                     PORTJbits.RJ2 = !PORTJbits.RJ2;
  4593   001120  A488               	btfss	136,2,c	;volatile
  4594   001122  EF95  F008         	goto	i2u201_41
  4595   001126  EF99  F008         	goto	i2u201_40
  4596   00112A                     i2u201_41:
  4597   00112A  6A1E               	clrf	??_PrintOnScreen^0,c
  4598   00112C  2A1E               	incf	??_PrintOnScreen^0,f,c
  4599   00112E  EF9A  F008         	goto	i2u202_48
  4600   001132                     i2u201_40:
  4601   001132  6A1E               	clrf	??_PrintOnScreen^0,c
  4602   001134                     i2u202_48:
  4603   001134  461E               	rlncf	??_PrintOnScreen^0,f,c
  4604   001136  461E               	rlncf	??_PrintOnScreen^0,f,c
  4605   001138  5088               	movf	136,w,c	;volatile
  4606   00113A  181E               	xorwf	??_PrintOnScreen^0,w,c
  4607   00113C  0BFB               	andlw	-5
  4608   00113E  181E               	xorwf	??_PrintOnScreen^0,w,c
  4609   001140  6E88               	movwf	136,c	;volatile
  4610                           
  4611                           ;mcc_generated_files/eusart1.c: 106:                     break;
  4612   001142  EFBC  F008         	goto	i2l3028
  4613   001146                     i2l3026:
  4614                           
  4615                           ; BSR set to: 0
  4616   001146  51C5               	movf	(_command+1)& (0+255),w,b
  4617   001148  6E1E               	movwf	??_PrintOnScreen^0,c
  4618   00114A  6A1F               	clrf	(??_PrintOnScreen+1)^0,c
  4619                           
  4620                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4621                           ; Switch size 1, requested type "simple"
  4622                           ; Number of cases is 1, Range of values is 0 to 0
  4623                           ; switch strategies available:
  4624                           ; Name         Instructions Cycles
  4625                           ; simple_byte            4     3 (average)
  4626                           ;	Chosen strategy is simple_byte
  4627   00114C  501F               	movf	(??_PrintOnScreen+1)^0,w,c
  4628   00114E  0A00               	xorlw	0	; case 0
  4629   001150  B4D8               	btfsc	status,2,c
  4630   001152  EFAD  F008         	goto	i2l3924
  4631   001156  EFBC  F008         	goto	i2l3028
  4632   00115A                     i2l3924:
  4633                           
  4634                           ; BSR set to: 0
  4635                           ; Switch size 1, requested type "simple"
  4636                           ; Number of cases is 3, Range of values is 49 to 51
  4637                           ; switch strategies available:
  4638                           ; Name         Instructions Cycles
  4639                           ; simple_byte           10     6 (average)
  4640                           ;	Chosen strategy is simple_byte
  4641   00115A  501E               	movf	??_PrintOnScreen^0,w,c
  4642   00115C  0A31               	xorlw	49	; case 49
  4643   00115E  B4D8               	btfsc	status,2,c
  4644   001160  EF6D  F008         	goto	i2l3018
  4645   001164  0A03               	xorlw	3	; case 50
  4646   001166  B4D8               	btfsc	status,2,c
  4647   001168  EF7E  F008         	goto	i2l3020
  4648   00116C  0A01               	xorlw	1	; case 51
  4649   00116E  B4D8               	btfsc	status,2,c
  4650   001170  EF90  F008         	goto	i2l3022
  4651   001174  EFBC  F008         	goto	i2l3028
  4652   001178                     i2l3028:
  4653                           
  4654                           ;mcc_generated_files/eusart1.c: 109:         command[0] = '\0';
  4655   001178  0E00               	movlw	0
  4656   00117A  0100               	movlb	0	; () banked
  4657   00117C  6FC4               	movwf	_command& (0+255),b
  4658                           
  4659                           ;mcc_generated_files/eusart1.c: 110:     }
  4660   00117E  EFD8  F008         	goto	i2l373
  4661   001182                     i2l3030:
  4662                           
  4663                           ;mcc_generated_files/eusart1.c: 112:         uint8_t length = strlen(command);
  4664   001182  0EC4               	movlw	low _command
  4665   001184  6E01               	movwf	i2strlen@s^0,c
  4666   001186  0E00               	movlw	high _command
  4667   001188  6E02               	movwf	(i2strlen@s+1)^0,c
  4668   00118A  EC85  F011         	call	i2_strlen	;wreg free
  4669   00118E  5001               	movf	?i2_strlen^0,w,c
  4670   001190  6E23               	movwf	PrintOnScreen@length^0,c
  4671   001192                     
  4672                           ;mcc_generated_files/eusart1.c: 113:         command[length] = received;
  4673   001192  0EC4               	movlw	low _command
  4674   001194  2423               	addwf	PrintOnScreen@length^0,w,c
  4675   001196  6ED9               	movwf	fsr2l,c
  4676   001198  6ADA               	clrf	fsr2h,c
  4677   00119A  0E00               	movlw	high _command
  4678   00119C  22DA               	addwfc	fsr2h,f,c
  4679   00119E  C022  FFDF         	movff	PrintOnScreen@received,indf2
  4680   0011A2                     
  4681                           ;mcc_generated_files/eusart1.c: 114:         command[length + 1] = '\0';
  4682   0011A2  0EC5               	movlw	low (_command+1)
  4683   0011A4  2423               	addwf	PrintOnScreen@length^0,w,c
  4684   0011A6  6ED9               	movwf	fsr2l,c
  4685   0011A8  6ADA               	clrf	fsr2h,c
  4686   0011AA  0E00               	movlw	high (_command+1)
  4687   0011AC  22DA               	addwfc	fsr2h,f,c
  4688   0011AE  6ADF               	clrf	indf2,c
  4689   0011B0                     i2l373:
  4690   0011B0  0012               	return		;funcret
  4691   0011B2                     __end_of_PrintOnScreen:
  4692                           	callstack 0
  4693                           
  4694 ;; *************** function _LCD_PrintStr *****************
  4695 ;; Defined at:
  4696 ;;		line 151 in file "LCD-library/LCD-library.c"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;  str             2   20[COMRAM] PTR const unsigned char 
  4699 ;;		 -> command(35), LCD_PrintNum@strNumber(20), 
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;  i               2   27[COMRAM] int 
  4702 ;;  initialY        2   25[COMRAM] int 
  4703 ;;  initialX        2   23[COMRAM] int 
  4704 ;; Return value:  Size  Location     Type
  4705 ;;                  1    wreg      void 
  4706 ;; Registers used:
  4707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4708 ;; Tracked objects:
  4709 ;;		On entry : 0/0
  4710 ;;		On exit  : 0/0
  4711 ;;		Unchanged: 0/0
  4712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4713 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4714 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4715 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4716 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4717 ;;Total ram usage:        9 bytes
  4718 ;; Hardware stack levels used: 1
  4719 ;; Hardware stack levels required when called: 7
  4720 ;; This function calls:
  4721 ;;		_LCD_MoveCursorLeft
  4722 ;;		_LCD_MoveCursorRight
  4723 ;;		_LCD_PrintChar
  4724 ;;		i2_LCD_SetCursorAt
  4725 ;;		i2_strlen
  4726 ;; This function is called by:
  4727 ;;		_PrintOnScreen
  4728 ;;		_LCD_PrintNum
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           	psect	text38
  4733   0016B6                     __ptext38:
  4734                           	callstack 0
  4735   0016B6                     _LCD_PrintStr:
  4736                           	callstack 13
  4737   0016B6                     
  4738                           ;LCD-library/LCD-library.c: 153:     int initialX = LCD_posX;
  4739   0016B6  C051  F018         	movff	_LCD_posX,LCD_PrintStr@initialX
  4740   0016BA  C052  F019         	movff	_LCD_posX+1,LCD_PrintStr@initialX+1
  4741                           
  4742                           ;LCD-library/LCD-library.c: 154:     int initialY = LCD_posY;
  4743   0016BE  C04F  F01A         	movff	_LCD_posY,LCD_PrintStr@initialY
  4744   0016C2  C050  F01B         	movff	_LCD_posY+1,LCD_PrintStr@initialY+1
  4745   0016C6                     
  4746                           ;LCD-library/LCD-library.c: 156:     for(int i = 0; i < strlen(str); i++) {
  4747   0016C6  0E00               	movlw	0
  4748   0016C8  6E1D               	movwf	(LCD_PrintStr@i+1)^0,c
  4749   0016CA  0E00               	movlw	0
  4750   0016CC  6E1C               	movwf	LCD_PrintStr@i^0,c
  4751   0016CE  EFB1  F00B         	goto	i2l2812
  4752   0016D2                     i2l2794:
  4753                           
  4754                           ;LCD-library/LCD-library.c: 157:         if (str[i] == '\r'){
  4755   0016D2  501C               	movf	LCD_PrintStr@i^0,w,c
  4756   0016D4  2415               	addwf	LCD_PrintStr@str^0,w,c
  4757   0016D6  6ED9               	movwf	fsr2l,c
  4758   0016D8  501D               	movf	(LCD_PrintStr@i+1)^0,w,c
  4759   0016DA  2016               	addwfc	(LCD_PrintStr@str+1)^0,w,c
  4760   0016DC  6EDA               	movwf	fsr2h,c
  4761   0016DE  0E0D               	movlw	13
  4762   0016E0  18DE               	xorwf	postinc2,w,c
  4763   0016E2  A4D8               	btfss	status,2,c
  4764   0016E4  EF76  F00B         	goto	i2u175_41
  4765   0016E8  EF78  F00B         	goto	i2u175_40
  4766   0016EC                     i2u175_41:
  4767   0016EC  EF86  F00B         	goto	i2l2800
  4768   0016F0                     i2u175_40:
  4769   0016F0                     
  4770                           ;LCD-library/LCD-library.c: 158:             LCD_SetCursorAt(1, 2);
  4771   0016F0  0E00               	movlw	0
  4772   0016F2  6E0B               	movwf	(i2LCD_SetCursorAt@pos+1)^0,c
  4773   0016F4  0E01               	movlw	1
  4774   0016F6  6E0A               	movwf	i2LCD_SetCursorAt@pos^0,c
  4775   0016F8  0E00               	movlw	0
  4776   0016FA  6E0D               	movwf	(i2LCD_SetCursorAt@row+1)^0,c
  4777   0016FC  0E02               	movlw	2
  4778   0016FE  6E0C               	movwf	i2LCD_SetCursorAt@row^0,c
  4779   001700  EC42  F00C         	call	i2_LCD_SetCursorAt	;wreg free
  4780   001704                     
  4781                           ;LCD-library/LCD-library.c: 159:             i++;
  4782   001704  4A1C               	infsnz	LCD_PrintStr@i^0,f,c
  4783   001706  2A1D               	incf	(LCD_PrintStr@i+1)^0,f,c
  4784                           
  4785                           ;LCD-library/LCD-library.c: 160:         }
  4786   001708  EFAF  F00B         	goto	i2l2810
  4787   00170C                     i2l2800:
  4788                           
  4789                           ;LCD-library/LCD-library.c: 162:             LCD_PrintChar(str[i]);
  4790   00170C  501C               	movf	LCD_PrintStr@i^0,w,c
  4791   00170E  2415               	addwf	LCD_PrintStr@str^0,w,c
  4792   001710  6ED9               	movwf	fsr2l,c
  4793   001712  501D               	movf	(LCD_PrintStr@i+1)^0,w,c
  4794   001714  2016               	addwfc	(LCD_PrintStr@str+1)^0,w,c
  4795   001716  6EDA               	movwf	fsr2h,c
  4796   001718  50DF               	movf	indf2,w,c
  4797   00171A  EC6E  F00E         	call	_LCD_PrintChar
  4798   00171E                     
  4799                           ;LCD-library/LCD-library.c: 164:             if(!LCD_isCursorMoving) {
  4800   00171E  5047               	movf	_LCD_isCursorMoving^0,w,c
  4801   001720  1048               	iorwf	(_LCD_isCursorMoving+1)^0,w,c
  4802   001722  A4D8               	btfss	status,2,c
  4803   001724  EF96  F00B         	goto	i2u176_41
  4804   001728  EF98  F00B         	goto	i2u176_40
  4805   00172C                     i2u176_41:
  4806   00172C  EFAF  F00B         	goto	i2l2810
  4807   001730                     i2u176_40:
  4808   001730                     
  4809                           ;LCD-library/LCD-library.c: 165:                 if(LCD_isIncrement) LCD_MoveCursorRight
      +                          (1);
  4810   001730  504D               	movf	_LCD_isIncrement^0,w,c
  4811   001732  104E               	iorwf	(_LCD_isIncrement+1)^0,w,c
  4812   001734  B4D8               	btfsc	status,2,c
  4813   001736  EF9F  F00B         	goto	i2u177_41
  4814   00173A  EFA1  F00B         	goto	i2u177_40
  4815   00173E                     i2u177_41:
  4816   00173E  EFA9  F00B         	goto	i2l2808
  4817   001742                     i2u177_40:
  4818   001742  0E00               	movlw	0
  4819   001744  6E11               	movwf	(LCD_MoveCursorRight@howMuch+1)^0,c
  4820   001746  0E01               	movlw	1
  4821   001748  6E10               	movwf	LCD_MoveCursorRight@howMuch^0,c
  4822   00174A  EC84  F010         	call	_LCD_MoveCursorRight	;wreg free
  4823   00174E  EFAF  F00B         	goto	i2l2810
  4824   001752                     i2l2808:
  4825   001752  0E00               	movlw	0
  4826   001754  6E11               	movwf	(LCD_MoveCursorLeft@howMuch+1)^0,c
  4827   001756  0E01               	movlw	1
  4828   001758  6E10               	movwf	LCD_MoveCursorLeft@howMuch^0,c
  4829   00175A  ECA7  F010         	call	_LCD_MoveCursorLeft	;wreg free
  4830   00175E                     i2l2810:
  4831                           
  4832                           ;LCD-library/LCD-library.c: 169:     }
  4833   00175E  4A1C               	infsnz	LCD_PrintStr@i^0,f,c
  4834   001760  2A1D               	incf	(LCD_PrintStr@i+1)^0,f,c
  4835   001762                     i2l2812:
  4836   001762  C015  F001         	movff	LCD_PrintStr@str,i2strlen@s
  4837   001766  C016  F002         	movff	LCD_PrintStr@str+1,i2strlen@s+1
  4838   00176A  EC85  F011         	call	i2_strlen	;wreg free
  4839   00176E  5001               	movf	?i2_strlen^0,w,c
  4840   001770  5C1C               	subwf	LCD_PrintStr@i^0,w,c
  4841   001772  5002               	movf	(?i2_strlen+1)^0,w,c
  4842   001774  581D               	subwfb	(LCD_PrintStr@i+1)^0,w,c
  4843   001776  A0D8               	btfss	status,0,c
  4844   001778  EFC0  F00B         	goto	i2u178_41
  4845   00177C  EFC2  F00B         	goto	i2u178_40
  4846   001780                     i2u178_41:
  4847   001780  EF69  F00B         	goto	i2l2794
  4848   001784                     i2u178_40:
  4849   001784                     
  4850                           ;LCD-library/LCD-library.c: 171:     if(!LCD_isCursorMoving) LCD_SetCursorAt(initialX, i
      +                          nitialY);
  4851   001784  5047               	movf	_LCD_isCursorMoving^0,w,c
  4852   001786  1048               	iorwf	(_LCD_isCursorMoving+1)^0,w,c
  4853   001788  A4D8               	btfss	status,2,c
  4854   00178A  EFC9  F00B         	goto	i2u179_41
  4855   00178E  EFCB  F00B         	goto	i2u179_40
  4856   001792                     i2u179_41:
  4857   001792  EFD5  F00B         	goto	i2l132
  4858   001796                     i2u179_40:
  4859   001796  C018  F00A         	movff	LCD_PrintStr@initialX,i2LCD_SetCursorAt@pos
  4860   00179A  C019  F00B         	movff	LCD_PrintStr@initialX+1,i2LCD_SetCursorAt@pos+1
  4861   00179E  C01A  F00C         	movff	LCD_PrintStr@initialY,i2LCD_SetCursorAt@row
  4862   0017A2  C01B  F00D         	movff	LCD_PrintStr@initialY+1,i2LCD_SetCursorAt@row+1
  4863   0017A6  EC42  F00C         	call	i2_LCD_SetCursorAt	;wreg free
  4864   0017AA                     i2l132:
  4865   0017AA  0012               	return		;funcret
  4866   0017AC                     __end_of_LCD_PrintStr:
  4867                           	callstack 0
  4868                           
  4869 ;; *************** function i2_strlen *****************
  4870 ;; Defined at:
  4871 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strlen.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4874 ;;		 -> main@potValue(5), command(35), LCD_PrintNum@strNumber(20), 
  4875 ;; Auto vars:     Size  Location     Type
  4876 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4877 ;;		 -> main@potValue(5), command(35), LCD_PrintNum@strNumber(20), 
  4878 ;; Return value:  Size  Location     Type
  4879 ;;                  2    0[COMRAM] unsigned int 
  4880 ;; Registers used:
  4881 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4882 ;; Tracked objects:
  4883 ;;		On entry : 0/0
  4884 ;;		On exit  : 0/0
  4885 ;;		Unchanged: 0/0
  4886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4887 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4888 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4890 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4891 ;;Total ram usage:        4 bytes
  4892 ;; Hardware stack levels used: 1
  4893 ;; This function calls:
  4894 ;;		Nothing
  4895 ;; This function is called by:
  4896 ;;		_LCD_PrintStr
  4897 ;;		_PrintOnScreen
  4898 ;; This function uses a non-reentrant model
  4899 ;;
  4900                           
  4901                           	psect	text39
  4902   00230A                     __ptext39:
  4903                           	callstack 0
  4904   00230A                     i2_strlen:
  4905                           	callstack 20
  4906   00230A  C001  F003         	movff	i2strlen@s,i2strlen@a
  4907   00230E  C002  F004         	movff	i2strlen@s+1,i2strlen@a+1
  4908   002312  EF8D  F011         	goto	i2l2754
  4909   002316                     i2l2752:
  4910   002316  4A01               	infsnz	i2strlen@s^0,f,c
  4911   002318  2A02               	incf	(i2strlen@s+1)^0,f,c
  4912   00231A                     i2l2754:
  4913   00231A  C001  FFD9         	movff	i2strlen@s,fsr2l
  4914   00231E  C002  FFDA         	movff	i2strlen@s+1,fsr2h
  4915   002322  50DF               	movf	indf2,w,c
  4916   002324  A4D8               	btfss	status,2,c
  4917   002326  EF97  F011         	goto	i2u169_41
  4918   00232A  EF99  F011         	goto	i2u169_40
  4919   00232E                     i2u169_41:
  4920   00232E  EF8B  F011         	goto	i2l2752
  4921   002332                     i2u169_40:
  4922   002332  5003               	movf	i2strlen@a^0,w,c
  4923   002334  5C01               	subwf	i2strlen@s^0,w,c
  4924   002336  6E01               	movwf	?i2_strlen^0,c
  4925   002338  5004               	movf	(i2strlen@a+1)^0,w,c
  4926   00233A  5802               	subwfb	(i2strlen@s+1)^0,w,c
  4927   00233C  6E02               	movwf	(?i2_strlen+1)^0,c
  4928   00233E  0012               	return		;funcret
  4929   002340                     __end_ofi2_strlen:
  4930                           	callstack 0
  4931                           
  4932 ;; *************** function _LCD_PrintChar *****************
  4933 ;; Defined at:
  4934 ;;		line 139 in file "LCD-library/LCD-library.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;  inputChar       1    wreg     unsigned char 
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;  inputChar       1   19[COMRAM] unsigned char 
  4939 ;; Return value:  Size  Location     Type
  4940 ;;                  1    wreg      void 
  4941 ;; Registers used:
  4942 ;;		wreg, status,2, status,0, cstack
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4949 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4951 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4952 ;;Total ram usage:        1 bytes
  4953 ;; Hardware stack levels used: 1
  4954 ;; Hardware stack levels required when called: 6
  4955 ;; This function calls:
  4956 ;;		_LCD_MoveCursorLeft
  4957 ;;		_LCD_MoveCursorRight
  4958 ;;		i2_LCD_Code
  4959 ;; This function is called by:
  4960 ;;		_LCD_PrintStr
  4961 ;;		_LCD_TypeStr
  4962 ;; This function uses a non-reentrant model
  4963 ;;
  4964                           
  4965                           	psect	text40
  4966   001CDC                     __ptext40:
  4967                           	callstack 0
  4968   001CDC                     _LCD_PrintChar:
  4969                           	callstack 13
  4970                           
  4971                           ;incstack = 0
  4972                           ;LCD_PrintChar@inputChar stored from wreg
  4973   001CDC  6E14               	movwf	LCD_PrintChar@inputChar^0,c
  4974   001CDE                     
  4975                           ;LCD-library/LCD-library.c: 140:     LCD_Code(0b1000000000 + inputChar);
  4976   001CDE  0E00               	movlw	0
  4977   001CE0  2414               	addwf	LCD_PrintChar@inputChar^0,w,c
  4978   001CE2  6E08               	movwf	i2LCD_Code@code^0,c
  4979   001CE4  6A09               	clrf	(i2LCD_Code@code+1)^0,c
  4980   001CE6  0E02               	movlw	2
  4981   001CE8  2209               	addwfc	(i2LCD_Code@code+1)^0,f,c
  4982   001CEA  EC87  F012         	call	i2_LCD_Code	;wreg free
  4983   001CEE                     
  4984                           ;LCD-library/LCD-library.c: 142:     if(LCD_isIncrement) LCD_posX++; else LCD_posX--;
  4985   001CEE  504D               	movf	_LCD_isIncrement^0,w,c
  4986   001CF0  104E               	iorwf	(_LCD_isIncrement+1)^0,w,c
  4987   001CF2  B4D8               	btfsc	status,2,c
  4988   001CF4  EF7E  F00E         	goto	i2u162_41
  4989   001CF8  EF80  F00E         	goto	i2u162_40
  4990   001CFC                     i2u162_41:
  4991   001CFC  EF84  F00E         	goto	i2l2692
  4992   001D00                     i2u162_40:
  4993   001D00  4A51               	infsnz	_LCD_posX^0,f,c
  4994   001D02  2A52               	incf	(_LCD_posX+1)^0,f,c
  4995   001D04  EF87  F00E         	goto	i2l2694
  4996   001D08                     i2l2692:
  4997   001D08  0651               	decf	_LCD_posX^0,f,c
  4998   001D0A  A0D8               	btfss	status,0,c
  4999   001D0C  0652               	decf	(_LCD_posX+1)^0,f,c
  5000   001D0E                     i2l2694:
  5001                           
  5002                           ;LCD-library/LCD-library.c: 144:     if(!LCD_isCursorMoving) {
  5003   001D0E  5047               	movf	_LCD_isCursorMoving^0,w,c
  5004   001D10  1048               	iorwf	(_LCD_isCursorMoving+1)^0,w,c
  5005   001D12  A4D8               	btfss	status,2,c
  5006   001D14  EF8E  F00E         	goto	i2u163_41
  5007   001D18  EF90  F00E         	goto	i2u163_40
  5008   001D1C                     i2u163_41:
  5009   001D1C  EFA7  F00E         	goto	i2l120
  5010   001D20                     i2u163_40:
  5011   001D20                     
  5012                           ;LCD-library/LCD-library.c: 145:         if(LCD_isIncrement) LCD_MoveCursorLeft(1);
  5013   001D20  504D               	movf	_LCD_isIncrement^0,w,c
  5014   001D22  104E               	iorwf	(_LCD_isIncrement+1)^0,w,c
  5015   001D24  B4D8               	btfsc	status,2,c
  5016   001D26  EF97  F00E         	goto	i2u164_41
  5017   001D2A  EF99  F00E         	goto	i2u164_40
  5018   001D2E                     i2u164_41:
  5019   001D2E  EFA1  F00E         	goto	i2l2700
  5020   001D32                     i2u164_40:
  5021   001D32  0E00               	movlw	0
  5022   001D34  6E11               	movwf	(LCD_MoveCursorLeft@howMuch+1)^0,c
  5023   001D36  0E01               	movlw	1
  5024   001D38  6E10               	movwf	LCD_MoveCursorLeft@howMuch^0,c
  5025   001D3A  ECA7  F010         	call	_LCD_MoveCursorLeft	;wreg free
  5026   001D3E  EFA7  F00E         	goto	i2l120
  5027   001D42                     i2l2700:
  5028   001D42  0E00               	movlw	0
  5029   001D44  6E11               	movwf	(LCD_MoveCursorRight@howMuch+1)^0,c
  5030   001D46  0E01               	movlw	1
  5031   001D48  6E10               	movwf	LCD_MoveCursorRight@howMuch^0,c
  5032   001D4A  EC84  F010         	call	_LCD_MoveCursorRight	;wreg free
  5033   001D4E                     i2l120:
  5034   001D4E  0012               	return		;funcret
  5035   001D50                     __end_of_LCD_PrintChar:
  5036                           	callstack 0
  5037                           
  5038 ;; *************** function _LCD_MoveCursorRight *****************
  5039 ;; Defined at:
  5040 ;;		line 286 in file "LCD-library/LCD-library.c"
  5041 ;; Parameters:    Size  Location     Type
  5042 ;;  howMuch         2   15[COMRAM] int 
  5043 ;; Auto vars:     Size  Location     Type
  5044 ;;		None
  5045 ;; Return value:  Size  Location     Type
  5046 ;;                  1    wreg      void 
  5047 ;; Registers used:
  5048 ;;		wreg, status,2, status,0, cstack
  5049 ;; Tracked objects:
  5050 ;;		On entry : 0/0
  5051 ;;		On exit  : 0/0
  5052 ;;		Unchanged: 0/0
  5053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5054 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5056 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5057 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5058 ;;Total ram usage:        4 bytes
  5059 ;; Hardware stack levels used: 1
  5060 ;; Hardware stack levels required when called: 5
  5061 ;; This function calls:
  5062 ;;		i2_LCD_SetCursorAt
  5063 ;; This function is called by:
  5064 ;;		_LCD_PrintChar
  5065 ;;		_LCD_PrintStr
  5066 ;;		_LCD_TypeStr
  5067 ;; This function uses a non-reentrant model
  5068 ;;
  5069                           
  5070                           	psect	text41
  5071   002108                     __ptext41:
  5072                           	callstack 0
  5073   002108                     _LCD_MoveCursorRight:
  5074                           	callstack 13
  5075   002108                     
  5076                           ;LCD-library/LCD-library.c: 287:     if(LCD_posX +howMuch <= 16) {
  5077   002108  5010               	movf	LCD_MoveCursorRight@howMuch^0,w,c
  5078   00210A  2451               	addwf	_LCD_posX^0,w,c
  5079   00210C  6E12               	movwf	??_LCD_MoveCursorRight^0,c
  5080   00210E  5011               	movf	(LCD_MoveCursorRight@howMuch+1)^0,w,c
  5081   002110  2052               	addwfc	(_LCD_posX+1)^0,w,c
  5082   002112  6E13               	movwf	(??_LCD_MoveCursorRight+1)^0,c
  5083   002114  BE13               	btfsc	(??_LCD_MoveCursorRight+1)^0,7,c
  5084   002116  EF98  F010         	goto	i2u150_40
  5085   00211A  5013               	movf	(??_LCD_MoveCursorRight+1)^0,w,c
  5086   00211C  E107               	bnz	i2u150_41
  5087   00211E  0E11               	movlw	17
  5088   002120  5C12               	subwf	??_LCD_MoveCursorRight^0,w,c
  5089   002122  B0D8               	btfsc	status,0,c
  5090   002124  EF96  F010         	goto	i2u150_41
  5091   002128  EF98  F010         	goto	i2u150_40
  5092   00212C                     i2u150_41:
  5093   00212C  EFA6  F010         	goto	i2l192
  5094   002130                     i2u150_40:
  5095   002130                     
  5096                           ;LCD-library/LCD-library.c: 288:         LCD_posX += howMuch;
  5097   002130  5010               	movf	LCD_MoveCursorRight@howMuch^0,w,c
  5098   002132  2651               	addwf	_LCD_posX^0,f,c
  5099   002134  5011               	movf	(LCD_MoveCursorRight@howMuch+1)^0,w,c
  5100   002136  2252               	addwfc	(_LCD_posX+1)^0,f,c
  5101   002138                     
  5102                           ;LCD-library/LCD-library.c: 289:         LCD_SetCursorAt(LCD_posX, LCD_posY);
  5103   002138  C051  F00A         	movff	_LCD_posX,i2LCD_SetCursorAt@pos
  5104   00213C  C052  F00B         	movff	_LCD_posX+1,i2LCD_SetCursorAt@pos+1
  5105   002140  C04F  F00C         	movff	_LCD_posY,i2LCD_SetCursorAt@row
  5106   002144  C050  F00D         	movff	_LCD_posY+1,i2LCD_SetCursorAt@row+1
  5107   002148  EC42  F00C         	call	i2_LCD_SetCursorAt	;wreg free
  5108   00214C                     i2l192:
  5109   00214C  0012               	return		;funcret
  5110   00214E                     __end_of_LCD_MoveCursorRight:
  5111                           	callstack 0
  5112                           
  5113 ;; *************** function _LCD_MoveCursorLeft *****************
  5114 ;; Defined at:
  5115 ;;		line 279 in file "LCD-library/LCD-library.c"
  5116 ;; Parameters:    Size  Location     Type
  5117 ;;  howMuch         2   15[COMRAM] int 
  5118 ;; Auto vars:     Size  Location     Type
  5119 ;;		None
  5120 ;; Return value:  Size  Location     Type
  5121 ;;                  1    wreg      void 
  5122 ;; Registers used:
  5123 ;;		wreg, status,2, status,0, cstack
  5124 ;; Tracked objects:
  5125 ;;		On entry : 0/0
  5126 ;;		On exit  : 0/0
  5127 ;;		Unchanged: 0/0
  5128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5129 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5131 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5132 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5133 ;;Total ram usage:        4 bytes
  5134 ;; Hardware stack levels used: 1
  5135 ;; Hardware stack levels required when called: 5
  5136 ;; This function calls:
  5137 ;;		i2_LCD_SetCursorAt
  5138 ;; This function is called by:
  5139 ;;		_LCD_PrintChar
  5140 ;;		_LCD_PrintStr
  5141 ;;		_LCD_TypeStr
  5142 ;; This function uses a non-reentrant model
  5143 ;;
  5144                           
  5145                           	psect	text42
  5146   00214E                     __ptext42:
  5147                           	callstack 0
  5148   00214E                     _LCD_MoveCursorLeft:
  5149                           	callstack 13
  5150   00214E                     
  5151                           ;LCD-library/LCD-library.c: 280:     if(LCD_posX -howMuch >= 1) {
  5152   00214E  5010               	movf	LCD_MoveCursorLeft@howMuch^0,w,c
  5153   002150  5C51               	subwf	_LCD_posX^0,w,c
  5154   002152  6E12               	movwf	??_LCD_MoveCursorLeft^0,c
  5155   002154  5011               	movf	(LCD_MoveCursorLeft@howMuch+1)^0,w,c
  5156   002156  5852               	subwfb	(_LCD_posX+1)^0,w,c
  5157   002158  6E13               	movwf	(??_LCD_MoveCursorLeft+1)^0,c
  5158   00215A  BE13               	btfsc	(??_LCD_MoveCursorLeft+1)^0,7,c
  5159   00215C  EFB8  F010         	goto	i2u149_41
  5160   002160  5013               	movf	(??_LCD_MoveCursorLeft+1)^0,w,c
  5161   002162  E108               	bnz	i2u149_40
  5162   002164  0412               	decf	??_LCD_MoveCursorLeft^0,w,c
  5163   002166  A0D8               	btfss	status,0,c
  5164   002168  EFB8  F010         	goto	i2u149_41
  5165   00216C  EFBA  F010         	goto	i2u149_40
  5166   002170                     i2u149_41:
  5167   002170  EFC8  F010         	goto	i2l188
  5168   002174                     i2u149_40:
  5169   002174                     
  5170                           ;LCD-library/LCD-library.c: 281:         LCD_posX -= howMuch;
  5171   002174  5010               	movf	LCD_MoveCursorLeft@howMuch^0,w,c
  5172   002176  5E51               	subwf	_LCD_posX^0,f,c
  5173   002178  5011               	movf	(LCD_MoveCursorLeft@howMuch+1)^0,w,c
  5174   00217A  5A52               	subwfb	(_LCD_posX+1)^0,f,c
  5175   00217C                     
  5176                           ;LCD-library/LCD-library.c: 282:         LCD_SetCursorAt(LCD_posX, LCD_posY);
  5177   00217C  C051  F00A         	movff	_LCD_posX,i2LCD_SetCursorAt@pos
  5178   002180  C052  F00B         	movff	_LCD_posX+1,i2LCD_SetCursorAt@pos+1
  5179   002184  C04F  F00C         	movff	_LCD_posY,i2LCD_SetCursorAt@row
  5180   002188  C050  F00D         	movff	_LCD_posY+1,i2LCD_SetCursorAt@row+1
  5181   00218C  EC42  F00C         	call	i2_LCD_SetCursorAt	;wreg free
  5182   002190                     i2l188:
  5183   002190  0012               	return		;funcret
  5184   002192                     __end_of_LCD_MoveCursorLeft:
  5185                           	callstack 0
  5186                           
  5187 ;; *************** function i2_LCD_SetCursorAt *****************
  5188 ;; Defined at:
  5189 ;;		line 232 in file "LCD-library/LCD-library.c"
  5190 ;; Parameters:    Size  Location     Type
  5191 ;;  pos             2    9[COMRAM] int 
  5192 ;;  row             2   11[COMRAM] int 
  5193 ;; Auto vars:     Size  Location     Type
  5194 ;;		None
  5195 ;; Return value:  Size  Location     Type
  5196 ;;                  1    wreg      void 
  5197 ;; Registers used:
  5198 ;;		wreg, status,2, status,0, cstack
  5199 ;; Tracked objects:
  5200 ;;		On entry : 0/0
  5201 ;;		On exit  : 0/0
  5202 ;;		Unchanged: 0/0
  5203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5204 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5206 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5207 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5208 ;;Total ram usage:        6 bytes
  5209 ;; Hardware stack levels used: 1
  5210 ;; Hardware stack levels required when called: 4
  5211 ;; This function calls:
  5212 ;;		i2_LCD_Code
  5213 ;; This function is called by:
  5214 ;;		_LCD_PrintStr
  5215 ;;		_LCD_MoveCursorLeft
  5216 ;;		_LCD_MoveCursorRight
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           
  5220                           	psect	text43
  5221   001884                     __ptext43:
  5222                           	callstack 0
  5223   001884                     i2_LCD_SetCursorAt:
  5224                           	callstack 15
  5225   001884                     
  5226                           ;LCD-library/LCD-library.c: 233:     if(pos >= 1 && pos <= 16 && row >= 1 && row <= 2){
  5227   001884  BE0B               	btfsc	(i2LCD_SetCursorAt@pos+1)^0,7,c
  5228   001886  EF4D  F00C         	goto	i2u145_41
  5229   00188A  500B               	movf	(i2LCD_SetCursorAt@pos+1)^0,w,c
  5230   00188C  E108               	bnz	i2u145_40
  5231   00188E  040A               	decf	i2LCD_SetCursorAt@pos^0,w,c
  5232   001890  A0D8               	btfss	status,0,c
  5233   001892  EF4D  F00C         	goto	i2u145_41
  5234   001896  EF4F  F00C         	goto	i2u145_40
  5235   00189A                     i2u145_41:
  5236   00189A  EFAC  F00C         	goto	i2l165
  5237   00189E                     i2u145_40:
  5238   00189E  BE0B               	btfsc	(i2LCD_SetCursorAt@pos+1)^0,7,c
  5239   0018A0  EF5D  F00C         	goto	i2u146_40
  5240   0018A4  500B               	movf	(i2LCD_SetCursorAt@pos+1)^0,w,c
  5241   0018A6  E107               	bnz	i2u146_41
  5242   0018A8  0E11               	movlw	17
  5243   0018AA  5C0A               	subwf	i2LCD_SetCursorAt@pos^0,w,c
  5244   0018AC  B0D8               	btfsc	status,0,c
  5245   0018AE  EF5B  F00C         	goto	i2u146_41
  5246   0018B2  EF5D  F00C         	goto	i2u146_40
  5247   0018B6                     i2u146_41:
  5248   0018B6  EFAC  F00C         	goto	i2l165
  5249   0018BA                     i2u146_40:
  5250   0018BA  BE0D               	btfsc	(i2LCD_SetCursorAt@row+1)^0,7,c
  5251   0018BC  EF68  F00C         	goto	i2u147_41
  5252   0018C0  500D               	movf	(i2LCD_SetCursorAt@row+1)^0,w,c
  5253   0018C2  E108               	bnz	i2u147_40
  5254   0018C4  040C               	decf	i2LCD_SetCursorAt@row^0,w,c
  5255   0018C6  A0D8               	btfss	status,0,c
  5256   0018C8  EF68  F00C         	goto	i2u147_41
  5257   0018CC  EF6A  F00C         	goto	i2u147_40
  5258   0018D0                     i2u147_41:
  5259   0018D0  EFAC  F00C         	goto	i2l165
  5260   0018D4                     i2u147_40:
  5261   0018D4  BE0D               	btfsc	(i2LCD_SetCursorAt@row+1)^0,7,c
  5262   0018D6  EF78  F00C         	goto	i2u148_40
  5263   0018DA  500D               	movf	(i2LCD_SetCursorAt@row+1)^0,w,c
  5264   0018DC  E107               	bnz	i2u148_41
  5265   0018DE  0E03               	movlw	3
  5266   0018E0  5C0C               	subwf	i2LCD_SetCursorAt@row^0,w,c
  5267   0018E2  B0D8               	btfsc	status,0,c
  5268   0018E4  EF76  F00C         	goto	i2u148_41
  5269   0018E8  EF78  F00C         	goto	i2u148_40
  5270   0018EC                     i2u148_41:
  5271   0018EC  EFAC  F00C         	goto	i2l165
  5272   0018F0                     i2u148_40:
  5273   0018F0                     
  5274                           ;LCD-library/LCD-library.c: 234:         LCD_posX = pos;
  5275   0018F0  C00A  F051         	movff	i2LCD_SetCursorAt@pos,_LCD_posX
  5276   0018F4  C00B  F052         	movff	i2LCD_SetCursorAt@pos+1,_LCD_posX+1
  5277                           
  5278                           ;LCD-library/LCD-library.c: 235:         LCD_posY = row;
  5279   0018F8  C00C  F04F         	movff	i2LCD_SetCursorAt@row,_LCD_posY
  5280   0018FC  C00D  F050         	movff	i2LCD_SetCursorAt@row+1,_LCD_posY+1
  5281                           
  5282                           ;LCD-library/LCD-library.c: 236:         switch(row) {
  5283   001900  EF96  F00C         	goto	i2l2600
  5284   001904                     i2l2592:
  5285   001904  0E7F               	movlw	127
  5286   001906  240A               	addwf	i2LCD_SetCursorAt@pos^0,w,c
  5287   001908  6E08               	movwf	i2LCD_Code@code^0,c
  5288   00190A  0E00               	movlw	0
  5289   00190C  200B               	addwfc	(i2LCD_SetCursorAt@pos+1)^0,w,c
  5290   00190E  6E09               	movwf	(i2LCD_Code@code+1)^0,c
  5291   001910  EC87  F012         	call	i2_LCD_Code	;wreg free
  5292   001914  EFAC  F00C         	goto	i2l165
  5293   001918                     i2l2594:
  5294   001918  0EBF               	movlw	191
  5295   00191A  240A               	addwf	i2LCD_SetCursorAt@pos^0,w,c
  5296   00191C  6E08               	movwf	i2LCD_Code@code^0,c
  5297   00191E  0E00               	movlw	0
  5298   001920  200B               	addwfc	(i2LCD_SetCursorAt@pos+1)^0,w,c
  5299   001922  6E09               	movwf	(i2LCD_Code@code+1)^0,c
  5300   001924  EC87  F012         	call	i2_LCD_Code	;wreg free
  5301   001928  EFAC  F00C         	goto	i2l165
  5302   00192C                     i2l2600:
  5303   00192C  C00C  F00E         	movff	i2LCD_SetCursorAt@row,??i2_LCD_SetCursorAt
  5304   001930  C00D  F00F         	movff	i2LCD_SetCursorAt@row+1,??i2_LCD_SetCursorAt+1
  5305                           
  5306                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5307                           ; Switch size 1, requested type "simple"
  5308                           ; Number of cases is 1, Range of values is 0 to 0
  5309                           ; switch strategies available:
  5310                           ; Name         Instructions Cycles
  5311                           ; simple_byte            4     3 (average)
  5312                           ;	Chosen strategy is simple_byte
  5313   001934  500F               	movf	(??i2_LCD_SetCursorAt+1)^0,w,c
  5314   001936  0A00               	xorlw	0	; case 0
  5315   001938  B4D8               	btfsc	status,2,c
  5316   00193A  EFA1  F00C         	goto	i2l3926
  5317   00193E  EF82  F00C         	goto	i2l2592
  5318   001942                     i2l3926:
  5319                           
  5320                           ; Switch size 1, requested type "simple"
  5321                           ; Number of cases is 2, Range of values is 1 to 2
  5322                           ; switch strategies available:
  5323                           ; Name         Instructions Cycles
  5324                           ; simple_byte            7     4 (average)
  5325                           ;	Chosen strategy is simple_byte
  5326   001942  500E               	movf	??i2_LCD_SetCursorAt^0,w,c
  5327   001944  0A01               	xorlw	1	; case 1
  5328   001946  B4D8               	btfsc	status,2,c
  5329   001948  EF82  F00C         	goto	i2l2592
  5330   00194C  0A03               	xorlw	3	; case 2
  5331   00194E  B4D8               	btfsc	status,2,c
  5332   001950  EF8C  F00C         	goto	i2l2594
  5333   001954  EF82  F00C         	goto	i2l2592
  5334   001958                     i2l165:
  5335   001958  0012               	return		;funcret
  5336   00195A                     __end_ofi2_LCD_SetCursorAt:
  5337                           	callstack 0
  5338                           
  5339 ;; *************** function _LCD_Clear *****************
  5340 ;; Defined at:
  5341 ;;		line 209 in file "LCD-library/LCD-library.c"
  5342 ;; Parameters:    Size  Location     Type
  5343 ;;		None
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;		None
  5346 ;; Return value:  Size  Location     Type
  5347 ;;                  1    wreg      void 
  5348 ;; Registers used:
  5349 ;;		wreg, status,2, status,0, cstack
  5350 ;; Tracked objects:
  5351 ;;		On entry : 0/0
  5352 ;;		On exit  : 0/0
  5353 ;;		Unchanged: 0/0
  5354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5359 ;;Total ram usage:        0 bytes
  5360 ;; Hardware stack levels used: 1
  5361 ;; Hardware stack levels required when called: 4
  5362 ;; This function calls:
  5363 ;;		i2_LCD_Code
  5364 ;;		i2__delay_ms
  5365 ;; This function is called by:
  5366 ;;		_PrintOnScreen
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370                           	psect	text44
  5371   0023D8                     __ptext44:
  5372                           	callstack 0
  5373   0023D8                     _LCD_Clear:
  5374                           	callstack 16
  5375   0023D8                     
  5376                           ;LCD-library/LCD-library.c: 210:     LCD_Code(0b0000000001);
  5377   0023D8  0E00               	movlw	0
  5378   0023DA  6E09               	movwf	(i2LCD_Code@code+1)^0,c
  5379   0023DC  0E01               	movlw	1
  5380   0023DE  6E08               	movwf	i2LCD_Code@code^0,c
  5381   0023E0  EC87  F012         	call	i2_LCD_Code	;wreg free
  5382   0023E4                     
  5383                           ;LCD-library/LCD-library.c: 211:     LCD_posX = LCD_posY = 1;
  5384   0023E4  0E00               	movlw	0
  5385   0023E6  6E50               	movwf	(_LCD_posY+1)^0,c
  5386   0023E8  0E01               	movlw	1
  5387   0023EA  6E4F               	movwf	_LCD_posY^0,c
  5388   0023EC  C04F  F051         	movff	_LCD_posY,_LCD_posX
  5389   0023F0  C050  F052         	movff	_LCD_posY+1,_LCD_posX+1
  5390   0023F4                     
  5391                           ;LCD-library/LCD-library.c: 212:     _delay_ms(200);
  5392   0023F4  0E00               	movlw	0
  5393   0023F6  6E02               	movwf	(i2__delay_ms@ms+1)^0,c
  5394   0023F8  0EC8               	movlw	200
  5395   0023FA  6E01               	movwf	i2__delay_ms@ms^0,c
  5396   0023FC  EC2B  F011         	call	i2__delay_ms	;wreg free
  5397   002400  0012               	return		;funcret
  5398   002402                     __end_of_LCD_Clear:
  5399                           	callstack 0
  5400                           
  5401 ;; *************** function i2__delay_ms *****************
  5402 ;; Defined at:
  5403 ;;		line 8 in file "LCD-library/LCD-library.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;  ms              2    0[COMRAM] int 
  5406 ;; Auto vars:     Size  Location     Type
  5407 ;;  i               2    3[COMRAM] int 
  5408 ;; Return value:  Size  Location     Type
  5409 ;;                  1    wreg      void 
  5410 ;; Registers used:
  5411 ;;		wreg, status,2, status,0
  5412 ;; Tracked objects:
  5413 ;;		On entry : 0/0
  5414 ;;		On exit  : 0/0
  5415 ;;		Unchanged: 0/0
  5416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5417 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5418 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5419 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5420 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5421 ;;Total ram usage:        5 bytes
  5422 ;; Hardware stack levels used: 1
  5423 ;; This function calls:
  5424 ;;		Nothing
  5425 ;; This function is called by:
  5426 ;;		_LCD_Clear
  5427 ;; This function uses a non-reentrant model
  5428 ;;
  5429                           
  5430                           	psect	text45
  5431   002256                     __ptext45:
  5432                           	callstack 0
  5433   002256                     i2__delay_ms:
  5434                           	callstack 19
  5435   002256  0E00               	movlw	0
  5436   002258  6E05               	movwf	(i2__delay_ms@i+1)^0,c
  5437   00225A  0E00               	movlw	0
  5438   00225C  6E04               	movwf	i2__delay_ms@i^0,c
  5439   00225E  EF3B  F011         	goto	i2l55
  5440   002262                     i2l2746:
  5441   002262  0E09               	movlw	9
  5442   002264  6E03               	movwf	??i2__delay_ms^0,c
  5443   002266  0E1C               	movlw	28
  5444   002268                     i2u297_47:
  5445   002268  2EE8               	decfsz	wreg,f,c
  5446   00226A  D7FE               	bra	i2u297_47
  5447   00226C  2E03               	decfsz	??i2__delay_ms^0,f,c
  5448   00226E  D7FC               	bra	i2u297_47
  5449   002270  D000               	nop2	
  5450   002272  4A04               	infsnz	i2__delay_ms@i^0,f,c
  5451   002274  2A05               	incf	(i2__delay_ms@i+1)^0,f,c
  5452   002276                     i2l55:
  5453   002276  5001               	movf	i2__delay_ms@ms^0,w,c
  5454   002278  5C04               	subwf	i2__delay_ms@i^0,w,c
  5455   00227A  5005               	movf	(i2__delay_ms@i+1)^0,w,c
  5456   00227C  0A80               	xorlw	128
  5457   00227E  6E03               	movwf	??i2__delay_ms^0,c
  5458   002280  5002               	movf	(i2__delay_ms@ms+1)^0,w,c
  5459   002282  0A80               	xorlw	128
  5460   002284  5803               	subwfb	??i2__delay_ms^0,w,c
  5461   002286  A0D8               	btfss	status,0,c
  5462   002288  EF48  F011         	goto	i2u168_41
  5463   00228C  EF4A  F011         	goto	i2u168_40
  5464   002290                     i2u168_41:
  5465   002290  EF31  F011         	goto	i2l2746
  5466   002294                     i2u168_40:
  5467   002294  0012               	return		;funcret
  5468   002296                     __end_ofi2__delay_ms:
  5469                           	callstack 0
  5470                           
  5471 ;; *************** function i2_LCD_Code *****************
  5472 ;; Defined at:
  5473 ;;		line 77 in file "LCD-library/LCD-library.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;  code            2    7[COMRAM] int 
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;		None
  5478 ;; Return value:  Size  Location     Type
  5479 ;;                  1    wreg      void 
  5480 ;; Registers used:
  5481 ;;		wreg, status,2, status,0, cstack
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 0/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5487 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5490 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5491 ;;Total ram usage:        2 bytes
  5492 ;; Hardware stack levels used: 1
  5493 ;; Hardware stack levels required when called: 3
  5494 ;; This function calls:
  5495 ;;		i2_LCD_4bitCode
  5496 ;;		i2_LCD_8bitCode
  5497 ;; This function is called by:
  5498 ;;		_LCD_PrintChar
  5499 ;;		_LCD_Clear
  5500 ;;		i2_LCD_SetCursorAt
  5501 ;; This function uses a non-reentrant model
  5502 ;;
  5503                           
  5504                           	psect	text46
  5505   00250E                     __ptext46:
  5506                           	callstack 0
  5507   00250E                     i2_LCD_Code:
  5508                           	callstack 15
  5509   00250E  C008  F006         	movff	i2LCD_Code@code,i2LCD_8bitCode@code
  5510   002512  C009  F007         	movff	i2LCD_Code@code+1,i2LCD_8bitCode@code+1
  5511   002516  EC4A  F012         	call	i2_LCD_8bitCode	;wreg free
  5512   00251A  0012               	return		;funcret
  5513   00251C                     __end_ofi2_LCD_Code:
  5514                           	callstack 0
  5515                           
  5516 ;; *************** function i2_LCD_8bitCode *****************
  5517 ;; Defined at:
  5518 ;;		line 59 in file "LCD-library/LCD-library.c"
  5519 ;; Parameters:    Size  Location     Type
  5520 ;;  code            2    5[COMRAM] int 
  5521 ;; Auto vars:     Size  Location     Type
  5522 ;;		None
  5523 ;; Return value:  Size  Location     Type
  5524 ;;                  1    wreg      void 
  5525 ;; Registers used:
  5526 ;;		wreg, status,2, status,0, cstack
  5527 ;; Tracked objects:
  5528 ;;		On entry : 0/0
  5529 ;;		On exit  : 0/0
  5530 ;;		Unchanged: 0/0
  5531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5532 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5535 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5536 ;;Total ram usage:        2 bytes
  5537 ;; Hardware stack levels used: 1
  5538 ;; Hardware stack levels required when called: 2
  5539 ;; This function calls:
  5540 ;;		i2_LCD_8bitCodeNoWait
  5541 ;;		i2_LCD_Wait
  5542 ;; This function is called by:
  5543 ;;		i2_LCD_Code
  5544 ;; This function uses a non-reentrant model
  5545 ;;
  5546                           
  5547                           	psect	text47
  5548   002494                     __ptext47:
  5549                           	callstack 0
  5550   002494                     i2_LCD_8bitCode:
  5551                           	callstack 15
  5552   002494                     
  5553                           ;LCD-library/LCD-library.c: 60:     LCD_8bitCodeNoWait(code);
  5554   002494  C006  F001         	movff	i2LCD_8bitCode@code,i2LCD_8bitCodeNoWait@code
  5555   002498  C007  F002         	movff	i2LCD_8bitCode@code+1,i2LCD_8bitCodeNoWait@code+1
  5556   00249C  EC16  F010         	call	i2_LCD_8bitCodeNoWait	;wreg free
  5557                           
  5558                           ;LCD-library/LCD-library.c: 61:     LCD_Wait();
  5559   0024A0  EC8E  F012         	call	i2_LCD_Wait	;wreg free
  5560   0024A4  0012               	return		;funcret
  5561   0024A6                     __end_ofi2_LCD_8bitCode:
  5562                           	callstack 0
  5563                           
  5564 ;; *************** function i2_LCD_8bitCodeNoWait *****************
  5565 ;; Defined at:
  5566 ;;		line 52 in file "LCD-library/LCD-library.c"
  5567 ;; Parameters:    Size  Location     Type
  5568 ;;  code            2    0[COMRAM] int 
  5569 ;; Auto vars:     Size  Location     Type
  5570 ;;		None
  5571 ;; Return value:  Size  Location     Type
  5572 ;;                  1    wreg      void 
  5573 ;; Registers used:
  5574 ;;		wreg, status,2, status,0
  5575 ;; Tracked objects:
  5576 ;;		On entry : 0/0
  5577 ;;		On exit  : 0/0
  5578 ;;		Unchanged: 0/0
  5579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5580 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5582 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5583 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5584 ;;Total ram usage:        5 bytes
  5585 ;; Hardware stack levels used: 1
  5586 ;; This function calls:
  5587 ;;		Nothing
  5588 ;; This function is called by:
  5589 ;;		i2_LCD_8bitCode
  5590 ;; This function uses a non-reentrant model
  5591 ;;
  5592                           
  5593                           	psect	text48
  5594   00202C                     __ptext48:
  5595                           	callstack 0
  5596   00202C                     i2_LCD_8bitCodeNoWait:
  5597                           	callstack 16
  5598   00202C                     
  5599                           ;LCD-library/LCD-library.c: 53:     PORTHbits.RH2 = (code & 0b1000000000) >> 9;
  5600   00202C  C001  F003         	movff	i2LCD_8bitCodeNoWait@code,??i2_LCD_8bitCodeNoWait
  5601   002030  C002  F004         	movff	i2LCD_8bitCodeNoWait@code+1,??i2_LCD_8bitCodeNoWait+1
  5602   002034  0E09               	movlw	9
  5603   002036  6E05               	movwf	(??i2_LCD_8bitCodeNoWait+2)^0,c
  5604   002038                     i2u117_45:
  5605   002038  3404               	rlcf	(??i2_LCD_8bitCodeNoWait+1)^0,w,c
  5606   00203A  3204               	rrcf	(??i2_LCD_8bitCodeNoWait+1)^0,f,c
  5607   00203C  3203               	rrcf	??i2_LCD_8bitCodeNoWait^0,f,c
  5608   00203E  2E05               	decfsz	(??i2_LCD_8bitCodeNoWait+2)^0,f,c
  5609   002040  EF1C  F010         	goto	i2u117_45
  5610   002044  0E01               	movlw	1
  5611   002046  1603               	andwf	??i2_LCD_8bitCodeNoWait^0,f,c
  5612   002048  4603               	rlncf	??i2_LCD_8bitCodeNoWait^0,f,c
  5613   00204A  4603               	rlncf	??i2_LCD_8bitCodeNoWait^0,f,c
  5614   00204C  5087               	movf	135,w,c	;volatile
  5615   00204E  1803               	xorwf	??i2_LCD_8bitCodeNoWait^0,w,c
  5616   002050  0BFB               	andlw	-5
  5617   002052  1803               	xorwf	??i2_LCD_8bitCodeNoWait^0,w,c
  5618   002054  6E87               	movwf	135,c	;volatile
  5619                           
  5620                           ;LCD-library/LCD-library.c: 54:     PORTHbits.RH1 = (code & 0b0100000000) >> 8;
  5621   002056  C002  F003         	movff	i2LCD_8bitCodeNoWait@code+1,??i2_LCD_8bitCodeNoWait
  5622   00205A  6A04               	clrf	(??i2_LCD_8bitCodeNoWait+1)^0,c
  5623   00205C  BE03               	btfsc	??i2_LCD_8bitCodeNoWait^0,7,c
  5624   00205E  6804               	setf	(??i2_LCD_8bitCodeNoWait+1)^0,c
  5625   002060  0E01               	movlw	1
  5626   002062  1603               	andwf	??i2_LCD_8bitCodeNoWait^0,f,c
  5627   002064  4603               	rlncf	??i2_LCD_8bitCodeNoWait^0,f,c
  5628   002066  5087               	movf	135,w,c	;volatile
  5629   002068  1803               	xorwf	??i2_LCD_8bitCodeNoWait^0,w,c
  5630   00206A  0BFD               	andlw	-3
  5631   00206C  1803               	xorwf	??i2_LCD_8bitCodeNoWait^0,w,c
  5632   00206E  6E87               	movwf	135,c	;volatile
  5633   002070                     
  5634                           ;LCD-library/LCD-library.c: 55:     PORTE = code & 0b0011111111;
  5635   002070  C001  FF84         	movff	i2LCD_8bitCodeNoWait@code,3972	;volatile
  5636   002074                     
  5637                           ;LCD-library/LCD-library.c: 56:     PORTHbits.RH0 = 1;
  5638   002074  8087               	bsf	135,0,c	;volatile
  5639   002076                     
  5640                           ;LCD-library/LCD-library.c: 57:     PORTHbits.RH0 = 0;
  5641   002076  9087               	bcf	135,0,c	;volatile
  5642   002078  0012               	return		;funcret
  5643   00207A                     __end_ofi2_LCD_8bitCodeNoWait:
  5644                           	callstack 0
  5645                           
  5646 ;; *************** function i2_LCD_4bitCode *****************
  5647 ;; Defined at:
  5648 ;;		line 72 in file "LCD-library/LCD-library.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;  code            2    5[COMRAM] int 
  5651 ;; Auto vars:     Size  Location     Type
  5652 ;;		None
  5653 ;; Return value:  Size  Location     Type
  5654 ;;                  1    wreg      void 
  5655 ;; Registers used:
  5656 ;;		wreg, status,2, status,0, cstack
  5657 ;; Tracked objects:
  5658 ;;		On entry : 0/0
  5659 ;;		On exit  : 0/0
  5660 ;;		Unchanged: 0/0
  5661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5662 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5665 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5666 ;;Total ram usage:        2 bytes
  5667 ;; Hardware stack levels used: 1
  5668 ;; Hardware stack levels required when called: 2
  5669 ;; This function calls:
  5670 ;;		i2_LCD_4bitCodeNoWait
  5671 ;;		i2_LCD_Wait
  5672 ;; This function is called by:
  5673 ;;		i2_LCD_Code
  5674 ;; This function uses a non-reentrant model
  5675 ;;
  5676                           
  5677                           	psect	text49
  5678   0024A6                     __ptext49:
  5679                           	callstack 0
  5680   0024A6                     i2_LCD_4bitCode:
  5681                           	callstack 15
  5682   0024A6                     
  5683                           ;LCD-library/LCD-library.c: 73:     LCD_4bitCodeNoWait(code);
  5684   0024A6  C006  F001         	movff	i2LCD_4bitCode@code,i2LCD_4bitCodeNoWait@code
  5685   0024AA  C007  F002         	movff	i2LCD_4bitCode@code+1,i2LCD_4bitCodeNoWait@code+1
  5686   0024AE  EC17  F00F         	call	i2_LCD_4bitCodeNoWait	;wreg free
  5687                           
  5688                           ;LCD-library/LCD-library.c: 74:     LCD_Wait();
  5689   0024B2  EC8E  F012         	call	i2_LCD_Wait	;wreg free
  5690   0024B6  0012               	return		;funcret
  5691   0024B8                     __end_ofi2_LCD_4bitCode:
  5692                           	callstack 0
  5693                           
  5694 ;; *************** function i2_LCD_Wait *****************
  5695 ;; Defined at:
  5696 ;;		line 11 in file "LCD-library/LCD-library.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;		None
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;		None
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  1    wreg      void 
  5703 ;; Registers used:
  5704 ;;		wreg, status,2, status,0, cstack
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5714 ;;Total ram usage:        0 bytes
  5715 ;; Hardware stack levels used: 1
  5716 ;; Hardware stack levels required when called: 1
  5717 ;; This function calls:
  5718 ;;		i2___delay
  5719 ;;		i2__delay_us
  5720 ;; This function is called by:
  5721 ;;		i2_LCD_8bitCode
  5722 ;;		i2_LCD_4bitCode
  5723 ;; This function uses a non-reentrant model
  5724 ;;
  5725                           
  5726                           	psect	text50
  5727   00251C                     __ptext50:
  5728                           	callstack 0
  5729   00251C                     i2_LCD_Wait:
  5730                           	callstack 15
  5731   00251C  0E01               	movlw	1
  5732   00251E  6E02               	movwf	(i2__delay_us@us+1)^0,c
  5733   002520  0EF4               	movlw	244
  5734   002522  6E01               	movwf	i2__delay_us@us^0,c
  5735   002524  ECA0  F011         	call	i2__delay_us	;wreg free
  5736   002528  0012               	return		;funcret
  5737   00252A                     __end_ofi2_LCD_Wait:
  5738                           	callstack 0
  5739                           
  5740 ;; *************** function i2__delay_us *****************
  5741 ;; Defined at:
  5742 ;;		line 7 in file "LCD-library/LCD-library.c"
  5743 ;; Parameters:    Size  Location     Type
  5744 ;;  us              2    0[COMRAM] int 
  5745 ;; Auto vars:     Size  Location     Type
  5746 ;;  i               2    3[COMRAM] int 
  5747 ;; Return value:  Size  Location     Type
  5748 ;;                  1    wreg      void 
  5749 ;; Registers used:
  5750 ;;		wreg, status,2, status,0
  5751 ;; Tracked objects:
  5752 ;;		On entry : 0/0
  5753 ;;		On exit  : 0/0
  5754 ;;		Unchanged: 0/0
  5755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5756 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5757 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5758 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5759 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5760 ;;Total ram usage:        5 bytes
  5761 ;; Hardware stack levels used: 1
  5762 ;; This function calls:
  5763 ;;		Nothing
  5764 ;; This function is called by:
  5765 ;;		i2_LCD_Wait
  5766 ;; This function uses a non-reentrant model
  5767 ;;
  5768                           
  5769                           	psect	text51
  5770   002340                     __ptext51:
  5771                           	callstack 0
  5772   002340                     i2__delay_us:
  5773                           	callstack 15
  5774   002340  0E00               	movlw	0
  5775   002342  6E05               	movwf	(i2__delay_us@i+1)^0,c
  5776   002344  0E00               	movlw	0
  5777   002346  6E04               	movwf	i2__delay_us@i^0,c
  5778   002348  EFAB  F011         	goto	i2l2320
  5779   00234C                     i2l50:
  5780   00234C  D000               	nop2		;2 cycle nop
  5781   00234E  D000               	nop2		;2 cycle nop
  5782   002350  D000               	nop2		;2 cycle nop
  5783   002352  4A04               	infsnz	i2__delay_us@i^0,f,c
  5784   002354  2A05               	incf	(i2__delay_us@i+1)^0,f,c
  5785   002356                     i2l2320:
  5786   002356  5001               	movf	i2__delay_us@us^0,w,c
  5787   002358  5C04               	subwf	i2__delay_us@i^0,w,c
  5788   00235A  5005               	movf	(i2__delay_us@i+1)^0,w,c
  5789   00235C  0A80               	xorlw	128
  5790   00235E  6E03               	movwf	??i2__delay_us^0,c
  5791   002360  5002               	movf	(i2__delay_us@us+1)^0,w,c
  5792   002362  0A80               	xorlw	128
  5793   002364  5803               	subwfb	??i2__delay_us^0,w,c
  5794   002366  A0D8               	btfss	status,0,c
  5795   002368  EFB8  F011         	goto	i2u116_41
  5796   00236C  EFBA  F011         	goto	i2u116_40
  5797   002370                     i2u116_41:
  5798   002370  EFA6  F011         	goto	i2l50
  5799   002374                     i2u116_40:
  5800   002374  0012               	return		;funcret
  5801   002376                     __end_ofi2__delay_us:
  5802                           	callstack 0
  5803                           
  5804 ;; *************** function i2___delay *****************
  5805 ;; Defined at:
  5806 ;;		line 6 in file "LCD-library/LCD-library.c"
  5807 ;; Parameters:    Size  Location     Type
  5808 ;;  time            2    0[COMRAM] int 
  5809 ;; Auto vars:     Size  Location     Type
  5810 ;;  i               2    3[COMRAM] int 
  5811 ;; Return value:  Size  Location     Type
  5812 ;;                  1    wreg      void 
  5813 ;; Registers used:
  5814 ;;		wreg, status,2, status,0
  5815 ;; Tracked objects:
  5816 ;;		On entry : 0/0
  5817 ;;		On exit  : 0/0
  5818 ;;		Unchanged: 0/0
  5819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5820 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5821 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5822 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5823 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5824 ;;Total ram usage:        5 bytes
  5825 ;; Hardware stack levels used: 1
  5826 ;; This function calls:
  5827 ;;		Nothing
  5828 ;; This function is called by:
  5829 ;;		i2_LCD_Wait
  5830 ;; This function uses a non-reentrant model
  5831 ;;
  5832                           
  5833                           	psect	text52
  5834   0023A8                     __ptext52:
  5835                           	callstack 0
  5836   0023A8                     i2___delay:
  5837                           	callstack 15
  5838   0023A8  0E00               	movlw	0
  5839   0023AA  6E05               	movwf	(i2___delay@i+1)^0,c
  5840   0023AC  0E00               	movlw	0
  5841   0023AE  6E04               	movwf	i2___delay@i^0,c
  5842   0023B0  EFDC  F011         	goto	i2l2314
  5843   0023B4                     i2l2312:
  5844   0023B4  4A04               	infsnz	i2___delay@i^0,f,c
  5845   0023B6  2A05               	incf	(i2___delay@i+1)^0,f,c
  5846   0023B8                     i2l2314:
  5847   0023B8  5001               	movf	i2___delay@time^0,w,c
  5848   0023BA  5C04               	subwf	i2___delay@i^0,w,c
  5849   0023BC  5005               	movf	(i2___delay@i+1)^0,w,c
  5850   0023BE  0A80               	xorlw	128
  5851   0023C0  6E03               	movwf	??i2___delay^0,c
  5852   0023C2  5002               	movf	(i2___delay@time+1)^0,w,c
  5853   0023C4  0A80               	xorlw	128
  5854   0023C6  5803               	subwfb	??i2___delay^0,w,c
  5855   0023C8  A0D8               	btfss	status,0,c
  5856   0023CA  EFE9  F011         	goto	i2u115_41
  5857   0023CE  EFEB  F011         	goto	i2u115_40
  5858   0023D2                     i2u115_41:
  5859   0023D2  EFDA  F011         	goto	i2l2312
  5860   0023D6                     i2u115_40:
  5861   0023D6  0012               	return		;funcret
  5862   0023D8                     __end_ofi2___delay:
  5863                           	callstack 0
  5864                           
  5865 ;; *************** function i2_LCD_4bitCodeNoWait *****************
  5866 ;; Defined at:
  5867 ;;		line 64 in file "LCD-library/LCD-library.c"
  5868 ;; Parameters:    Size  Location     Type
  5869 ;;  code            2    0[COMRAM] int 
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;		None
  5872 ;; Return value:  Size  Location     Type
  5873 ;;                  1    wreg      void 
  5874 ;; Registers used:
  5875 ;;		wreg, status,2, status,0
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 0/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5881 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5883 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5884 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5885 ;;Total ram usage:        5 bytes
  5886 ;; Hardware stack levels used: 1
  5887 ;; This function calls:
  5888 ;;		Nothing
  5889 ;; This function is called by:
  5890 ;;		i2_LCD_4bitCode
  5891 ;; This function uses a non-reentrant model
  5892 ;;
  5893                           
  5894                           	psect	text53
  5895   001E2E                     __ptext53:
  5896                           	callstack 0
  5897   001E2E                     i2_LCD_4bitCodeNoWait:
  5898                           	callstack 16
  5899   001E2E                     
  5900                           ;LCD-library/LCD-library.c: 65:     PORTHbits.RH2 = (code & 0b100000) >> 5;
  5901   001E2E  C001  F003         	movff	i2LCD_4bitCodeNoWait@code,??i2_LCD_4bitCodeNoWait
  5902   001E32  C002  F004         	movff	i2LCD_4bitCodeNoWait@code+1,??i2_LCD_4bitCodeNoWait+1
  5903   001E36  0E05               	movlw	5
  5904   001E38  6E05               	movwf	(??i2_LCD_4bitCodeNoWait+2)^0,c
  5905   001E3A                     i2u118_45:
  5906   001E3A  3404               	rlcf	(??i2_LCD_4bitCodeNoWait+1)^0,w,c
  5907   001E3C  3204               	rrcf	(??i2_LCD_4bitCodeNoWait+1)^0,f,c
  5908   001E3E  3203               	rrcf	??i2_LCD_4bitCodeNoWait^0,f,c
  5909   001E40  2E05               	decfsz	(??i2_LCD_4bitCodeNoWait+2)^0,f,c
  5910   001E42  EF1D  F00F         	goto	i2u118_45
  5911   001E46  0E01               	movlw	1
  5912   001E48  1603               	andwf	??i2_LCD_4bitCodeNoWait^0,f,c
  5913   001E4A  4603               	rlncf	??i2_LCD_4bitCodeNoWait^0,f,c
  5914   001E4C  4603               	rlncf	??i2_LCD_4bitCodeNoWait^0,f,c
  5915   001E4E  5087               	movf	135,w,c	;volatile
  5916   001E50  1803               	xorwf	??i2_LCD_4bitCodeNoWait^0,w,c
  5917   001E52  0BFB               	andlw	-5
  5918   001E54  1803               	xorwf	??i2_LCD_4bitCodeNoWait^0,w,c
  5919   001E56  6E87               	movwf	135,c	;volatile
  5920                           
  5921                           ;LCD-library/LCD-library.c: 66:     PORTHbits.RH1 = (code & 0b010000) >> 4;
  5922   001E58  C001  F003         	movff	i2LCD_4bitCodeNoWait@code,??i2_LCD_4bitCodeNoWait
  5923   001E5C  C002  F004         	movff	i2LCD_4bitCodeNoWait@code+1,??i2_LCD_4bitCodeNoWait+1
  5924   001E60  0E04               	movlw	4
  5925   001E62  6E05               	movwf	(??i2_LCD_4bitCodeNoWait+2)^0,c
  5926   001E64                     i2u119_45:
  5927   001E64  3404               	rlcf	(??i2_LCD_4bitCodeNoWait+1)^0,w,c
  5928   001E66  3204               	rrcf	(??i2_LCD_4bitCodeNoWait+1)^0,f,c
  5929   001E68  3203               	rrcf	??i2_LCD_4bitCodeNoWait^0,f,c
  5930   001E6A  2E05               	decfsz	(??i2_LCD_4bitCodeNoWait+2)^0,f,c
  5931   001E6C  EF32  F00F         	goto	i2u119_45
  5932   001E70  0E01               	movlw	1
  5933   001E72  1603               	andwf	??i2_LCD_4bitCodeNoWait^0,f,c
  5934   001E74  4603               	rlncf	??i2_LCD_4bitCodeNoWait^0,f,c
  5935   001E76  5087               	movf	135,w,c	;volatile
  5936   001E78  1803               	xorwf	??i2_LCD_4bitCodeNoWait^0,w,c
  5937   001E7A  0BFD               	andlw	-3
  5938   001E7C  1803               	xorwf	??i2_LCD_4bitCodeNoWait^0,w,c
  5939   001E7E  6E87               	movwf	135,c	;volatile
  5940                           
  5941                           ;LCD-library/LCD-library.c: 67:     PORTE &= 0b00001111;
  5942   001E80  0E0F               	movlw	15
  5943   001E82  1684               	andwf	132,f,c	;volatile
  5944                           
  5945                           ;LCD-library/LCD-library.c: 68:     PORTE |= (code & 0b001111) << 4;
  5946   001E84  C001  F003         	movff	i2LCD_4bitCodeNoWait@code,??i2_LCD_4bitCodeNoWait	;volatile
  5947   001E88  0E0F               	movlw	15
  5948   001E8A  1603               	andwf	??i2_LCD_4bitCodeNoWait^0,f,c
  5949   001E8C  3803               	swapf	??i2_LCD_4bitCodeNoWait^0,w,c
  5950   001E8E  0BF0               	andlw	240
  5951   001E90  1284               	iorwf	132,f,c	;volatile
  5952   001E92                     
  5953                           ;LCD-library/LCD-library.c: 69:     PORTHbits.RH0 = 1;
  5954   001E92  8087               	bsf	135,0,c	;volatile
  5955   001E94                     
  5956                           ;LCD-library/LCD-library.c: 70:     PORTHbits.RH0 = 0;
  5957   001E94  9087               	bcf	135,0,c	;volatile
  5958   001E96  0012               	return		;funcret
  5959   001E98                     __end_ofi2_LCD_4bitCodeNoWait:
  5960                           	callstack 0
  5961                           
  5962 ;; *************** function _EUSART1_Receive_ISR *****************
  5963 ;; Defined at:
  5964 ;;		line 208 in file "mcc_generated_files/eusart1.c"
  5965 ;; Parameters:    Size  Location     Type
  5966 ;;		None
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;		None
  5969 ;; Return value:  Size  Location     Type
  5970 ;;                  1    wreg      void 
  5971 ;; Registers used:
  5972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5982 ;;Total ram usage:        0 bytes
  5983 ;; Hardware stack levels used: 1
  5984 ;; Hardware stack levels required when called: 2
  5985 ;; This function calls:
  5986 ;;		NULL
  5987 ;;		_EUSART1_DefaultErrorHandler
  5988 ;;		_EUSART1_DefaultFramingErrorHandler
  5989 ;;		_EUSART1_DefaultOverrunErrorHandler
  5990 ;;		_EUSART1_RxDataHandler
  5991 ;; This function is called by:
  5992 ;;		_PrintOnScreen
  5993 ;; This function uses a non-reentrant model
  5994 ;;
  5995                           
  5996                           	psect	text54
  5997   001AEC                     __ptext54:
  5998                           	callstack 0
  5999   001AEC                     _EUSART1_Receive_ISR:
  6000                           	callstack 18
  6001   001AEC                     
  6002                           ;mcc_generated_files/eusart1.c: 211:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  6003   001AEC  0E2C               	movlw	low _eusart1RxStatusBuffer
  6004   001AEE  2446               	addwf	_eusart1RxHead^0,w,c	;volatile
  6005   001AF0  6ED9               	movwf	fsr2l,c
  6006   001AF2  6ADA               	clrf	fsr2h,c
  6007   001AF4  0E00               	movlw	high _eusart1RxStatusBuffer
  6008   001AF6  22DA               	addwfc	fsr2h,f,c
  6009   001AF8  6ADF               	clrf	indf2,c
  6010   001AFA                     
  6011                           ;mcc_generated_files/eusart1.c: 213:     if(RCSTA1bits.FERR){
  6012   001AFA  A4AB               	btfss	171,2,c	;volatile
  6013   001AFC  EF82  F00D         	goto	i2u180_41
  6014   001B00  EF84  F00D         	goto	i2u180_40
  6015   001B04                     i2u180_41:
  6016   001B04  EF99  F00D         	goto	i2l2874
  6017   001B08                     i2u180_40:
  6018   001B08                     
  6019                           ;mcc_generated_files/eusart1.c: 214:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  6020   001B08  0E2C               	movlw	low _eusart1RxStatusBuffer
  6021   001B0A  2446               	addwf	_eusart1RxHead^0,w,c	;volatile
  6022   001B0C  6ED9               	movwf	fsr2l,c
  6023   001B0E  6ADA               	clrf	fsr2h,c
  6024   001B10  0E00               	movlw	high _eusart1RxStatusBuffer
  6025   001B12  22DA               	addwfc	fsr2h,f,c
  6026   001B14  82DF               	bsf	indf2,1,c
  6027   001B16                     
  6028                           ;mcc_generated_files/eusart1.c: 215:         EUSART1_FramingErrorHandler();
  6029   001B16  D802               	call	i2u181_48
  6030   001B18  EF99  F00D         	goto	i2u181_49
  6031   001B1C                     i2u181_48:
  6032   001B1C  0005               	push	
  6033   001B1E  6EFA               	movwf	pclath,c
  6034   001B20  0100               	movlb	0	; () banked
  6035   001B22  51ED               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  6036   001B24  6EFD               	movwf	tosl,c
  6037   001B26  51EE               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  6038   001B28  6EFE               	movwf	tosh,c
  6039   001B2A  51EF               	movf	(_EUSART1_FramingErrorHandler+2)& (0+255),w,b
  6040   001B2C  6EFF               	movwf	tosu,c
  6041   001B2E  50FA               	movf	pclath,w,c
  6042   001B30  0012               	return		;indir
  6043   001B32                     i2u181_49:
  6044   001B32                     i2l2874:
  6045                           
  6046                           ;mcc_generated_files/eusart1.c: 218:     if(RCSTA1bits.OERR){
  6047   001B32  A2AB               	btfss	171,1,c	;volatile
  6048   001B34  EF9E  F00D         	goto	i2u182_41
  6049   001B38  EFA0  F00D         	goto	i2u182_40
  6050   001B3C                     i2u182_41:
  6051   001B3C  EFB5  F00D         	goto	i2l2880
  6052   001B40                     i2u182_40:
  6053   001B40                     
  6054                           ;mcc_generated_files/eusart1.c: 219:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  6055   001B40  0E2C               	movlw	low _eusart1RxStatusBuffer
  6056   001B42  2446               	addwf	_eusart1RxHead^0,w,c	;volatile
  6057   001B44  6ED9               	movwf	fsr2l,c
  6058   001B46  6ADA               	clrf	fsr2h,c
  6059   001B48  0E00               	movlw	high _eusart1RxStatusBuffer
  6060   001B4A  22DA               	addwfc	fsr2h,f,c
  6061   001B4C  84DF               	bsf	indf2,2,c
  6062   001B4E                     
  6063                           ;mcc_generated_files/eusart1.c: 220:         EUSART1_OverrunErrorHandler();
  6064   001B4E  D802               	call	i2u183_48
  6065   001B50  EFB5  F00D         	goto	i2u183_49
  6066   001B54                     i2u183_48:
  6067   001B54  0005               	push	
  6068   001B56  6EFA               	movwf	pclath,c
  6069   001B58  0100               	movlb	0	; () banked
  6070   001B5A  51EA               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  6071   001B5C  6EFD               	movwf	tosl,c
  6072   001B5E  51EB               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  6073   001B60  6EFE               	movwf	tosh,c
  6074   001B62  51EC               	movf	(_EUSART1_OverrunErrorHandler+2)& (0+255),w,b
  6075   001B64  6EFF               	movwf	tosu,c
  6076   001B66  50FA               	movf	pclath,w,c
  6077   001B68  0012               	return		;indir
  6078   001B6A                     i2u183_49:
  6079   001B6A                     i2l2880:
  6080                           
  6081                           ;mcc_generated_files/eusart1.c: 223:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  6082   001B6A  0E2C               	movlw	low _eusart1RxStatusBuffer
  6083   001B6C  2446               	addwf	_eusart1RxHead^0,w,c	;volatile
  6084   001B6E  6ED9               	movwf	fsr2l,c
  6085   001B70  6ADA               	clrf	fsr2h,c
  6086   001B72  0E00               	movlw	high _eusart1RxStatusBuffer
  6087   001B74  22DA               	addwfc	fsr2h,f,c
  6088   001B76  50DF               	movf	indf2,w,c
  6089   001B78  B4D8               	btfsc	status,2,c
  6090   001B7A  EFC1  F00D         	goto	i2u184_41
  6091   001B7E  EFC3  F00D         	goto	i2u184_40
  6092   001B82                     i2u184_41:
  6093   001B82  EFD3  F00D         	goto	i2l2884
  6094   001B86                     i2u184_40:
  6095   001B86                     
  6096                           ;mcc_generated_files/eusart1.c: 224:         EUSART1_ErrorHandler();
  6097   001B86  D802               	call	i2u185_48
  6098   001B88  EFD1  F00D         	goto	i2u185_49
  6099   001B8C                     i2u185_48:
  6100   001B8C  0005               	push	
  6101   001B8E  6EFA               	movwf	pclath,c
  6102   001B90  0100               	movlb	0	; () banked
  6103   001B92  51E7               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  6104   001B94  6EFD               	movwf	tosl,c
  6105   001B96  51E8               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  6106   001B98  6EFE               	movwf	tosh,c
  6107   001B9A  51E9               	movf	(_EUSART1_ErrorHandler+2)& (0+255),w,b
  6108   001B9C  6EFF               	movwf	tosu,c
  6109   001B9E  50FA               	movf	pclath,w,c
  6110   001BA0  0012               	return		;indir
  6111   001BA2                     i2u185_49:
  6112                           
  6113                           ;mcc_generated_files/eusart1.c: 225:     } else {
  6114   001BA2  EFD5  F00D         	goto	i2l410
  6115   001BA6                     i2l2884:
  6116                           
  6117                           ;mcc_generated_files/eusart1.c: 226:         EUSART1_RxDataHandler();
  6118   001BA6  EC01  F012         	call	_EUSART1_RxDataHandler	;wreg free
  6119   001BAA                     i2l410:
  6120   001BAA  0012               	return		;funcret
  6121   001BAC                     __end_of_EUSART1_Receive_ISR:
  6122                           	callstack 0
  6123                           
  6124 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  6125 ;; Defined at:
  6126 ;;		line 244 in file "mcc_generated_files/eusart1.c"
  6127 ;; Parameters:    Size  Location     Type
  6128 ;;		None
  6129 ;; Auto vars:     Size  Location     Type
  6130 ;;		None
  6131 ;; Return value:  Size  Location     Type
  6132 ;;                  1    wreg      void 
  6133 ;; Registers used:
  6134 ;;		None
  6135 ;; Tracked objects:
  6136 ;;		On entry : 0/0
  6137 ;;		On exit  : 0/0
  6138 ;;		Unchanged: 0/0
  6139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6144 ;;Total ram usage:        0 bytes
  6145 ;; Hardware stack levels used: 1
  6146 ;; This function calls:
  6147 ;;		Nothing
  6148 ;; This function is called by:
  6149 ;;		_EUSART1_Initialize
  6150 ;;		_EUSART1_Receive_ISR
  6151 ;; This function uses a non-reentrant model
  6152 ;;
  6153                           
  6154                           	psect	text55
  6155   002540                     __ptext55:
  6156                           	callstack 0
  6157   002540                     _EUSART1_DefaultOverrunErrorHandler:
  6158                           	callstack 19
  6159   002540                     
  6160                           ;mcc_generated_files/eusart1.c: 247:     RCSTA1bits.CREN = 0;
  6161   002540  98AB               	bcf	171,4,c	;volatile
  6162                           
  6163                           ;mcc_generated_files/eusart1.c: 248:     RCSTA1bits.CREN = 1;
  6164   002542  88AB               	bsf	171,4,c	;volatile
  6165   002544  0012               	return		;funcret
  6166   002546                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  6167                           	callstack 0
  6168                           
  6169 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  6170 ;; Defined at:
  6171 ;;		line 242 in file "mcc_generated_files/eusart1.c"
  6172 ;; Parameters:    Size  Location     Type
  6173 ;;		None
  6174 ;; Auto vars:     Size  Location     Type
  6175 ;;		None
  6176 ;; Return value:  Size  Location     Type
  6177 ;;                  1    wreg      void 
  6178 ;; Registers used:
  6179 ;;		None
  6180 ;; Tracked objects:
  6181 ;;		On entry : 0/0
  6182 ;;		On exit  : 0/0
  6183 ;;		Unchanged: 0/0
  6184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6189 ;;Total ram usage:        0 bytes
  6190 ;; Hardware stack levels used: 1
  6191 ;; This function calls:
  6192 ;;		Nothing
  6193 ;; This function is called by:
  6194 ;;		_EUSART1_Initialize
  6195 ;;		_EUSART1_Receive_ISR
  6196 ;; This function uses a non-reentrant model
  6197 ;;
  6198                           
  6199                           	psect	text56
  6200   002552                     __ptext56:
  6201                           	callstack 0
  6202   002552                     _EUSART1_DefaultFramingErrorHandler:
  6203                           	callstack 19
  6204   002552  0012               	return		;funcret
  6205   002554                     __end_of_EUSART1_DefaultFramingErrorHandler:
  6206                           	callstack 0
  6207                           
  6208 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  6209 ;; Defined at:
  6210 ;;		line 252 in file "mcc_generated_files/eusart1.c"
  6211 ;; Parameters:    Size  Location     Type
  6212 ;;		None
  6213 ;; Auto vars:     Size  Location     Type
  6214 ;;		None
  6215 ;; Return value:  Size  Location     Type
  6216 ;;                  1    wreg      void 
  6217 ;; Registers used:
  6218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6219 ;; Tracked objects:
  6220 ;;		On entry : 0/0
  6221 ;;		On exit  : 0/0
  6222 ;;		Unchanged: 0/0
  6223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6228 ;;Total ram usage:        0 bytes
  6229 ;; Hardware stack levels used: 1
  6230 ;; Hardware stack levels required when called: 1
  6231 ;; This function calls:
  6232 ;;		_EUSART1_RxDataHandler
  6233 ;; This function is called by:
  6234 ;;		_EUSART1_Initialize
  6235 ;;		_EUSART1_Receive_ISR
  6236 ;; This function uses a non-reentrant model
  6237 ;;
  6238                           
  6239                           	psect	text57
  6240   002546                     __ptext57:
  6241                           	callstack 0
  6242   002546                     _EUSART1_DefaultErrorHandler:
  6243                           	callstack 18
  6244   002546                     
  6245                           ;mcc_generated_files/eusart1.c: 253:     EUSART1_RxDataHandler();
  6246   002546  EC01  F012         	call	_EUSART1_RxDataHandler	;wreg free
  6247   00254A  0012               	return		;funcret
  6248   00254C                     __end_of_EUSART1_DefaultErrorHandler:
  6249                           	callstack 0
  6250                           
  6251 ;; *************** function _EUSART1_RxDataHandler *****************
  6252 ;; Defined at:
  6253 ;;		line 232 in file "mcc_generated_files/eusart1.c"
  6254 ;; Parameters:    Size  Location     Type
  6255 ;;		None
  6256 ;; Auto vars:     Size  Location     Type
  6257 ;;		None
  6258 ;; Return value:  Size  Location     Type
  6259 ;;                  1    wreg      void 
  6260 ;; Registers used:
  6261 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6271 ;;Total ram usage:        0 bytes
  6272 ;; Hardware stack levels used: 1
  6273 ;; This function calls:
  6274 ;;		Nothing
  6275 ;; This function is called by:
  6276 ;;		_EUSART1_Receive_ISR
  6277 ;;		_EUSART1_DefaultErrorHandler
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           
  6281                           	psect	text58
  6282   002402                     __ptext58:
  6283                           	callstack 0
  6284   002402                     _EUSART1_RxDataHandler:
  6285                           	callstack 19
  6286   002402                     
  6287                           ;mcc_generated_files/eusart1.c: 234:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  6288   002402  0E34               	movlw	low _eusart1RxBuffer
  6289   002404  2446               	addwf	_eusart1RxHead^0,w,c	;volatile
  6290   002406  6ED9               	movwf	fsr2l,c
  6291   002408  6ADA               	clrf	fsr2h,c
  6292   00240A  0E00               	movlw	high _eusart1RxBuffer
  6293   00240C  22DA               	addwfc	fsr2h,f,c
  6294   00240E  CFAE FFDF          	movff	4014,indf2	;volatile
  6295   002412  2A46               	incf	_eusart1RxHead^0,f,c	;volatile
  6296   002414                     
  6297                           ;mcc_generated_files/eusart1.c: 235:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  6298   002414  0E07               	movlw	7
  6299   002416  6446               	cpfsgt	_eusart1RxHead^0,c	;volatile
  6300   002418  EF10  F012         	goto	i2u151_41
  6301   00241C  EF12  F012         	goto	i2u151_40
  6302   002420                     i2u151_41:
  6303   002420  EF14  F012         	goto	i2l2630
  6304   002424                     i2u151_40:
  6305   002424                     
  6306                           ;mcc_generated_files/eusart1.c: 236:     {;mcc_generated_files/eusart1.c: 237:         e
      +                          usart1RxHead = 0;
  6307   002424  0E00               	movlw	0
  6308   002426  6E46               	movwf	_eusart1RxHead^0,c	;volatile
  6309   002428                     i2l2630:
  6310                           
  6311                           ;mcc_generated_files/eusart1.c: 239:     eusart1RxCount++;
  6312   002428  2A44               	incf	_eusart1RxCount^0,f,c	;volatile
  6313   00242A  0012               	return		;funcret
  6314   00242C                     __end_of_EUSART1_RxDataHandler:
  6315                           	callstack 0
  6316                           
  6317 ;; *************** function _EUSART1_Read *****************
  6318 ;; Defined at:
  6319 ;;		line 175 in file "mcc_generated_files/eusart1.c"
  6320 ;; Parameters:    Size  Location     Type
  6321 ;;		None
  6322 ;; Auto vars:     Size  Location     Type
  6323 ;;  readValue       1    0[COMRAM] unsigned char 
  6324 ;; Return value:  Size  Location     Type
  6325 ;;                  1    wreg      unsigned char 
  6326 ;; Registers used:
  6327 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6328 ;; Tracked objects:
  6329 ;;		On entry : 0/0
  6330 ;;		On exit  : 0/0
  6331 ;;		Unchanged: 0/0
  6332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6334 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6336 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6337 ;;Total ram usage:        1 bytes
  6338 ;; Hardware stack levels used: 1
  6339 ;; This function calls:
  6340 ;;		Nothing
  6341 ;; This function is called by:
  6342 ;;		_PrintOnScreen
  6343 ;; This function uses a non-reentrant model
  6344 ;;
  6345                           
  6346                           	psect	text59
  6347   001F8E                     __ptext59:
  6348                           	callstack 0
  6349   001F8E                     _EUSART1_Read:
  6350                           	callstack 20
  6351   001F8E                     i2l2888:
  6352                           
  6353                           ;mcc_generated_files/eusart1.c: 179:     while(0 == eusart1RxCount)
  6354   001F8E  5044               	movf	_eusart1RxCount^0,w,c	;volatile
  6355   001F90  B4D8               	btfsc	status,2,c
  6356   001F92  EFCD  F00F         	goto	i2u186_41
  6357   001F96  EFCF  F00F         	goto	i2u186_40
  6358   001F9A                     i2u186_41:
  6359   001F9A  EFC7  F00F         	goto	i2l2888
  6360   001F9E                     i2u186_40:
  6361   001F9E                     
  6362                           ;mcc_generated_files/eusart1.c: 183:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  6363   001F9E  0E2C               	movlw	low _eusart1RxStatusBuffer
  6364   001FA0  2445               	addwf	_eusart1RxTail^0,w,c	;volatile
  6365   001FA2  6ED9               	movwf	fsr2l,c
  6366   001FA4  6ADA               	clrf	fsr2h,c
  6367   001FA6  0E00               	movlw	high _eusart1RxStatusBuffer
  6368   001FA8  22DA               	addwfc	fsr2h,f,c
  6369   001FAA  50DF               	movf	indf2,w,c
  6370   001FAC  6E43               	movwf	_eusart1RxLastError^0,c	;volatile
  6371                           
  6372                           ;mcc_generated_files/eusart1.c: 185:     readValue = eusart1RxBuffer[eusart1RxTail++];
  6373   001FAE  0E34               	movlw	low _eusart1RxBuffer
  6374   001FB0  2445               	addwf	_eusart1RxTail^0,w,c	;volatile
  6375   001FB2  6ED9               	movwf	fsr2l,c
  6376   001FB4  6ADA               	clrf	fsr2h,c
  6377   001FB6  0E00               	movlw	high _eusart1RxBuffer
  6378   001FB8  22DA               	addwfc	fsr2h,f,c
  6379   001FBA  50DF               	movf	indf2,w,c
  6380   001FBC  6E01               	movwf	EUSART1_Read@readValue^0,c
  6381   001FBE  2A45               	incf	_eusart1RxTail^0,f,c	;volatile
  6382   001FC0                     
  6383                           ;mcc_generated_files/eusart1.c: 186:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  6384   001FC0  0E07               	movlw	7
  6385   001FC2  6445               	cpfsgt	_eusart1RxTail^0,c	;volatile
  6386   001FC4  EFE6  F00F         	goto	i2u187_41
  6387   001FC8  EFE8  F00F         	goto	i2u187_40
  6388   001FCC                     i2u187_41:
  6389   001FCC  EFEA  F00F         	goto	i2l2898
  6390   001FD0                     i2u187_40:
  6391   001FD0                     
  6392                           ;mcc_generated_files/eusart1.c: 187:     {;mcc_generated_files/eusart1.c: 188:         e
      +                          usart1RxTail = 0;
  6393   001FD0  0E00               	movlw	0
  6394   001FD2  6E45               	movwf	_eusart1RxTail^0,c	;volatile
  6395   001FD4                     i2l2898:
  6396                           
  6397                           ;mcc_generated_files/eusart1.c: 190:     PIE1bits.RC1IE = 0;
  6398   001FD4  9A9D               	bcf	157,5,c	;volatile
  6399   001FD6                     
  6400                           ;mcc_generated_files/eusart1.c: 191:     eusart1RxCount--;
  6401   001FD6  0644               	decf	_eusart1RxCount^0,f,c	;volatile
  6402   001FD8                     
  6403                           ;mcc_generated_files/eusart1.c: 192:     PIE1bits.RC1IE = 1;
  6404   001FD8  8A9D               	bsf	157,5,c	;volatile
  6405   001FDA                     
  6406                           ;mcc_generated_files/eusart1.c: 194:     return readValue;
  6407   001FDA  5001               	movf	EUSART1_Read@readValue^0,w,c
  6408   001FDC  0012               	return		;funcret
  6409   001FDE                     __end_of_EUSART1_Read:
  6410                           	callstack 0
  6411                           
  6412                           	psect	text60
  6413   000000                     __ptext60:
  6414                           	callstack 0
  6415   000000                     
  6416                           	psect	rparam
  6417   000000                     
  6418                           	psect	temp
  6419   000056                     btemp:
  6420                           	callstack 0
  6421   000056                     	ds	1
  6422   000000                     int$flags	set	btemp
  6423   000000                     wtemp8	set	btemp+1
  6424   000000                     ttemp5	set	btemp+1
  6425   000000                     ttemp6	set	btemp+4
  6426   000000                     ttemp7	set	btemp+8
  6427                           
  6428                           	psect	config
  6429                           
  6430                           ;Config register CONFIG1L @ 0x1FFF8
  6431                           ;	Watchdog Timer Enable bit
  6432                           ;	WDT = OFF, WDT disabled (control is placed on SWDTEN bit)
  6433                           ;	Stack Overflow/Underflow Reset Enable bit
  6434                           ;	STVR = ON, Reset on stack overflow/underflow enabled
  6435                           ;	Extended Instruction Set Enable bit
  6436                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6437                           ;	Background Debugger Enable bit
  6438                           ;	DEBUG = OFF, Background debugger disabled; RB6 and RB7 configured as general purpose I
      +                          /O pins
  6439   01FFF8                     	org	131064
  6440   01FFF8  A0                 	db	160
  6441                           
  6442                           ;Config register CONFIG1H @ 0x1FFF9
  6443                           ;	Code Protection bit
  6444                           ;	CP0 = OFF, Program memory is not code-protected
  6445   01FFF9                     	org	131065
  6446   01FFF9  F4                 	db	244
  6447                           
  6448                           ;Config register CONFIG2L @ 0x1FFFA
  6449                           ;	Oscillator Selection bits
  6450                           ;	FOSC = HS, HS oscillator
  6451                           ;	Default/Reset System Clock Select bit
  6452                           ;	FOSC2 = ON, Clock selected by FOSC1:FOSC0 as system clock is enabled when OSCCON<1:0> 
      +                          = 00
  6453                           ;	Fail-Safe Clock Monitor Enable
  6454                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  6455                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
  6456                           ;	IESO = ON, Two-Speed Start-up enabled
  6457   01FFFA                     	org	131066
  6458   01FFFA  C4                 	db	196
  6459                           
  6460                           ;Config register CONFIG2H @ 0x1FFFB
  6461                           ;	Watchdog Timer Postscaler Select bits
  6462                           ;	WDTPS = 32768, 1:32768
  6463   01FFFB                     	org	131067
  6464   01FFFB  FF                 	db	255
  6465                           
  6466                           ;Config register CONFIG3L @ 0x1FFFC
  6467                           ;	External Address Bus Shift Enable bit
  6468                           ;	EASHFT = ON, Address shifting enabled; address on external bus is offset to start at 0
      +                          00000h
  6469                           ;	External Memory Bus
  6470                           ;	MODE = MM, Microcontroller mode, external bus disabled
  6471                           ;	Data Bus Width Select bit
  6472                           ;	BW = 16, 16-Bit Data Width mode
  6473                           ;	External Bus Wait Enable bit
  6474                           ;	WAIT = OFF, Wait states for operations on external memory bus disabled
  6475   01FFFC                     	org	131068
  6476   01FFFC  F8                 	db	248
  6477                           
  6478                           ;Config register CONFIG3H @ 0x1FFFD
  6479                           ;	ECCP2 MUX bit
  6480                           ;	CCP2MX = ON, ECCP2/P2A is multiplexed with RC1
  6481                           ;	ECCP MUX bit
  6482                           ;	ECCPMX = ON, ECCP1 outputs (P1B/P1C) are multiplexed with RE6 and RE5; ECCP3 outputs (
      +                          P3B/P3C) are multiplexed with RE4 and RE3
  6483                           ;	Ethernet LED Enable bit
  6484                           ;	ETHLED = ON, RA0/RA1 are multiplexed with LEDA/LEDB when Ethernet module is enabled an
      +                          d function as I/O when Ethernet is disabled
  6485   01FFFD                     	org	131069
  6486   01FFFD  F7                 	db	247
  6487                           tosu	equ	0xFFF
  6488                           tosh	equ	0xFFE
  6489                           tosl	equ	0xFFD
  6490                           stkptr	equ	0xFFC
  6491                           pclatu	equ	0xFFB
  6492                           pclath	equ	0xFFA
  6493                           pcl	equ	0xFF9
  6494                           tblptru	equ	0xFF8
  6495                           tblptrh	equ	0xFF7
  6496                           tblptrl	equ	0xFF6
  6497                           tablat	equ	0xFF5
  6498                           prodh	equ	0xFF4
  6499                           prodl	equ	0xFF3
  6500                           indf0	equ	0xFEF
  6501                           postinc0	equ	0xFEE
  6502                           postdec0	equ	0xFED
  6503                           preinc0	equ	0xFEC
  6504                           plusw0	equ	0xFEB
  6505                           fsr0h	equ	0xFEA
  6506                           fsr0l	equ	0xFE9
  6507                           wreg	equ	0xFE8
  6508                           indf1	equ	0xFE7
  6509                           postinc1	equ	0xFE6
  6510                           postdec1	equ	0xFE5
  6511                           preinc1	equ	0xFE4
  6512                           plusw1	equ	0xFE3
  6513                           fsr1h	equ	0xFE2
  6514                           fsr1l	equ	0xFE1
  6515                           bsr	equ	0xFE0
  6516                           indf2	equ	0xFDF
  6517                           postinc2	equ	0xFDE
  6518                           postdec2	equ	0xFDD
  6519                           preinc2	equ	0xFDC
  6520                           plusw2	equ	0xFDB
  6521                           fsr2h	equ	0xFDA
  6522                           fsr2l	equ	0xFD9
  6523                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    0
    Data        12
    BSS         99
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      85
    BANK0           160     95     144
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          128      0       0
    BANK15           96      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 35
		 -> main@potValue(BANK0[5]), command(BANK0[35]), LCD_PrintNum@strNumber(COMRAM[20]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 35
		 -> main@potValue(BANK0[5]), command(BANK0[35]), LCD_PrintNum@strNumber(COMRAM[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1999$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@potValue(BANK0[5]), LCD_PrintNum@strNumber(COMRAM[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1946$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1946$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> PrintOnScreen(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), PrintOnScreen(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_DefaultFramingErrorHandler(), 

    LCD_PrintStr@str	PTR const unsigned char  size(2) Largest target is 35
		 -> command(BANK0[35]), LCD_PrintNum@strNumber(COMRAM[20]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_PrintOnScreen
    _PrintOnScreen->_LCD_PrintStr
    _LCD_PrintStr->_LCD_PrintChar
    _LCD_PrintChar->_LCD_MoveCursorLeft
    _LCD_PrintChar->_LCD_MoveCursorRight
    _LCD_MoveCursorRight->i2_LCD_SetCursorAt
    _LCD_MoveCursorLeft->i2_LCD_SetCursorAt
    i2_LCD_SetCursorAt->i2_LCD_Code
    _LCD_Clear->i2_LCD_Code
    i2_LCD_Code->i2_LCD_4bitCode
    i2_LCD_Code->i2_LCD_8bitCode
    i2_LCD_8bitCode->i2_LCD_8bitCodeNoWait
    i2_LCD_4bitCode->i2_LCD_4bitCodeNoWait
    i2_LCD_Wait->i2___delay
    i2_LCD_Wait->i2__delay_us

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _LCD_Init->_LCD_SetCursorAt
    _LCD_SetCursorAt->_LCD_Code
    _LCD_Code->_LCD_4bitCode
    _LCD_Code->_LCD_8bitCode
    _LCD_8bitCode->_LCD_8bitCodeNoWait
    _LCD_4bitCode->_LCD_4bitCodeNoWait
    _LCD_Wait->___delay
    _LCD_Wait->__delay_us

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   26277
                                             84 BANK0     11    11      0
                  _ADC_GetConversion
                      _EUSART1_Write
                           _LCD_Init
                  _SYSTEM_Initialize
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               4     2      2     530
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    16      8    7462
                                             62 BANK0     22    14      8
                  _ADC_GetConversion (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6796
                                             54 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           19    13      6    6335
                                             40 BANK0     14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                13     9      4    4768
                                             27 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2533
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1177
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              6 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     484
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     484
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                            12    12      0   17523
                                             15 BANK0      6     6      0
                       _LCD_4bitCode
                 _LCD_4bitCodeNoWait
                       _LCD_8bitCode
                 _LCD_8bitCodeNoWait
                    _LCD_SetCursorAt
                          __delay_ms
                          __delay_us
 ---------------------------------------------------------------------------------
 (2) __delay_ms                                            5     3      2     663
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _LCD_SetCursorAt                                      6     2      4    8974
                                              9 BANK0      6     2      4
                           _LCD_Code
 ---------------------------------------------------------------------------------
 (3) _LCD_Code                                             2     0      2    7324
                                              7 BANK0      2     0      2
                       _LCD_4bitCode
                       _LCD_8bitCode
 ---------------------------------------------------------------------------------
 (4) _LCD_8bitCode                                         2     0      2    2690
                                              5 BANK0      2     0      2
                 _LCD_8bitCodeNoWait
                           _LCD_Wait
 ---------------------------------------------------------------------------------
 (5) _LCD_8bitCodeNoWait                                   5     3      2     453
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _LCD_4bitCode                                         2     0      2    3320
                                              5 BANK0      2     0      2
                 _LCD_4bitCodeNoWait
                           _LCD_Wait
 ---------------------------------------------------------------------------------
 (5) _LCD_Wait                                             0     0      0    1666
                            ___delay
                          __delay_us
 ---------------------------------------------------------------------------------
 (2) __delay_us                                            5     3      2     518
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) ___delay                                              5     3      2    1148
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) _LCD_4bitCodeNoWait                                   5     3      2     453
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      31
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           6     6      0   13936
                                             37 COMRAM     6     6      0
                                NULL *
                      _PrintOnScreen *
 ---------------------------------------------------------------------------------
 (10) _PrintOnScreen                                       8     8      0   13936
                                             29 COMRAM     8     8      0
                       _EUSART1_Read
                _EUSART1_Receive_ISR
                          _LCD_Clear
                       _LCD_PrintStr
                           i2_strlen
 ---------------------------------------------------------------------------------
 (11) _LCD_PrintStr                                        9     7      2   12081
                                             20 COMRAM     9     7      2
                 _LCD_MoveCursorLeft
                _LCD_MoveCursorRight
                      _LCD_PrintChar
                  i2_LCD_SetCursorAt
                           i2_strlen
 ---------------------------------------------------------------------------------
 (11) i2_strlen                                            4     2      2     194
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _LCD_PrintChar                                       1     1      0    5574
                                             19 COMRAM     1     1      0
                 _LCD_MoveCursorLeft
                _LCD_MoveCursorRight
                         i2_LCD_Code
 ---------------------------------------------------------------------------------
 (13) _LCD_MoveCursorRight                                 4     2      2    2084
                                             15 COMRAM     4     2      2
                  i2_LCD_SetCursorAt
 ---------------------------------------------------------------------------------
 (13) _LCD_MoveCursorLeft                                  4     2      2    2084
                                             15 COMRAM     4     2      2
                  i2_LCD_SetCursorAt
 ---------------------------------------------------------------------------------
 (12) i2_LCD_SetCursorAt                                   6     2      4    1812
                                              9 COMRAM     6     2      4
                         i2_LCD_Code
 ---------------------------------------------------------------------------------
 (11) _LCD_Clear                                           0     0      0    1456
                         i2_LCD_Code
                        i2__delay_ms
 ---------------------------------------------------------------------------------
 (12) i2__delay_ms                                         5     3      2      72
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (13) i2_LCD_Code                                          2     0      2    1384
                                              7 COMRAM     2     0      2
                     i2_LCD_4bitCode
                     i2_LCD_8bitCode
 ---------------------------------------------------------------------------------
 (14) i2_LCD_8bitCode                                      2     0      2     570
                                              5 COMRAM     2     0      2
               i2_LCD_8bitCodeNoWait
                         i2_LCD_Wait
 ---------------------------------------------------------------------------------
 (15) i2_LCD_8bitCodeNoWait                                5     3      2      92
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (14) i2_LCD_4bitCode                                      2     0      2     596
                                              5 COMRAM     2     0      2
               i2_LCD_4bitCodeNoWait
                         i2_LCD_Wait
 ---------------------------------------------------------------------------------
 (15) i2_LCD_Wait                                          0     0      0     430
                          i2___delay
                        i2__delay_us
 ---------------------------------------------------------------------------------
 (16) i2__delay_us                                         5     3      2      72
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (16) i2___delay                                           5     3      2     358
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (15) i2_LCD_4bitCodeNoWait                                5     3      2      92
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (11) _EUSART1_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_Read                                        1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _EUSART1_Write
   _LCD_Init
     _LCD_4bitCode
       _LCD_4bitCodeNoWait
       _LCD_Wait
         ___delay
         __delay_us
     _LCD_4bitCodeNoWait
     _LCD_8bitCode
       _LCD_8bitCodeNoWait
       _LCD_Wait
     _LCD_8bitCodeNoWait
     _LCD_SetCursorAt
       _LCD_Code
         _LCD_4bitCode
         _LCD_8bitCode
     __delay_ms
     __delay_us
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _sprintf
     _ADC_GetConversion (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
   _strlen

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _PrintOnScreen *
     _EUSART1_Read
     _EUSART1_Receive_ISR
       NULL(Fake) *
       _EUSART1_DefaultErrorHandler *
         _EUSART1_RxDataHandler
       _EUSART1_DefaultFramingErrorHandler *
       _EUSART1_DefaultOverrunErrorHandler *
       _EUSART1_RxDataHandler *
     _LCD_Clear
       i2_LCD_Code
         i2_LCD_4bitCode
           i2_LCD_4bitCodeNoWait
           i2_LCD_Wait
             i2___delay
             i2__delay_us
         i2_LCD_8bitCode
           i2_LCD_8bitCodeNoWait
           i2_LCD_Wait
       i2__delay_ms
     _LCD_PrintStr
       _LCD_MoveCursorLeft
         i2_LCD_SetCursorAt
           i2_LCD_Code
       _LCD_MoveCursorRight
         i2_LCD_SetCursorAt
       _LCD_PrintChar
         _LCD_MoveCursorLeft
         _LCD_MoveCursorRight
         i2_LCD_Code
       i2_LCD_SetCursorAt
       i2_strlen
     i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7F      0       0      50        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5F      90       5       90.0%
BITBIGSFR           80      0       0      48        0.0%
BITBANK14           80      0       0      32        0.0%
BANK14              80      0       0      33        0.0%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BIGRAM_1            60      0       0      47        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      55       1       90.4%
BITBIGSFR_1hhhl     1E      0       0      37        0.0%
BITBIGSFR_1llll     1E      0       0      46        0.0%
BITBIGSFR_1hhlh     10      0       0      40        0.0%
BITBIGSFR_1hhhh      D      0       0      36        0.0%
BITBIGSFR_1hhlh      C      0       0      41        0.0%
BITBIGSFR_1hhlh      B      0       0      39        0.0%
BITBIGSFR_1lllh      2      0       0      44        0.0%
BITBIGSFR_1hhlh      2      0       0      38        0.0%
BITBIGSFR_1lllh      1      0       0      45        0.0%
BITBIGSFR_1hhlh      1      0       0      42        0.0%
BITBIGSFR_1llh       1      0       0      43        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     105      49        0.0%
DATA                 0      0     105       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Sep 12 16:12:43 2023

                                            l50 22DE                                              l52 2308  
                                            l46 23A6                                              l55 20E8  
                                            l80 24C6                                              l58 2106  
                                            l83 1F8C                                              l92 2492  
                                            l86 2480                                              l89 1E2C  
                                            l97 250C                                    ___awdiv@sign 0065  
                                           l101 137E                                             l110 1472  
                                           l112 1486                                             l222 2458  
                                           l400 2430                                             l225 253E  
                                           l403 2442                                             l165 1882  
                                           l432 24FE                                             l426 24F0  
                                           l266 2214                                             l435 24D4  
                                           l429 24E2                                             l543 2232  
                                           l528 246E                                             l376 1DC0  
                                           l448 254E                                             l546 2254  
                                           l783 1AEA                                             l796 1C5C  
                                   i2___delay@i 0004                                             _abs 2192  
                                           _pad 1C5E                                ??i2_LCD_4bitCode 0008  
                                  ___awmod@sign 0065                                             tosl 0FFD  
                                           wreg 0FE8                                      _TXSTA1bits 0FAC  
                                ??_LCD_4bitCode 0067                                ??i2_LCD_8bitCode 0008  
                                 _LCD_PrintChar 1CDC                                     i2__delay_ms 2256  
                                   i2__delay_us 2340                                            ?_abs 0066  
                                          l1230 1F3C                                            l1307 1A24  
                                          l1315 20C0                                            l1252 1C82  
                                          l1324 22CE                                            l1261 11FA  
                                          l1318 2550                                            l1263 1202  
                                          l1256 1CDA                                            l1264 1248  
                                          l1282 15BC                                            l1275 134A  
                                          l1292 21CA                                            l1295 21D2  
                                          l1288 1EEC                                            l3410 1BCC  
                                          l3402 1BAC                                            l3420 1C04  
                                          l3412 1BDA                                            l3404 1BB2  
                                          l3500 1304                                            l3342 24B8  
                                          l3350 1F8A                                            l3510 2500  
                                          l3422 1C12                                            l3430 1C3C  
                                          l3414 1BE2                                            l3406 1BC0  
                                          l3270 198A                                            l3502 1314  
                                          l3352 1DC2                                            l3280 2384  
                                          l3344 1F3E                                            l3600 245A  
                                          l3520 24F2                                            l3360 1A2C  
                                          l3432 1C4C                                            l3424 1C28  
                                          l3416 1BF4                                            l3408 1BC8  
                                          l3272 19A8                                            l3264 195A  
                                          l3440 1C6E                                            l3504 131A  
                                ??_LCD_8bitCode 0067                                            l3354 1E28  
                                          l3282 2388                                            l3346 1F84  
                                          l3514 24C8                                            l3610 1D6C  
                                          l3602 1D50                                            l3370 1A5C  
                                          l3362 1A3A                                            l3434 1C54  
                                          l3426 1C30                                            l3418 1BFC  
                                          l3274 19DE                                            l3266 196E  
                                          l3290 207A                                            l3450 1CC6  
                                          l3442 1C7A                                            l3506 132A  
                                          l3530 14D0                                            l3522 1488  
                                          l3356 1E2A                                            l3284 22D0  
                                          l3348 1F88                                            l3516 24E4  
                                          l3620 1D9C                                            l3612 1D70  
                                          l3604 1D52                                            l3700 244C  
                                          l3380 1A8A                                            l3372 1A60  
                                          l3364 1A42                                            l3428 1C36  
                                          l3452 2192                                            l3268 1980  
                                          l3292 2088                                            l3444 1C8E  
                                          l3460 11B2                                            l3532 14E0  
                                          l3524 14B0                                            l3710 221A  
                                          l3278 2376                                            l3286 22E4  
                                          l3518 24D6                                            l3622 1DBE  
                                          l3614 1D74                                            l3606 1D64  
                                          l3702 2450                                            l3390 1ABE  
                                          l3382 1A98                                            l3374 1A68  
                                          l3366 1A46                                            l3358 1A26  
                                          l3454 21AE                                            l3294 209A  
                                          l3446 1CA2                                            l3438 1C5E  
                                          l3470 120A                                            l3462 11C8  
                                          l3542 157C                                            l3534 1500  
                                          l3526 14BE                                            l3630 1EE2  
                                          l3712 222E                                            l3288 22EA  
                                          l3456 2470                                            l3560 17C8  
                                          l3552 20C2                                            l3616 1D78  
                                          l3608 1D68                                            l3704 2454  
                                          l3392 1AC4                                            l3384 1A9E  
                                          l3376 1A7A                                            l3368 1A54  
                                          l3296 20A0                                            l3448 1CA8  
                                          l3480 1244                                            l3472 121A  
                                          l3464 11D8                                            l3536 1520  
                                          l3528 14CC                                            l3624 1E98  
                                          l3714 2230                                            l3706 2430  
                                          l3298 24B8                                            l3458 2482  
                                          l3570 1842                                            l3562 17E4  
                                          l3554 20D0                                            l3650 138C  
                                          l3634 134C                                            l3618 1D8A  
                                          l3386 1AB4                                            l3378 1A82  
                                          l3394 1ACA                                            l3490 129A  
                                          l3482 1250                                            l3474 1220  
                                          l3466 11E0                                            l3538 1564  
                                          l3546 158E                                            l3626 1EA4  
                                          l3716 2240                                            l3708 243E  
                                          l3564 17FE                                            l3556 20E2  
                                          l3660 13D2                                            l3652 139A  
                                          l3636 135C                                            l3396 1ADA  
                                          l3388 1ABC                                            l3492 12A0  
                                          l3484 125A                                            l3476 1230  
                                          l3468 11EE                                            l3628 1EC2  
                                          l3566 181A                                            l3558 17AC  
                                          l3670 142A                                            l3662 13E0  
                                          l3654 13A8                                            l3646 137E  
                                          l3638 137E                                            l3582 254C  
                                          l3590 2200                                            l3398 1AE2  
                                          l3486 1260                                            l3494 12BC  
                                          l3478 123C                                            ?_pad 0070  
                                          l3568 182E                                            l3576 1856  
                                          l3664 13EE                                            l3656 13B6  
                                          l3648 137E                                            l3592 2202  
                                          l3584 21D4                                            l3496 12D8  
                                          l3488 1294                                            l3680 22C0  
                                          l3840 15CC                                            l3832 15BE  
                                          l3922 186C                                            l3666 13FC  
                                          l3658 13C4                                            l3594 2204  
                                          l3586 21F8                                            l3498 12EA  
                                          l3690 1F10                                            l3674 2296  
                                          l3850 1640                                            l3842 15E4  
                                          l3834 15C6                                            l3668 140A  
                                          l3596 220A                                            l3588 21FA  
                                          l3692 1F2C                                            l3684 1EEE  
                                          l3676 22A2                                            l3860 1694  
                                          l3852 164C                                            l3844 15EA  
                                          l3836 15C8                                            l3598 2536  
                                          l3686 1F00                                            l3678 22A8  
                                          l3854 165E                                            l3846 1608  
                                          l3838 15CA                                            l3696 2444  
                                          l3688 1F08                                            l3856 1664  
                                          l3848 162C                                            l3698 2448  
                                          l3858 1688                                            STR_1 1001  
                                          STR_2 1001                                            u2300 19DE  
                                          u2301 19DA                                            _LATA 0F89  
                                          u2310 23A6                                            _LATB 0F8A  
                                          u2311 23A2                                            _LATC 0F8B  
                                          u2320 2308                                            u2400 1A98  
                                          _LATD 0F8C                                            u2321 2304  
                                          u2401 1A94                                            _LATE 0F8D  
                                          u2410 1AB4                                            u2330 20C0  
                                          _LATF 0F8E                                            u2411 1AB0  
                                          u2331 20BC                                            _LATG 0F8F  
                                          u2420 1ADA                                            u2500 1CC6  
                                          _LATH 0F90                                            u2421 1AD6  
                                          u2501 1CC2                                            u2430 1BC0  
                                          u2510 21AE                                            u2270 196E  
                                          _LATJ 0F91                                            u2431 1BBC  
                                          u2511 21AA                                            u2271 196A  
                                          u2440 1BDA                                            u2280 1980  
                                          u2600 1304                                            u2520 11C4  
                                          u2345 1F4C                                            u2441 1BD6  
                                          u2281 197C                                            u2601 1300  
                                          u2521 11BE                                            u2370 1A3A  
                                          u2450 1BF4                                            u2290 19A8  
                                          u2610 1314                                            u2530 11C6  
                                          u2355 1DD0                                            u2371 1A36  
                                          u2451 1BF0                                            u2291 19A4  
                                          u2611 1310                                            u2380 1A54  
                                          u2460 1C12                                            u2540 11D8  
                                          u2620 14B0                                            u2700 1EE2  
                                          u2365 1DFA                                            u2381 1A50  
                                          u2461 1C0E                                            u2541 11D4  
                                          u2621 14AC                                            u2701 1EDE  
                                          u2390 1A7A                                            u2470 1C28  
                                          u2550 11EE                                            u2630 1500  
                                          u2391 1A76                                            u2471 1C24  
                                          u2551 11EA                                            u2631 14FC  
                                          u2480 1C4C                                            u2560 121A  
                                          u2640 1520                                            u2481 1C48  
                                          u2561 1216                                            u2641 151C  
                                          u2650 2106                                            u2490 1C6E  
                                          u2570 1230                                            u2651 2102  
                                          u2715 1368                                            u2491 1C6A  
                                          u2571 122C                                            u2660 17C8  
                                          u2716 136A                                            u2580 12D8  
                                          u2740 22C0                                            u2661 17C4  
                                          u2725 1372                                            u2581 12D4  
                                          u2741 22BC                                            u2750 243E  
                                          u2670 17E4                                            u2726 1374  
                                          u2590 12EA                                            u2751 243A  
                                          u2671 17E0                                            u2735 137C  
                                          u2591 12E6                                            u2760 2240  
                                          u2680 17FE                                            u2920 15DC  
                                          u2761 223C                                            u2681 17FA  
                                          u2737 137E                                            u2921 15D6  
                                          u2690 181A                                            u2930 15FA  
                                          u2691 1816                                            u2931 15F4  
                                          u2940 1688                                            u2941 1684  
                                          u2926 15DE                                            u2936 15FC  
                                          u2957 16A0                                            u2967 20D8  
                                          i2l50 234C                                            i2l52 2374  
                                          i2l46 23D6                                            i2l55 2276  
                                          i2l80 2528                                            i2l58 2294  
                                          i2l83 2078                                            i2l92 24B6  
                                          i2l86 24A4                                            i2l89 1E96  
                                          i2l97 251A                                   _EUSART1_Write 242C  
                                   ?i2_LCD_Code 0008                                   ?_LCD_PrintStr 0015  
                                          abs@a 0066                                            _dbuf 0100  
                                          _main 15BE                                            _dtoa 11B2  
                                   ?i2_LCD_Wait 0001                                   ?_EUSART1_Read 0001  
                                          _prec 00C1                                            pad@i 0077  
                                          pad@p 0074                                            fsr1h 0FE2  
                                          fsr2h 0FDA                                            indf1 0FE7  
                                          indf2 0FDF                                            fsr1l 0FE1  
                                          pad@w 0079                                            fsr2l 0FD9  
                                          btemp 0056                                            start 0082  
                fp__EUSART1_DefaultErrorHandler 0000                                    ___param_bank 0000  
                               _LCD_SetCursorAt 17AC                                           ??_abs 0068  
                                         ??_pad 0076                                __end_of_LCD_Code 250E  
                              __end_of_LCD_Init 1488                                __end_of_LCD_Wait 24C8  
                         PrintOnScreen@received 0022                   __end_of_OSCILLATOR_Initialize 2540  
                         _eusart1RxStatusBuffer 002C                                 __end_of___delay 23A8  
                                         ?_main 0001                                           ?_dtoa 007B  
                    LCD_MoveCursorRight@howMuch 0010                                 __end_of___awdiv 1AEC  
                               __end_of___awmod 1C5E                            i2_LCD_8bitCodeNoWait 202C  
                               ___awdiv@divisor 0062                                           i2l120 1D4E  
                                         i2l132 17AA                                           i2l410 1BAA  
                                         i2l420 2544                                           i2l148 2400  
                                         i2l165 1958                                           i2l414 242A  
                                         i2l423 254A                                           i2l192 214C  
                                         i2l417 2552                                           i2l188 2190  
                                         i2l373 11B0                                           i2l457 0066  
                                         i2l397 1FDC                                    LCD_Code@code 0067  
                               ___awdiv@counter 0064                                    vfpfcnvrt@fmt 008A  
                                  __delay_ms@ms 0060                                           _PORTE 0F84  
                                         _TRISA 0F92                                           _TRISB 0F93  
                                         _TRISC 0F94                                           _TRISD 0F95  
                                         _TRISE 0F96                                           _TRISF 0F97  
                                         _TRISG 0F98                                           _TRISH 0F99  
                                         _TRISJ 0F9A                                    __delay_us@us 0060  
                                ?_LCD_PrintChar 0001                                           _flags 00C3  
                                         _fputc 195A                                           _fputs 207A  
                                         pad@fp 0070                                    main@potValue 00B7  
                                         _width 00BF                                           _putch 2550  
                                         main@i 00BD                                           dtoa@d 007D  
                                         dtoa@i 0086                                           dtoa@p 0081  
                                         dtoa@s 0085                                           dtoa@w 0083  
                                ?_EUSART1_Write 0001                                           pclath 0FFA  
                                         pclatu 0FFB                                           tablat 0FF5  
                                ??_LCD_PrintStr 0017                                  ??_EUSART1_Read 0001  
                                         ttemp5 0057                                           ttemp6 005A  
                                         ttemp7 005E                                           status 0FD8  
                                         wtemp8 0057                                 __end_of_sprintf 1F3E  
         fp__EUSART1_DefaultFramingErrorHandler 0000      __end_of_EUSART1_DefaultFramingErrorHandler 2554  
          ??_EUSART1_DefaultFramingErrorHandler 0001             ?_EUSART1_DefaultFramingErrorHandler 0001  
            _EUSART1_DefaultFramingErrorHandler 2552                                __end_ofi2_strlen 2340  
                               __initialization 1FDE                      __end_of_EUSART1_Initialize 1DC2  
                                  __end_of_main 16B6                                    __end_of_dtoa 134C  
                            _LCD_4bitCodeNoWait 1DC2                     ?_INTERRUPT_InterruptManager 0001  
                                 i2__delay_ms@i 0004                           ?i2_LCD_8bitCodeNoWait 0001  
                                 i2__delay_us@i 0004                                          ??_main 00B4  
                                        ??_dtoa 007F                               __end_of_LCD_Clear 2402  
                                 __activetblptr 0003                             ?_LCD_4bitCodeNoWait 0060  
                                        _ADCON0 0FC2                                          _ADCON1 0FC1  
                                        _ADCON2 0FC0                                          ?_fputc 0060  
                                        ?_fputs 0069                                          _ADRESH 0FC4  
                                        _ADRESL 0FC3                                ___awdiv@dividend 0060  
                                        ?_putch 0001                                          i2l3000 104A  
                                        i2l3010 1098                                          i2l3002 1056  
                                        i2l1324 233E                                          i2l3020 10FC  
                                        i2l3012 10A4                                          i2l3004 1072  
                                        i2l2310 23A8                                          i2l3022 1120  
                                        i2l3006 1076                                          i2l3014 10C4  
                                        i2l3030 1182                                          i2l2312 23B4  
                                        i2l2320 2356                                          i2l3032 1192  
                                        i2l3008 1094                                          i2l2314 23B8  
                                        i2l2322 251C                                          i2l3034 11A2  
                                        i2l3018 10DA                                          i2l3026 1146  
                                        i2l2316 2340                                          i2l2420 250E  
                                        i2l3028 1178                                          i2l2318 2352  
                                        i2l2600 192C                                          i2l2370 2070  
                                        i2l2610 214E                                          i2l3170 003E  
                                        i2l2380 1E94                                          i2l2372 2074  
                                        i2l2612 2174                                          i2l2620 2138  
                                        i2l2700 1D42                                          i2l3172 004C  
                                        i2l2630 2428                                          i2l2622 2402  
                                        i2l2710 2540                                          i2l2366 251C  
                                        i2l2374 2076                                          i2l2614 217C  
                                        i2l3166 0022                                          i2l2624 2412  
                                        i2l2712 2546                                          i2l2376 1E2E  
                                        i2l2368 202C                                          i2l2616 2108  
                                        i2l2800 170C                                          i2l3168 0030  
                                        i2l2626 2414                                          i2l2378 1E92  
                                        i2l2618 2130                                          i2l2802 171E  
                                        i2l2810 175E                                          i2l2900 1FD6  
                                        i2l2628 2424                                          i2l2396 2494  
                                        i2l2820 23E4                                          i2l2804 1730  
                                        i2l2812 1762                                          i2l2902 1FD8  
                                        i2l2398 24A6                                          i2l2822 23F4  
                                        i2l2590 18F0                                          i2l2582 1884  
                                        i2l2750 230A                                          i2l2814 1784  
                                        i2l2806 1742                                          i2l2904 1FDA  
                                        i2l2744 2256                                          i2l2592 1904  
                                        i2l2584 189E                                          i2l2752 2316  
                                        i2l2816 1796                                          i2l2808 1752  
                                        i2l2746 2262                                          i2l2818 23D8  
                                        i2l2594 1918                                          i2l2586 18BA  
                                        i2l2690 1D00                                          i2l2754 231A  
                                        i2l2748 2272                                          i2l2588 18D4  
                                        i2l2692 1D08                                          i2l2756 2332  
                                        i2l2870 1B08                                          i2l2694 1D0E  
                                        i2l2686 1CDE                                          i2l2790 16B6  
                                        i2l2880 1B6A                                          i2l2872 1B16  
                                        i2l2696 1D20                                          i2l2688 1CEE  
                                        i2l2792 16C6                                          i2l2890 1F9E  
                                        i2l2882 1B86                                          i2l2874 1B32  
                                        i2l2866 1AEC                                          i2l2698 1D32  
                                        i2l2794 16D2                                          i2l2892 1FBE  
                                        i2l2884 1BA6                                          i2l2876 1B40  
                                        i2l2868 1AFA                                          i2l2796 16F0  
                                        i2l3924 115A                                          i2l2894 1FC0  
                                        i2l2886 1F8E                                          i2l2878 1B4E  
                                        i2l3926 1942                                          i2l2798 1704  
                                        i2l2990 1006                                          i2l2896 1FD0  
                                        i2l2888 1F8E                                          i2l2992 100A  
                                        i2l2898 1FD4                                          i2l2994 1010  
                                        i2l2996 1022                                          i2l2998 1036  
                                i2___delay@time 0001                                          _RCREG1 0FAE  
                                        _RCSTA1 0FAB                                          _OSCCON 0FD3  
                                        _SPBRG1 0FAF                                          _TXREG1 0FAD  
                                        _TXSTA1 0FAC                         __end_of_LCD_SetCursorAt 1884  
                          ??_LCD_4bitCodeNoWait 0062                            i2LCD_SetCursorAt@pos 000A  
                          i2LCD_SetCursorAt@row 000C                                    vfprintf@cfmt 009C  
                          __end_of_LCD_4bitCode 2494                                       ??___delay 0062  
                                     ??___awdiv 0064                                       ??___awmod 0064  
                      ?_EUSART1_SetErrorHandler 0060                            __end_of_LCD_8bitCode 2482  
                                        clear_0 2004                                          clear_1 2010  
                                        clear_2 201C                                ___awdiv@quotient 0066  
                               ___awmod@divisor 0062                                          isa$std 0001  
                               ___awmod@counter 0064                                          pad@buf 0072  
              ??_EUSART1_SetOverrunErrorHandler 0063                 ?_EUSART1_SetOverrunErrorHandler 0060  
                                        dtoa@fp 007B                                          _strlen 2296  
                                        fputc@c 0060                                 ??_LCD_PrintChar 0014  
                             __end_ofi2___delay 23D8                                          fputs@c 006D  
                                        fputs@i 006E                                    __pdataCOMRAM 0047  
                                        fputs@s 0069                                  _LCD_isCursorOn 0049  
                              LCD_4bitCode@code 0065                                    __mediumconst 0000  
                                        tblptrh 0FF7                                          tblptrl 0FF6  
                                        tblptru 0FF8                        ADC_GetConversion@channel 0064  
                                        putch@c 0001                                __end_of_vfprintf 1EEE  
                               ??_EUSART1_Write 0060                                       ??_sprintf 00A6  
                               _eusart1RxBuffer 0034                               _SYSTEM_Initialize 2444  
                     LCD_MoveCursorLeft@howMuch 0010                                      __accesstop 0060  
                                     ?_LCD_Code 0067                         __end_of__initialization 2022  
                                     ?_LCD_Init 0001                           __end_of_PrintOnScreen 11B2  
                                     ?_LCD_Wait 0001                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 0001                   __end_of_EUSART1_RxDataHandler 242C  
                                __pcstackCOMRAM 0001                             ??_SYSTEM_Initialize 0063  
                                 __end_of_fputc 1A26                                   __end_of_fputs 20C2  
                        ??i2_LCD_8bitCodeNoWait 0003                                   __end_of_putch 2552  
                          __end_of_LCD_PrintStr 17AC                            __end_of_EUSART1_Read 1FDE  
                   __end_of_EUSART1_Receive_ISR 1BAC                                  i2LCD_Code@code 0008  
                        LCD_8bitCodeNoWait@code 0060                                  i2__delay_ms@ms 0001  
                                  ?i2__delay_ms 0001                                    ?i2__delay_us 0001  
                                i2__delay_us@us 0001                                       ?i2_strlen 0001  
                                       ??_fputc 0064                       __end_of_SYSTEM_Initialize 245A  
                                       ??_fputs 006D                                         ??_putch 0060  
                                 _eusart1RxHead 0046                                   _eusart1RxTail 0045  
                                    __pbssBANK0 00BF                                      __pbssBANK1 0100  
               ??_EUSART1_SetRxInterruptHandler 0063                                    ??i2_LCD_Code 000A  
                                    ??_LCD_Code 0069                                      ??_LCD_Init 006F  
                                  ??i2_LCD_Wait 0006                                      ??_LCD_Wait 0065  
                                    __pnvCOMRAM 0053                                ?_LCD_SetCursorAt 0069  
               __end_of_EUSART1_SetErrorHandler 2500                                   LCD_PrintStr@i 001C  
                                       ?_strlen 0060          __end_of_EUSART1_SetFramingErrorHandler 24F2  
                _EUSART1_SetFramingErrorHandler 24E4                        i2LCD_4bitCodeNoWait@code 0001  
                             __end_of__delay_ms 2108                               __end_of__delay_us 230A  
                            __end_ofi2_LCD_Code 251C                              __end_ofi2_LCD_Wait 252A  
                  ?_EUSART1_DefaultErrorHandler 0001                                         _OSCTUNE 0F9B  
                                       _SPBRGH1 0F7F                                      ??i2_strlen 0003  
                           _LCD_MoveCursorRight 2108                    __end_ofi2_LCD_4bitCodeNoWait 1E98  
                    __end_of_LCD_MoveCursorLeft 2192                      __end_of_LCD_8bitCodeNoWait 1F8E  
                               LCD_PrintStr@str 0015                            _ADC_InterruptHandler 003C  
                                       __Hparam 0000                                         __Lparam 0000  
                          ?_LCD_MoveCursorRight 0010                                         ___delay 2376  
                                       ___awdiv 1A26                                         ___awmod 1BAC  
                                     ?_vfprintf 0096                                    __psmallconst 1000  
                                       __pcinit 1FDE                                         __ramtop 1000  
                                       __ptext0 15BE                                         __ptext1 2296  
                                       __ptext2 1EEE                                         __ptext3 1E98  
                                       __ptext4 1488                                         __ptext5 11B2  
                                       __ptext6 1C5E                                         __ptext7 207A  
                                       __ptext8 195A                                         __ptext9 2550  
                                       _command 00C4                           _OSCILLATOR_Initialize 2536  
                              ___awmod@dividend 0060                                  PrintOnScreen@i 0024  
                            _EUSART1_Initialize 1D50                        ??_PIN_MANAGER_Initialize 0060  
                               _LCD_isDisplayOn 004B                                       _LCD_Clear 23D8  
                 ??_EUSART1_DefaultErrorHandler 0001                                    _LCD_4bitCode 2482  
                                       main@len 00BC                                         _sprintf 1EEE  
                          end_of_initialization 2022                             ?_EUSART1_Initialize 0001  
                                  _LCD_8bitCode 2470                                 _LCD_isIncrement 004D  
                                       fputc@fp 0062                     _EUSART1_OverrunErrorHandler 00EA  
                                       fputs@fp 006B           __end_of_EUSART1_SetRxInterruptHandler 24D6  
                 _EUSART1_SetRxInterruptHandler 24C8                               __end_of_vfpfcnvrt 15BE  
                         ??_LCD_MoveCursorRight 0012                                         postdec1 0FE5  
                                       postdec2 0FDD                                         postinc0 0FEE  
                                       postinc1 0FE6                                         postinc2 0FDE  
                              vfpfcnvrt@convarg 0090                                      ??_vfprintf 009C  
                          ??_EUSART1_Initialize 0063                                         strlen@a 0062  
                                       strlen@s 0060                                       _PORTBbits 0F81  
                                     _PORTEbits 0F84                                       _PORTGbits 0F86  
                                     _PORTHbits 0F87                                       _PORTJbits 0F88  
                                     _TRISGbits 0F98                                       _TRISHbits 0F99  
                              LCD_8bitCode@code 0065                                      ?_LCD_Clear 0001  
                        LCD_PrintChar@inputChar 0014                                       i2___delay 23A8  
                           EUSART1_Write@txData 0060                                    _LCD_PrintStr 16B6  
                                  _EUSART1_Read 1F8E                    __end_of_INTERRUPT_Initialize 2550  
                                   vfpfcnvrt@ap 008C                                     vfpfcnvrt@cp 0094  
                          i2_LCD_4bitCodeNoWait 1E2E                                     __delay_ms@i 0063  
                                   vfpfcnvrt@fp 0088                                     __delay_us@i 0063  
                                 __pidataCOMRAM 252A                                  _ADC_Initialize 245A  
                        ?_OSCILLATOR_Initialize 0001                                  __end_of_strlen 22D0  
                           start_initialization 1FDE                           __end_of_LCD_PrintChar 1D50  
                                   __end_of_abs 21D4                                     __end_of_pad 1CDC  
                                    ?i2___delay 0001   EUSART1_SetRxInterruptHandler@interruptHandler 0060  
                         __end_of_EUSART1_Write 2444                              i2LCD_4bitCode@code 0006  
                                     i2strlen@a 0003                                       i2strlen@s 0001  
                                   vfprintf@fmt 0098                           _EUSART1_RxDataHandler 2402  
                ?_EUSART1_SetRxInterruptHandler 0060                          __end_of_ADC_Initialize 2470  
                         ?i2_LCD_4bitCodeNoWait 0001                            _LCD_isCursorBlinking 003F  
                                      ??_strlen 0062                                       ___delay@i 0063  
                                _eusart1RxCount 0044                                fp__PrintOnScreen 0000  
                                   __pbssCOMRAM 002C               _EUSART1_RxDefaultInterruptHandler 0053  
                                 __pcstackBANK0 0060                                     ??_LCD_Clear 000A  
                                     __delay_ms 20C2                                       __delay_us 22D0  
                          LCD_PrintStr@initialX 0018                            LCD_PrintStr@initialY 001A  
                                i2_LCD_4bitCode 24A6                ??_EUSART1_SetFramingErrorHandler 0063  
               ?_EUSART1_SetFramingErrorHandler 0060                                  i2_LCD_8bitCode 2494  
                                     __pnvBANK0 00E7                              _LCD_isCursorMoving 0047  
                        _PIN_MANAGER_Initialize 21D4                                       _dtoa$2026 007F  
                                     __pintcode 0008                                        ?___delay 0060  
                                      ?___awdiv 0060                                        ?___awmod 0060  
                               ?_ADC_Initialize 0001                    ??_INTERRUPT_InterruptManager 0026  
                            _LCD_MoveCursorLeft 214E                        i2LCD_8bitCodeNoWait@code 0001  
                            _LCD_8bitCodeNoWait 1F3E                                     __smallconst 1000  
                                      _BAUDCON1 0F7E           fp__EUSART1_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART1_DefaultOverrunErrorHandler 2546            ??_EUSART1_DefaultOverrunErrorHandler 0001  
           ?_EUSART1_DefaultOverrunErrorHandler 0001              _EUSART1_DefaultOverrunErrorHandler 2540  
                          _EUSART1_ErrorHandler 00E7                         _EUSART1_SetErrorHandler 24F2  
                           ?_LCD_MoveCursorLeft 0010                                      ?__delay_ms 0060  
                                    ?__delay_us 0060                             ?_LCD_8bitCodeNoWait 0060  
                                   ??i2___delay 0003                                        ?_sprintf 009E  
                        __end_ofi2_LCD_4bitCode 24B8                            _INTERRUPT_Initialize 254C  
                        __end_ofi2_LCD_8bitCode 24A6                                        _LCD_Code 2500  
                                      _LCD_Init 134C                                        _LCD_Wait 24B8  
       EUSART1_SetErrorHandler@interruptHandler 0060                                PrintOnScreen@len 0020  
                                 _PrintOnScreen 1006                                        _LCD_posX 0051  
                                      _LCD_posY 004F                                        _PIE1bits 0F9D  
                                      i2u201_40 1132                                        i2u200_48 1110  
                                      i2u201_41 112A                                        i2u115_40 23D6  
                                      i2u202_48 1134                                        i2u115_41 23D2  
                                      i2u116_40 2374                                        i2u220_40 0030  
                                      i2u116_41 2370                                        i2u220_41 002C  
                                      i2u221_40 003E                                        i2u221_41 003A  
                                      i2u117_45 2038                                        i2u150_40 2130  
                                      i2u222_40 004C                                        i2u150_41 212C  
                                      i2u222_41 0048                                        i2u118_45 1E3A  
                                      i2u151_40 2424                                        i2u151_41 2420  
                                      i2u119_45 1E64                                        i2u223_48 0052  
                                      i2u223_49 0066                                        i2u145_40 189E  
                                      i2u145_41 189A                                        i2u146_40 18BA  
                                      i2u162_40 1D00                                        i2u146_41 18B6  
                                      i2u162_41 1CFC                                        i2u147_40 18D4  
                                      i2u163_40 1D20                                        i2u147_41 18D0  
                                      i2u163_41 1D1C                                        i2u180_40 1B08  
                                      i2u148_40 18F0                                        i2u164_40 1D32  
                                      i2u180_41 1B04                                        i2u148_41 18EC  
                                      i2u164_41 1D2E                                        i2u149_40 2174  
                                      i2u149_41 2170                                        i2u182_40 1B40  
                                      i2u181_48 1B1C                                        i2u182_41 1B3C  
                                      i2u181_49 1B32                                        i2u175_40 16F0  
                                      i2u175_41 16EC                                        i2u184_40 1B86  
                                      i2u183_48 1B54                                        i2u168_40 2294  
                                      i2u176_40 1730                                        i2u184_41 1B82  
                                      i2u183_49 1B6A                                        i2u168_41 2290  
                                      i2u176_41 172C                                        i2u169_40 2332  
                                      i2u177_40 1742                                        i2u193_40 1022  
                                      i2u169_41 232E                                        i2u177_41 173E  
                                      i2u193_41 101E                                        _PIR1bits 0F9E  
                                      i2u186_40 1F9E                                        i2u185_48 1B8C  
                                      i2u178_40 1784                                        i2u194_40 1036  
                                      i2u186_41 1F9A                                        i2u185_49 1BA2  
                                      i2u178_41 1780                                        i2u194_41 1032  
                                      i2u187_40 1FD0                                        i2u179_40 1796  
                                      i2u195_40 1094                                        i2u187_41 1FCC  
                                      i2u179_41 1792                                        i2u195_41 1090  
                                      i2u196_40 10D6                                        i2u196_41 10D2  
                                      i2u197_40 10EC                                        i2u197_41 10E4  
                                      i2u199_40 110E                                        i2u198_48 10EE  
                                      i2u199_41 1106                                        i2u297_47 2268  
                          ??_LCD_MoveCursorLeft 0012                          ?_EUSART1_RxDataHandler 0001  
                                      _RCONbits 0FD0                            ??_LCD_8bitCodeNoWait 0062  
                        ??i2_LCD_4bitCodeNoWait 0003                               i2_LCD_SetCursorAt 1884  
                                     _vfpfcnvrt 1488                                      _ADCON0bits 0FC2  
                                    _ADCON1bits 0FC1                              ?i2_LCD_SetCursorAt 000A  
                           PrintOnScreen@length 0023                                        i2_strlen 230A  
                           ??i2_LCD_SetCursorAt 000E                                 ?i2_LCD_4bitCode 0006  
                                     copy_data0 1FF2                           ?_INTERRUPT_Initialize 0001  
                                   _LCD_isShift 0041                                 ?i2_LCD_8bitCode 0006  
                         EUSART1_Read@readValue 0001                                  ?_PrintOnScreen 0001  
                   __end_of_LCD_MoveCursorRight 214E                                        __Hrparam 0000  
                            LCD_SetCursorAt@pos 0069                              LCD_SetCursorAt@row 006B  
                                    vfprintf@ap 009A                                        __Lrparam 0000  
                                    vfprintf@fp 0096                               _ADC_GetConversion 2216  
                     __end_ofi2_LCD_SetCursorAt 195A                         ??_OSCILLATOR_Initialize 0060  
                            ?_ADC_GetConversion 0060                                      ?_vfpfcnvrt 0088  
                     ??_EUSART1_SetErrorHandler 0063             __end_of_EUSART1_DefaultErrorHandler 254C  
                   _EUSART1_DefaultErrorHandler 2546                             ??_ADC_GetConversion 0062  
                                    sprintf@fmt 00A0                               ??_LCD_SetCursorAt 006D  
                                 ??i2__delay_ms 0003                                   ??i2__delay_us 0003  
                                   ??__delay_ms 0062                                     ??__delay_us 0062  
                                      __ptext10 2192                                        __ptext11 1BAC  
                                      __ptext20 24E4                                        __ptext12 1A26  
                                      __ptext21 24F2                                        __ptext13 2444  
                                      __ptext30 24B8                                        __ptext22 245A  
                                      __ptext14 21D4                                        __ptext31 22D0  
                                      __ptext23 134C                                        __ptext15 2536  
                                      __ptext40 1CDC                                        __ptext32 2376  
                                      __ptext24 20C2                                        __ptext16 254C  
                                      __ptext41 2108                                        __ptext33 1DC2  
                                      __ptext25 17AC                                        __ptext17 1D50  
                                      __ptext50 251C                                        __ptext42 214E  
                                      __ptext34 242C                                        __ptext26 2500  
                                      __ptext18 24C8                                        __ptext51 2340  
                                      __ptext43 1884                                        __ptext35 2216  
                                      __ptext27 2470                                        __ptext19 24D6  
                                      __ptext60 0000                                        __ptext52 23A8  
                                      __ptext44 23D8                                        __ptext28 1F3E  
                                      __ptext53 1E2E                                        __ptext45 2256  
                                      __ptext37 1006                                        __ptext29 2482  
                                      __ptext54 1AEC                                        __ptext46 250E  
                                      __ptext38 16B6                                        __ptext55 2540  
                                      __ptext47 2494                                        __ptext39 230A  
                                      __ptext56 2552                                        __ptext48 202C  
                                      __ptext57 2546                                        __ptext49 24A6  
                                      __ptext58 2402                                        __ptext59 1F8E  
                            i2LCD_8bitCode@code 0006                      __end_of_LCD_4bitCodeNoWait 1E2E  
                     __end_of_ADC_GetConversion 2256  EUSART1_SetOverrunErrorHandler@interruptHandler 0060  
                                      isa$xinst 0000                                        int$flags 0056  
                                      _vfprintf 1E98              __end_of_INTERRUPT_InterruptManager 0082  
                    _INTERRUPT_InterruptManager 0008                     _EUSART1_FramingErrorHandler 00ED  
                           _EUSART1_Receive_ISR 1AEC                                      _INTCONbits 0FF2  
                        ??_INTERRUPT_Initialize 0060                                 ??_PrintOnScreen 001E  
                                      intlevel2 0000                                       sprintf@ap 00A6  
                          ?_EUSART1_Receive_ISR 0001                    __end_ofi2_LCD_8bitCodeNoWait 207A  
                                    i2_LCD_Code 250E                         ?_PIN_MANAGER_Initialize 0001  
                           __end_ofi2__delay_ms 2296                                      i2_LCD_Wait 251C  
                           __end_ofi2__delay_us 2376          __end_of_EUSART1_SetOverrunErrorHandler 24E4  
                _EUSART1_SetOverrunErrorHandler 24D6                                      _RCSTA1bits 0FAB  
                              ??_ADC_Initialize 0060  EUSART1_SetFramingErrorHandler@interruptHandler 0060  
                                   ??_vfpfcnvrt 008E                              _eusart1RxLastError 0043  
                                      sprintf@f 00A8                                        sprintf@s 009E  
                        LCD_4bitCodeNoWait@code 0060                                   ?_LCD_4bitCode 0065  
                                  ___delay@time 0060                                   ?_LCD_8bitCode 0065  
                         ??_EUSART1_Receive_ISR 0001                  __end_of_PIN_MANAGER_Initialize 2216  
                       ??_EUSART1_RxDataHandler 0001  
