

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Sep 12 15:51:40 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F97J60
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    78                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    79                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    80   000000                     
    81                           ; Generated 23/03/2023 GMT
    82                           ; 
    83                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution. Publication is not required when
    97                           ;        this file is used in an embedded application.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F97J60 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115   000000                     
   116                           	psect	idataCOMRAM
   117   00249A                     __pidataCOMRAM:
   118                           	callstack 0
   119                           
   120                           ;initializer for _LCD_isCursorMoving
   121   00249A  0001               	dw	1
   122                           
   123                           ;initializer for _LCD_isCursorOn
   124   00249C  0001               	dw	1
   125                           
   126                           ;initializer for _LCD_isDisplayOn
   127   00249E  0001               	dw	1
   128                           
   129                           ;initializer for _LCD_isIncrement
   130   0024A0  0001               	dw	1
   131                           
   132                           ;initializer for _LCD_posY
   133   0024A2  0001               	dw	1
   134                           
   135                           ;initializer for _LCD_posX
   136   0024A4  0001               	dw	1
   137   000000                     _ADCON0	set	4034
   138   000000                     _ADRESL	set	4035
   139   000000                     _RCONbits	set	4048
   140   000000                     _RCREG1	set	4014
   141   000000                     _TXREG1	set	4013
   142   000000                     _SPBRG1	set	4015
   143   000000                     _TXSTA1	set	4012
   144   000000                     _PORTJbits	set	3976
   145   000000                     _TRISJ	set	3994
   146   000000                     _TRISD	set	3989
   147   000000                     _TRISC	set	3988
   148   000000                     _TRISB	set	3987
   149   000000                     _TRISA	set	3986
   150   000000                     _TRISF	set	3991
   151   000000                     _LATH	set	3984
   152   000000                     _LATC	set	3979
   153   000000                     _LATG	set	3983
   154   000000                     _LATB	set	3978
   155   000000                     _LATF	set	3982
   156   000000                     _LATA	set	3977
   157   000000                     _LATD	set	3980
   158   000000                     _LATJ	set	3985
   159   000000                     _LATE	set	3981
   160   000000                     _OSCTUNE	set	3995
   161   000000                     _OSCCON	set	4051
   162   000000                     _TRISHbits	set	3993
   163   000000                     _TRISGbits	set	3992
   164                           
   165                           	psect	nvCOMRAM
   166   000053                     __pnvCOMRAM:
   167                           	callstack 0
   168   000053                     _EUSART1_RxDefaultInterruptHandler:
   169                           	callstack 0
   170   000053                     	ds	3
   171                           
   172                           	psect	nvBANK0
   173   0000E3                     __pnvBANK0:
   174                           	callstack 0
   175   0000E3                     _EUSART1_ErrorHandler:
   176                           	callstack 0
   177   0000E3                     	ds	3
   178   0000E6                     _EUSART1_OverrunErrorHandler:
   179                           	callstack 0
   180   0000E6                     	ds	3
   181   0000E9                     _EUSART1_FramingErrorHandler:
   182                           	callstack 0
   183   0000E9                     	ds	3
   184   000000                     _ADCON0bits	set	4034
   185   000000                     _ADCON1	set	4033
   186   000000                     _RCSTA1bits	set	4011
   187   000000                     _TXSTA1bits	set	4012
   188   000000                     _TRISH	set	3993
   189   000000                     _TRISG	set	3992
   190   000000                     _PORTE	set	3972
   191   000000                     _BAUDCON1	set	3966
   192   000000                     _PORTEbits	set	3972
   193   000000                     _PORTHbits	set	3975
   194   000000                     _TRISE	set	3990
   195   000000                     _PORTGbits	set	3974
   196   000000                     _INTCONbits	set	4082
   197   000000                     _PIE1bits	set	3997
   198   000000                     _ADCON1bits	set	4033
   199   000000                     _PIR1bits	set	3998
   200   000000                     _RCSTA1	set	4011
   201   000000                     _PORTBbits	set	3969
   202   000000                     _SPBRGH1	set	3967
   203   000000                     _ADCON2	set	4032
   204   000000                     _ADRESH	set	4036
   205                           
   206                           	psect	smallconst
   207   001000                     __psmallconst:
   208                           	callstack 0
   209   001000  00                 	db	0
   210   001001                     STR_1:
   211   001001  25                 	db	37
   212   001002  64                 	db	100	;'d'
   213   001003  00                 	db	0
   214   001004  00                 	db	0	; dummy byte at the end
   215   000000                     
   216                           ; #config settings
   217                           
   218                           	psect	cinit
   219   001F88                     __pcinit:
   220                           	callstack 0
   221   001F88                     start_initialization:
   222                           	callstack 0
   223   001F88                     __initialization:
   224                           	callstack 0
   225                           
   226                           ; Initialize objects allocated to COMRAM (12 bytes)
   227                           ; load TBLPTR registers with __pidataCOMRAM
   228   001F88  0E9A               	movlw	low __pidataCOMRAM
   229   001F8A  6EF6               	movwf	tblptrl,c
   230   001F8C  0E24               	movlw	high __pidataCOMRAM
   231   001F8E  6EF7               	movwf	tblptrh,c
   232   001F90  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   233   001F92  6EF8               	movwf	tblptru,c
   234   001F94  EE00  F047         	lfsr	0,__pdataCOMRAM
   235   001F98  EE10 F00C          	lfsr	1,12
   236   001F9C                     copy_data0:
   237   001F9C  0009               	tblrd		*+
   238   001F9E  CFF5 FFEE          	movff	tablat,postinc0
   239   001FA2  50E5               	movf	postdec1,w,c
   240   001FA4  50E1               	movf	fsr1l,w,c
   241   001FA6  E1FA               	bnz	copy_data0
   242                           
   243                           ; Clear objects allocated to BANK1 (32 bytes)
   244   001FA8  EE01  F000         	lfsr	0,__pbssBANK1
   245   001FAC  0E20               	movlw	32
   246   001FAE                     clear_0:
   247   001FAE  6AEE               	clrf	postinc0,c
   248   001FB0  06E8               	decf	wreg,f,c
   249   001FB2  E1FD               	bnz	clear_0
   250                           
   251                           ; Clear objects allocated to BANK0 (40 bytes)
   252   001FB4  EE00  F0BB         	lfsr	0,__pbssBANK0
   253   001FB8  0E28               	movlw	40
   254   001FBA                     clear_1:
   255   001FBA  6AEE               	clrf	postinc0,c
   256   001FBC  06E8               	decf	wreg,f,c
   257   001FBE  E1FD               	bnz	clear_1
   258                           
   259                           ; Clear objects allocated to COMRAM (27 bytes)
   260   001FC0  EE00  F02C         	lfsr	0,__pbssCOMRAM
   261   001FC4  0E1B               	movlw	27
   262   001FC6                     clear_2:
   263   001FC6  6AEE               	clrf	postinc0,c
   264   001FC8  06E8               	decf	wreg,f,c
   265   001FCA  E1FD               	bnz	clear_2
   266   001FCC                     end_of_initialization:
   267                           	callstack 0
   268   001FCC                     __end_of__initialization:
   269                           	callstack 0
   270   001FCC  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   271   001FCE  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   272   001FD0  0100               	movlb	0
   273   001FD2  EFB3  F00D         	goto	_main	;jump to C main() function
   274                           
   275                           	psect	bssCOMRAM
   276   00002C                     __pbssCOMRAM:
   277                           	callstack 0
   278   00002C                     _eusart1RxStatusBuffer:
   279                           	callstack 0
   280   00002C                     	ds	8
   281   000034                     _eusart1RxBuffer:
   282                           	callstack 0
   283   000034                     	ds	8
   284   00003C                     _ADC_InterruptHandler:
   285                           	callstack 0
   286   00003C                     	ds	3
   287   00003F                     _LCD_isCursorBlinking:
   288                           	callstack 0
   289   00003F                     	ds	2
   290   000041                     _LCD_isShift:
   291                           	callstack 0
   292   000041                     	ds	2
   293   000043                     _eusart1RxLastError:
   294                           	callstack 0
   295   000043                     	ds	1
   296   000044                     _eusart1RxCount:
   297                           	callstack 0
   298   000044                     	ds	1
   299   000045                     _eusart1RxTail:
   300                           	callstack 0
   301   000045                     	ds	1
   302   000046                     _eusart1RxHead:
   303                           	callstack 0
   304   000046                     	ds	1
   305                           
   306                           	psect	dataCOMRAM
   307   000047                     __pdataCOMRAM:
   308                           	callstack 0
   309   000047                     _LCD_isCursorMoving:
   310                           	callstack 0
   311   000047                     	ds	2
   312   000049                     _LCD_isCursorOn:
   313                           	callstack 0
   314   000049                     	ds	2
   315   00004B                     _LCD_isDisplayOn:
   316                           	callstack 0
   317   00004B                     	ds	2
   318   00004D                     _LCD_isIncrement:
   319                           	callstack 0
   320   00004D                     	ds	2
   321   00004F                     _LCD_posY:
   322                           	callstack 0
   323   00004F                     	ds	2
   324   000051                     _LCD_posX:
   325                           	callstack 0
   326   000051                     	ds	2
   327                           
   328                           	psect	bssBANK0
   329   0000BB                     __pbssBANK0:
   330                           	callstack 0
   331   0000BB                     _width:
   332                           	callstack 0
   333   0000BB                     	ds	2
   334   0000BD                     _prec:
   335                           	callstack 0
   336   0000BD                     	ds	2
   337   0000BF                     _flags:
   338                           	callstack 0
   339   0000BF                     	ds	1
   340   0000C0                     _command:
   341                           	callstack 0
   342   0000C0                     	ds	35
   343                           
   344                           	psect	bssBANK1
   345   000100                     __pbssBANK1:
   346                           	callstack 0
   347   000100                     _dbuf:
   348                           	callstack 0
   349   000100                     	ds	32
   350                           
   351                           	psect	cstackBANK0
   352   000060                     __pcstackBANK0:
   353                           	callstack 0
   354   000060                     ?_ADC_GetConversion:
   355                           	callstack 0
   356   000060                     ?___awdiv:
   357                           	callstack 0
   358   000060                     ?___awmod:
   359                           	callstack 0
   360   000060                     EUSART1_Write@txData:
   361                           	callstack 0
   362   000060                     ___delay@time:
   363                           	callstack 0
   364   000060                     __delay_us@us:
   365                           	callstack 0
   366   000060                     __delay_ms@ms:
   367                           	callstack 0
   368   000060                     LCD_8bitCodeNoWait@code:
   369                           	callstack 0
   370   000060                     LCD_4bitCodeNoWait@code:
   371                           	callstack 0
   372   000060                     ___awdiv@dividend:
   373                           	callstack 0
   374   000060                     ___awmod@dividend:
   375                           	callstack 0
   376   000060                     fputc@c:
   377                           	callstack 0
   378   000060                     EUSART1_SetFramingErrorHandler@interruptHandler:
   379                           	callstack 0
   380   000060                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   381                           	callstack 0
   382   000060                     EUSART1_SetErrorHandler@interruptHandler:
   383                           	callstack 0
   384   000060                     EUSART1_SetRxInterruptHandler@interruptHandler:
   385                           	callstack 0
   386                           
   387                           ; 3 bytes @ 0x0
   388   000060                     	ds	2
   389   000062                     ??_ADC_GetConversion:
   390   000062                     ??___delay:
   391   000062                     ??__delay_us:
   392   000062                     ??__delay_ms:
   393   000062                     ??_LCD_8bitCodeNoWait:
   394   000062                     ??_LCD_4bitCodeNoWait:
   395   000062                     ___awdiv@divisor:
   396                           	callstack 0
   397   000062                     ___awmod@divisor:
   398                           	callstack 0
   399   000062                     fputc@fp:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x2
   403   000062                     	ds	1
   404   000063                     ___delay@i:
   405                           	callstack 0
   406   000063                     __delay_us@i:
   407                           	callstack 0
   408   000063                     __delay_ms@i:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0x3
   412   000063                     	ds	1
   413   000064                     ??_fputc:
   414   000064                     ADC_GetConversion@channel:
   415                           	callstack 0
   416   000064                     ___awdiv@counter:
   417                           	callstack 0
   418   000064                     ___awmod@counter:
   419                           	callstack 0
   420                           
   421                           ; 1 bytes @ 0x4
   422   000064                     	ds	1
   423   000065                     ___awdiv@sign:
   424                           	callstack 0
   425   000065                     ___awmod@sign:
   426                           	callstack 0
   427   000065                     LCD_8bitCode@code:
   428                           	callstack 0
   429   000065                     LCD_4bitCode@code:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x5
   433   000065                     	ds	1
   434   000066                     ?_abs:
   435                           	callstack 0
   436   000066                     ___awdiv@quotient:
   437                           	callstack 0
   438   000066                     abs@a:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x6
   442   000066                     	ds	1
   443   000067                     LCD_Code@code:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x7
   447   000067                     	ds	1
   448   000068                     ??_abs:
   449                           
   450                           ; 1 bytes @ 0x8
   451   000068                     	ds	1
   452   000069                     LCD_SetCursorAt@pos:
   453                           	callstack 0
   454   000069                     fputs@s:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x9
   458   000069                     	ds	2
   459   00006B                     LCD_SetCursorAt@row:
   460                           	callstack 0
   461   00006B                     fputs@fp:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0xB
   465   00006B                     	ds	2
   466   00006D                     ??_LCD_SetCursorAt:
   467   00006D                     fputs@c:
   468                           	callstack 0
   469                           
   470                           ; 1 bytes @ 0xD
   471   00006D                     	ds	1
   472   00006E                     fputs@i:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0xE
   476   00006E                     	ds	1
   477   00006F                     ??_LCD_Init:
   478                           
   479                           ; 1 bytes @ 0xF
   480   00006F                     	ds	1
   481   000070                     pad@fp:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0x10
   485   000070                     	ds	2
   486   000072                     pad@buf:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x12
   490   000072                     	ds	2
   491   000074                     pad@p:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x14
   495   000074                     	ds	2
   496   000076                     ??_pad:
   497                           
   498                           ; 1 bytes @ 0x16
   499   000076                     	ds	1
   500   000077                     pad@i:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x17
   504   000077                     	ds	2
   505   000079                     pad@w:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x19
   509   000079                     	ds	2
   510   00007B                     dtoa@fp:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x1B
   514   00007B                     	ds	2
   515   00007D                     dtoa@d:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x1D
   519   00007D                     	ds	2
   520   00007F                     _dtoa$2023:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x1F
   524   00007F                     	ds	2
   525   000081                     dtoa@p:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x21
   529   000081                     	ds	2
   530   000083                     dtoa@w:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x23
   534   000083                     	ds	2
   535   000085                     dtoa@s:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0x25
   539   000085                     	ds	1
   540   000086                     dtoa@i:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x26
   544   000086                     	ds	2
   545   000088                     vfpfcnvrt@fp:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x28
   549   000088                     	ds	2
   550   00008A                     vfpfcnvrt@fmt:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x2A
   554   00008A                     	ds	2
   555   00008C                     vfpfcnvrt@ap:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x2C
   559   00008C                     	ds	2
   560   00008E                     ??_vfpfcnvrt:
   561                           
   562                           ; 1 bytes @ 0x2E
   563   00008E                     	ds	2
   564   000090                     vfpfcnvrt@convarg:
   565                           	callstack 0
   566                           
   567                           ; 4 bytes @ 0x30
   568   000090                     	ds	4
   569   000094                     vfpfcnvrt@cp:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x34
   573   000094                     	ds	2
   574   000096                     ?_vfprintf:
   575                           	callstack 0
   576   000096                     vfprintf@fp:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x36
   580   000096                     	ds	2
   581   000098                     vfprintf@fmt:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x38
   585   000098                     	ds	2
   586   00009A                     vfprintf@ap:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x3A
   590   00009A                     	ds	2
   591   00009C                     vfprintf@cfmt:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x3C
   595   00009C                     	ds	2
   596   00009E                     ?_sprintf:
   597                           	callstack 0
   598   00009E                     sprintf@s:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x3E
   602   00009E                     	ds	2
   603   0000A0                     sprintf@fmt:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x40
   607   0000A0                     	ds	6
   608   0000A6                     sprintf@ap:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x46
   612   0000A6                     	ds	2
   613   0000A8                     sprintf@f:
   614                           	callstack 0
   615                           
   616                           ; 12 bytes @ 0x48
   617   0000A8                     	ds	12
   618   0000B4                     ??_main:
   619                           
   620                           ; 1 bytes @ 0x54
   621   0000B4                     	ds	2
   622   0000B6                     main@PotValue:
   623                           	callstack 0
   624                           
   625                           ; 5 bytes @ 0x56
   626   0000B6                     	ds	5
   627                           
   628                           	psect	cstackCOMRAM
   629   000001                     __pcstackCOMRAM:
   630                           	callstack 0
   631   000001                     ?_strlen:
   632                           	callstack 0
   633   000001                     EUSART1_Read@readValue:
   634                           	callstack 0
   635   000001                     strlen@s:
   636                           	callstack 0
   637   000001                     i2___delay@time:
   638                           	callstack 0
   639   000001                     i2__delay_us@us:
   640                           	callstack 0
   641   000001                     i2__delay_ms@ms:
   642                           	callstack 0
   643   000001                     i2LCD_8bitCodeNoWait@code:
   644                           	callstack 0
   645   000001                     i2LCD_4bitCodeNoWait@code:
   646                           	callstack 0
   647                           
   648                           ; 2 bytes @ 0x0
   649   000001                     	ds	2
   650   000003                     ??i2___delay:
   651   000003                     ??i2__delay_us:
   652   000003                     ??i2__delay_ms:
   653   000003                     ??i2_LCD_8bitCodeNoWait:
   654   000003                     ??i2_LCD_4bitCodeNoWait:
   655   000003                     strlen@a:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x2
   659   000003                     	ds	1
   660   000004                     i2___delay@i:
   661                           	callstack 0
   662   000004                     i2__delay_us@i:
   663                           	callstack 0
   664   000004                     i2__delay_ms@i:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x3
   668   000004                     	ds	2
   669   000006                     i2LCD_8bitCode@code:
   670                           	callstack 0
   671   000006                     i2LCD_4bitCode@code:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x5
   675   000006                     	ds	2
   676   000008                     i2LCD_Code@code:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x7
   680   000008                     	ds	2
   681   00000A                     i2LCD_SetCursorAt@pos:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0x9
   685   00000A                     	ds	2
   686   00000C                     i2LCD_SetCursorAt@row:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0xB
   690   00000C                     	ds	2
   691   00000E                     ??i2_LCD_SetCursorAt:
   692                           
   693                           ; 1 bytes @ 0xD
   694   00000E                     	ds	2
   695   000010                     LCD_MoveCursorLeft@howMuch:
   696                           	callstack 0
   697   000010                     LCD_MoveCursorRight@howMuch:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0xF
   701   000010                     	ds	2
   702   000012                     ??_LCD_MoveCursorLeft:
   703   000012                     ??_LCD_MoveCursorRight:
   704                           
   705                           ; 1 bytes @ 0x11
   706   000012                     	ds	2
   707   000014                     LCD_PrintChar@inputChar:
   708                           	callstack 0
   709                           
   710                           ; 1 bytes @ 0x13
   711   000014                     	ds	1
   712   000015                     LCD_PrintStr@str:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x14
   716   000015                     	ds	2
   717   000017                     
   718                           ; 1 bytes @ 0x16
   719   000017                     	ds	1
   720   000018                     LCD_PrintStr@initialX:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x17
   724   000018                     	ds	2
   725   00001A                     LCD_PrintStr@initialY:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x19
   729   00001A                     	ds	2
   730   00001C                     LCD_PrintStr@i:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x1B
   734   00001C                     	ds	2
   735   00001E                     ??_PrintOnScreen:
   736                           
   737                           ; 1 bytes @ 0x1D
   738   00001E                     	ds	2
   739   000020                     PrintOnScreen@len:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x1F
   743   000020                     	ds	2
   744   000022                     PrintOnScreen@received:
   745                           	callstack 0
   746                           
   747                           ; 1 bytes @ 0x21
   748   000022                     	ds	1
   749   000023                     PrintOnScreen@length:
   750                           	callstack 0
   751                           
   752                           ; 1 bytes @ 0x22
   753   000023                     	ds	1
   754   000024                     PrintOnScreen@i:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x23
   758   000024                     	ds	2
   759   000026                     ??_INTERRUPT_InterruptManager:
   760                           
   761                           ; 1 bytes @ 0x25
   762   000026                     	ds	6
   763                           
   764 ;;
   765 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   766 ;;
   767 ;; *************** function _main *****************
   768 ;; Defined at:
   769 ;;		line 51 in file "main.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;		None
   772 ;; Auto vars:     Size  Location     Type
   773 ;;  PotValue        5   86[BANK0 ] unsigned char [5]
   774 ;; Return value:  Size  Location     Type
   775 ;;                  1    wreg      void 
   776 ;; Registers used:
   777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   784 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   785 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   786 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   787 ;;Total ram usage:        7 bytes
   788 ;; Hardware stack levels required when called: 18
   789 ;; This function calls:
   790 ;;		_ADC_GetConversion
   791 ;;		_EUSART1_Write
   792 ;;		_LCD_Init
   793 ;;		_SYSTEM_Initialize
   794 ;;		_sprintf
   795 ;; This function is called by:
   796 ;;		Startup code after reset
   797 ;; This function uses a non-reentrant model
   798 ;;
   799                           
   800                           	psect	text0
   801   001B66                     __ptext0:
   802                           	callstack 0
   803   001B66                     _main:
   804                           	callstack 13
   805   001B66                     
   806                           ;main.c: 54:     SYSTEM_Initialize();
   807   001B66  ECDA  F011         	call	_SYSTEM_Initialize	;wreg free
   808                           
   809                           ;main.c: 55:     LCD_Init();
   810   001B6A  ECA6  F009         	call	_LCD_Init	;wreg free
   811   001B6E                     
   812                           ;main.c: 62:     (INTCONbits.GIE = 1);
   813   001B6E  8EF2               	bsf	242,7,c	;volatile
   814   001B70                     
   815                           ;main.c: 68:     (INTCONbits.PEIE = 1);
   816   001B70  8CF2               	bsf	242,6,c	;volatile
   817   001B72                     
   818                           ;main.c: 72:     PORTGbits.RG5 = 1;
   819   001B72  8A86               	bsf	134,5,c	;volatile
   820   001B74                     l3793:
   821                           
   822                           ;main.c: 76:         EUSART1_Write(PORTBbits.RB3 + '0');
   823   001B74  B681               	btfsc	129,3,c	;volatile
   824   001B76  EFBF  F00D         	goto	u2871
   825   001B7A  EFC2  F00D         	goto	u2870
   826   001B7E                     u2871:
   827   001B7E  0E01               	movlw	1
   828   001B80  EFC3  F00D         	goto	u2876
   829   001B84                     u2870:
   830   001B84  0E00               	movlw	0
   831   001B86                     u2876:
   832   001B86  0F30               	addlw	48
   833   001B88  ECCE  F011         	call	_EUSART1_Write
   834   001B8C                     
   835                           ;main.c: 77:         EUSART1_Write(' ');
   836   001B8C  0E20               	movlw	32
   837   001B8E  ECCE  F011         	call	_EUSART1_Write
   838   001B92                     
   839                           ;main.c: 78:         EUSART1_Write(PORTBbits.RB1 + '0');
   840   001B92  B281               	btfsc	129,1,c	;volatile
   841   001B94  EFCE  F00D         	goto	u2881
   842   001B98  EFD1  F00D         	goto	u2880
   843   001B9C                     u2881:
   844   001B9C  0E01               	movlw	1
   845   001B9E  EFD2  F00D         	goto	u2886
   846   001BA2                     u2880:
   847   001BA2  0E00               	movlw	0
   848   001BA4                     u2886:
   849   001BA4  0F30               	addlw	48
   850   001BA6  ECCE  F011         	call	_EUSART1_Write
   851                           
   852                           ;main.c: 79:         EUSART1_Write(' ');
   853   001BAA  0E20               	movlw	32
   854   001BAC  ECCE  F011         	call	_EUSART1_Write
   855   001BB0                     
   856                           ;main.c: 80:         char PotValue[5];;main.c: 81:         sprintf(PotValue, "%d", ADC_G
      +                          etConversion(Potentiometer));
   857   001BB0  0EB6               	movlw	low main@PotValue
   858   001BB2  0100               	movlb	0	; () banked
   859   001BB4  6F9E               	movwf	sprintf@s& (0+255),b
   860   001BB6  0E00               	movlw	high main@PotValue
   861   001BB8  6F9F               	movwf	(sprintf@s+1)& (0+255),b
   862   001BBA  0E01               	movlw	low STR_1
   863   001BBC  6FA0               	movwf	sprintf@fmt& (0+255),b
   864   001BBE  0E10               	movlw	high STR_1
   865   001BC0  6FA1               	movwf	(sprintf@fmt+1)& (0+255),b
   866   001BC2  0E02               	movlw	2
   867   001BC4  ECE0  F010         	call	_ADC_GetConversion
   868   001BC8  C060  F0A2         	movff	?_ADC_GetConversion,?_sprintf+4
   869   001BCC  C061  F0A3         	movff	?_ADC_GetConversion+1,?_sprintf+5
   870   001BD0  EC4C  F00F         	call	_sprintf	;wreg free
   871   001BD4                     
   872                           ;main.c: 82:         EUSART1_Write(PotValue);
   873   001BD4  0EB6               	movlw	main@PotValue& (0+255)
   874   001BD6  ECCE  F011         	call	_EUSART1_Write
   875   001BDA                     
   876                           ;main.c: 83:         EUSART1_Write(' ');
   877   001BDA  0E20               	movlw	32
   878   001BDC  ECCE  F011         	call	_EUSART1_Write
   879   001BE0                     
   880                           ;main.c: 84:         EUSART1_Write(3);
   881   001BE0  0E03               	movlw	3
   882   001BE2  ECCE  F011         	call	_EUSART1_Write
   883   001BE6                     
   884                           ;main.c: 85:         _delay((unsigned long)((200)*(25000000/4000.0)));
   885   001BE6  0E07               	movlw	7
   886   001BE8  0100               	movlb	0	; () banked
   887   001BEA  6FB5               	movwf	(??_main+1)& (0+255),b
   888   001BEC  0E58               	movlw	88
   889   001BEE  6FB4               	movwf	??_main& (0+255),b
   890   001BF0  0E59               	movlw	89
   891   001BF2                     u2897:
   892   001BF2  2EE8               	decfsz	wreg,f,c
   893   001BF4  D7FE               	bra	u2897
   894   001BF6  2FB4               	decfsz	??_main& (0+255),f,b
   895   001BF8  D7FC               	bra	u2897
   896   001BFA  2FB5               	decfsz	(??_main+1)& (0+255),f,b
   897   001BFC  D7FA               	bra	u2897
   898   001BFE  D000               	nop2	
   899   001C00  EFBA  F00D         	goto	l3793
   900   001C04  EF41  F000         	goto	start
   901   001C08                     __end_of_main:
   902                           	callstack 0
   903                           
   904 ;; *************** function _sprintf *****************
   905 ;; Defined at:
   906 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;  s               2   62[BANK0 ] PTR unsigned char 
   909 ;;		 -> main@PotValue(5), LCD_PrintNum@strNumber(20), 
   910 ;;  fmt             2   64[BANK0 ] PTR const unsigned char 
   911 ;;		 -> STR_2(3), STR_1(3), 
   912 ;; Auto vars:     Size  Location     Type
   913 ;;  f              12   72[BANK0 ] struct _IO_FILE
   914 ;;  ap              2   70[BANK0 ] PTR void [1]
   915 ;;		 -> ?_sprintf(2), 
   916 ;;  ret             2    0        int 
   917 ;; Return value:  Size  Location     Type
   918 ;;                  2   62[BANK0 ] int 
   919 ;; Registers used:
   920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   926 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   927 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   929 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   930 ;;Total ram usage:       22 bytes
   931 ;; Hardware stack levels used: 1
   932 ;; Hardware stack levels required when called: 17
   933 ;; This function calls:
   934 ;;		_vfprintf
   935 ;; This function is called by:
   936 ;;		_main
   937 ;;		_LCD_PrintNum
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           	psect	text1
   942   001E98                     __ptext1:
   943                           	callstack 0
   944   001E98                     _sprintf:
   945                           	callstack 13
   946   001E98  0EA2               	movlw	low (?_sprintf+4)
   947   001E9A  0100               	movlb	0	; () banked
   948   001E9C  6FA6               	movwf	sprintf@ap& (0+255),b
   949   001E9E  0E00               	movlw	high (?_sprintf+4)
   950   001EA0  6FA7               	movwf	(sprintf@ap+1)& (0+255),b
   951   001EA2  C09E  F0A8         	movff	sprintf@s,sprintf@f
   952   001EA6  C09F  F0A9         	movff	sprintf@s+1,sprintf@f+1
   953   001EAA                     
   954                           ; BSR set to: 0
   955   001EAA  0E00               	movlw	0
   956   001EAC  6FAC               	movwf	(sprintf@f+4)& (0+255),b
   957   001EAE  0E00               	movlw	0
   958   001EB0  6FAB               	movwf	(sprintf@f+3)& (0+255),b
   959   001EB2                     
   960                           ; BSR set to: 0
   961   001EB2  0E00               	movlw	0
   962   001EB4  6FB3               	movwf	(sprintf@f+11)& (0+255),b
   963   001EB6  0E00               	movlw	0
   964   001EB8  6FB2               	movwf	(sprintf@f+10)& (0+255),b
   965   001EBA                     
   966                           ; BSR set to: 0
   967   001EBA  0EA8               	movlw	low sprintf@f
   968   001EBC  6F96               	movwf	vfprintf@fp& (0+255),b
   969   001EBE  0E00               	movlw	high sprintf@f
   970   001EC0  6F97               	movwf	(vfprintf@fp+1)& (0+255),b
   971   001EC2  C0A0  F098         	movff	sprintf@fmt,vfprintf@fmt
   972   001EC6  C0A1  F099         	movff	sprintf@fmt+1,vfprintf@fmt+1
   973   001ECA  0EA6               	movlw	low sprintf@ap
   974   001ECC  6F9A               	movwf	vfprintf@ap& (0+255),b
   975   001ECE  0E00               	movlw	high sprintf@ap
   976   001ED0  6F9B               	movwf	(vfprintf@ap+1)& (0+255),b
   977   001ED2  EC21  F00F         	call	_vfprintf	;wreg free
   978   001ED6  0100               	movlb	0	; () banked
   979   001ED8  51AB               	movf	(sprintf@f+3)& (0+255),w,b
   980   001EDA  259E               	addwf	sprintf@s& (0+255),w,b
   981   001EDC  6ED9               	movwf	fsr2l,c
   982   001EDE  51AC               	movf	(sprintf@f+4)& (0+255),w,b
   983   001EE0  219F               	addwfc	(sprintf@s+1)& (0+255),w,b
   984   001EE2  6EDA               	movwf	fsr2h,c
   985   001EE4  6ADF               	clrf	indf2,c
   986   001EE6                     
   987                           ; BSR set to: 0
   988   001EE6  0012               	return		;funcret
   989   001EE8                     __end_of_sprintf:
   990                           	callstack 0
   991                           
   992 ;; *************** function _vfprintf *****************
   993 ;; Defined at:
   994 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;  fp              2   54[BANK0 ] PTR struct _IO_FILE
   997 ;;		 -> sprintf@f(12), 
   998 ;;  fmt             2   56[BANK0 ] PTR const unsigned char 
   999 ;;		 -> STR_2(3), STR_1(3), 
  1000 ;;  ap              2   58[BANK0 ] PTR PTR void 
  1001 ;;		 -> sprintf@ap(2), 
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;  cfmt            2   60[BANK0 ] PTR unsigned char 
  1004 ;;		 -> STR_2(3), STR_1(3), 
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  2   54[BANK0 ] int 
  1007 ;; Registers used:
  1008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1014 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1015 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1017 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1018 ;;Total ram usage:        8 bytes
  1019 ;; Hardware stack levels used: 1
  1020 ;; Hardware stack levels required when called: 16
  1021 ;; This function calls:
  1022 ;;		_vfpfcnvrt
  1023 ;; This function is called by:
  1024 ;;		_sprintf
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           	psect	text2
  1029   001E42                     __ptext2:
  1030                           	callstack 0
  1031   001E42                     _vfprintf:
  1032                           	callstack 13
  1033   001E42                     
  1034                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  1035   001E42  C098  F09C         	movff	vfprintf@fmt,vfprintf@cfmt
  1036   001E46  C099  F09D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1037                           
  1038                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1039   001E4A  EF36  F00F         	goto	l3591
  1040   001E4E                     l3589:
  1041                           
  1042                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1043   001E4E  C096  F088         	movff	vfprintf@fp,vfpfcnvrt@fp
  1044   001E52  C097  F089         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1045   001E56  0E9C               	movlw	low vfprintf@cfmt
  1046   001E58  0100               	movlb	0	; () banked
  1047   001E5A  6F8A               	movwf	vfpfcnvrt@fmt& (0+255),b
  1048   001E5C  0E00               	movlw	high vfprintf@cfmt
  1049   001E5E  6F8B               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1050   001E60  C09A  F08C         	movff	vfprintf@ap,vfpfcnvrt@ap
  1051   001E64  C09B  F08D         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1052   001E68  EC44  F00A         	call	_vfpfcnvrt	;wreg free
  1053   001E6C                     l3591:
  1054                           
  1055                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  1056   001E6C  C09C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1057   001E70  C09D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1058   001E74                     	if	0	;tblptru may be non-zero
  1059   001E74                     	endif
  1060   001E74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1061   001E74  0E00               	movlw	low (__mediumconst shr (0+16))
  1062   001E76  6EF8               	movwf	tblptru,c
  1063   001E78                     	endif
  1064   001E78  0008               	tblrd		*
  1065   001E7A  50F5               	movf	tablat,w,c
  1066   001E7C  0900               	iorlw	0
  1067   001E7E  A4D8               	btfss	status,2,c
  1068   001E80  EF44  F00F         	goto	u2661
  1069   001E84  EF46  F00F         	goto	u2660
  1070   001E88                     u2661:
  1071   001E88  EF27  F00F         	goto	l3589
  1072   001E8C                     u2660:
  1073   001E8C                     
  1074                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  1075   001E8C  0E00               	movlw	0
  1076   001E8E  0100               	movlb	0	; () banked
  1077   001E90  6F97               	movwf	(?_vfprintf+1)& (0+255),b
  1078   001E92  0E00               	movlw	0
  1079   001E94  6F96               	movwf	?_vfprintf& (0+255),b
  1080   001E96                     
  1081                           ; BSR set to: 0
  1082   001E96  0012               	return		;funcret
  1083   001E98                     __end_of_vfprintf:
  1084                           	callstack 0
  1085                           
  1086 ;; *************** function _vfpfcnvrt *****************
  1087 ;; Defined at:
  1088 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;  fp              2   40[BANK0 ] PTR struct _IO_FILE
  1091 ;;		 -> sprintf@f(12), 
  1092 ;;  fmt             2   42[BANK0 ] PTR PTR unsigned char 
  1093 ;;		 -> vfprintf@cfmt(2), 
  1094 ;;  ap              2   44[BANK0 ] PTR PTR void 
  1095 ;;		 -> sprintf@ap(2), 
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;  convarg         4   48[BANK0 ] struct .
  1098 ;;  cp              2   52[BANK0 ] PTR unsigned char 
  1099 ;;		 -> STR_2(3), STR_1(3), 
  1100 ;;  i               2    0        int 
  1101 ;;  done            2    0        int 
  1102 ;;  c               1    0        unsigned char 
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      void 
  1105 ;; Registers used:
  1106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1112 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1113 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1114 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1115 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1116 ;;Total ram usage:       14 bytes
  1117 ;; Hardware stack levels used: 1
  1118 ;; Hardware stack levels required when called: 15
  1119 ;; This function calls:
  1120 ;;		_dtoa
  1121 ;;		_fputc
  1122 ;; This function is called by:
  1123 ;;		_vfprintf
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           	psect	text3
  1128   001488                     __ptext3:
  1129                           	callstack 0
  1130   001488                     _vfpfcnvrt:
  1131                           	callstack 13
  1132   001488                     
  1133                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  1134   001488  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1135   00148C  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1136   001490  CFDE FFF6          	movff	postinc2,tblptrl
  1137   001494  CFDD FFF7          	movff	postdec2,tblptrh
  1138   001498                     	if	0	;tblptru may be non-zero
  1139   001498                     	endif
  1140   001498                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1141   001498  0E00               	movlw	low (__mediumconst shr (0+16))
  1142   00149A  6EF8               	movwf	tblptru,c
  1143   00149C                     	endif
  1144   00149C  0008               	tblrd		*
  1145   00149E  50F5               	movf	tablat,w,c
  1146   0014A0  0A25               	xorlw	37
  1147   0014A2  A4D8               	btfss	status,2,c
  1148   0014A4  EF56  F00A         	goto	u2581
  1149   0014A8  EF58  F00A         	goto	u2580
  1150   0014AC                     u2581:
  1151   0014AC  EFC7  F00A         	goto	l3509
  1152   0014B0                     u2580:
  1153   0014B0                     
  1154                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  1155   0014B0  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1156   0014B4  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1157   0014B8  2ADE               	incf	postinc2,f,c
  1158   0014BA  0E00               	movlw	0
  1159   0014BC  22DD               	addwfc	postdec2,f,c
  1160   0014BE                     
  1161                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  1162   0014BE  0E00               	movlw	0
  1163   0014C0  0100               	movlb	0	; () banked
  1164   0014C2  6FBC               	movwf	(_width+1)& (0+255),b
  1165   0014C4  0E00               	movlw	0
  1166   0014C6  6FBB               	movwf	_width& (0+255),b
  1167   0014C8  C0BB  F0BF         	movff	_width,_flags
  1168   0014CC                     
  1169                           ; BSR set to: 0
  1170                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  1171   0014CC  69BD               	setf	_prec& (0+255),b
  1172   0014CE  69BE               	setf	(_prec+1)& (0+255),b
  1173   0014D0                     
  1174                           ; BSR set to: 0
  1175                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  1176   0014D0  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1177   0014D4  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1178   0014D8  CFDE F094          	movff	postinc2,vfpfcnvrt@cp
  1179   0014DC  CFDD F095          	movff	postdec2,vfpfcnvrt@cp+1
  1180   0014E0                     
  1181                           ; BSR set to: 0
  1182                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1183   0014E0  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1184   0014E4  C095  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1185   0014E8                     	if	0	;tblptru may be non-zero
  1186   0014E8                     	endif
  1187   0014E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1188   0014E8  0E00               	movlw	low (__mediumconst shr (0+16))
  1189   0014EA  6EF8               	movwf	tblptru,c
  1190   0014EC                     	endif
  1191   0014EC  0008               	tblrd		*
  1192   0014EE  50F5               	movf	tablat,w,c
  1193   0014F0  0A64               	xorlw	100
  1194   0014F2  B4D8               	btfsc	status,2,c
  1195   0014F4  EF7E  F00A         	goto	u2591
  1196   0014F8  EF80  F00A         	goto	u2590
  1197   0014FC                     u2591:
  1198   0014FC  EF90  F00A         	goto	l3499
  1199   001500                     u2590:
  1200   001500                     
  1201                           ; BSR set to: 0
  1202   001500  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1203   001504  C095  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1204   001508                     	if	0	;tblptru may be non-zero
  1205   001508                     	endif
  1206   001508                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1207   001508  0E00               	movlw	low (__mediumconst shr (0+16))
  1208   00150A  6EF8               	movwf	tblptru,c
  1209   00150C                     	endif
  1210   00150C  0008               	tblrd		*
  1211   00150E  50F5               	movf	tablat,w,c
  1212   001510  0A69               	xorlw	105
  1213   001512  A4D8               	btfss	status,2,c
  1214   001514  EF8E  F00A         	goto	u2601
  1215   001518  EF90  F00A         	goto	u2600
  1216   00151C                     u2601:
  1217   00151C  EFBE  F00A         	goto	l3505
  1218   001520                     u2600:
  1219   001520                     l3499:
  1220                           
  1221                           ; BSR set to: 0
  1222                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1223   001520  C08C  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1224   001524  C08D  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1225   001528  CFDF F08E          	movff	indf2,??_vfpfcnvrt
  1226   00152C  0E02               	movlw	2
  1227   00152E  26DE               	addwf	postinc2,f,c
  1228   001530  CFDF F08F          	movff	indf2,??_vfpfcnvrt+1
  1229   001534  0E00               	movlw	0
  1230   001536  22DD               	addwfc	postdec2,f,c
  1231   001538  C08E  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1232   00153C  C08F  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1233   001540  CFDE F090          	movff	postinc2,vfpfcnvrt@convarg
  1234   001544  CFDD F091          	movff	postdec2,vfpfcnvrt@convarg+1
  1235                           
  1236                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  1237   001548  0E01               	movlw	1
  1238   00154A  2594               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1239   00154C  6F8E               	movwf	??_vfpfcnvrt& (0+255),b
  1240   00154E  0E00               	movlw	0
  1241   001550  2195               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1242   001552  6F8F               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1243   001554  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1244   001558  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1245   00155C  C08E  FFDE         	movff	??_vfpfcnvrt,postinc2
  1246   001560  C08F  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1247   001564                     
  1248                           ; BSR set to: 0
  1249                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1250   001564  C088  F07B         	movff	vfpfcnvrt@fp,dtoa@fp
  1251   001568  C089  F07C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1252   00156C  C090  F07D         	movff	vfpfcnvrt@convarg,dtoa@d
  1253   001570  C091  F07E         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1254   001574  ECD9  F008         	call	_dtoa	;wreg free
  1255   001578  EFDE  F00A         	goto	l1277
  1256   00157C                     l3505:
  1257                           
  1258                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  1259   00157C  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1260   001580  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1261   001584  2ADE               	incf	postinc2,f,c
  1262   001586  0E00               	movlw	0
  1263   001588  22DD               	addwfc	postdec2,f,c
  1264   00158A  EFDE  F00A         	goto	l1277
  1265   00158E                     l3509:
  1266                           
  1267                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  1268   00158E  C08A  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1269   001592  C08B  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1270   001596  CFDE FFF6          	movff	postinc2,tblptrl
  1271   00159A  CFDD FFF7          	movff	postdec2,tblptrh
  1272   00159E                     	if	0	;tblptru may be non-zero
  1273   00159E                     	endif
  1274   00159E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1275   00159E  0E00               	movlw	low (__mediumconst shr (0+16))
  1276   0015A0  6EF8               	movwf	tblptru,c
  1277   0015A2                     	endif
  1278   0015A2  0008               	tblrd		*
  1279   0015A4  50F5               	movf	tablat,w,c
  1280   0015A6  0100               	movlb	0	; () banked
  1281   0015A8  6F60               	movwf	fputc@c& (0+255),b
  1282   0015AA  6B61               	clrf	(fputc@c+1)& (0+255),b
  1283   0015AC  C088  F062         	movff	vfpfcnvrt@fp,fputc@fp
  1284   0015B0  C089  F063         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1285   0015B4  EC31  F00C         	call	_fputc	;wreg free
  1286   0015B8  EFBE  F00A         	goto	l3505
  1287   0015BC                     l1277:
  1288   0015BC  0012               	return		;funcret
  1289   0015BE                     __end_of_vfpfcnvrt:
  1290                           	callstack 0
  1291                           
  1292 ;; *************** function _dtoa *****************
  1293 ;; Defined at:
  1294 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;  fp              2   27[BANK0 ] PTR struct _IO_FILE
  1297 ;;		 -> sprintf@f(12), 
  1298 ;;  d               2   29[BANK0 ] int 
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;  i               2   38[BANK0 ] int 
  1301 ;;  w               2   35[BANK0 ] int 
  1302 ;;  p               2   33[BANK0 ] int 
  1303 ;;  s               1   37[BANK0 ] unsigned char 
  1304 ;; Return value:  Size  Location     Type
  1305 ;;                  1    wreg      void 
  1306 ;; Registers used:
  1307 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1308 ;; Tracked objects:
  1309 ;;		On entry : 0/0
  1310 ;;		On exit  : 0/0
  1311 ;;		Unchanged: 0/0
  1312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1313 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1314 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1316 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1317 ;;Total ram usage:       13 bytes
  1318 ;; Hardware stack levels used: 1
  1319 ;; Hardware stack levels required when called: 14
  1320 ;; This function calls:
  1321 ;;		___awdiv
  1322 ;;		___awmod
  1323 ;;		_abs
  1324 ;;		_pad
  1325 ;; This function is called by:
  1326 ;;		_vfpfcnvrt
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text4
  1331   0011B2                     __ptext4:
  1332                           	callstack 0
  1333   0011B2                     _dtoa:
  1334                           	callstack 13
  1335   0011B2                     
  1336                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  1337   0011B2  0100               	movlb	0	; () banked
  1338   0011B4  BF7E               	btfsc	(dtoa@d+1)& (0+255),7,b
  1339   0011B6  EFDF  F008         	goto	u2481
  1340   0011BA  EFE2  F008         	goto	u2480
  1341   0011BE                     u2481:
  1342   0011BE  0E01               	movlw	1
  1343   0011C0  EFE3  F008         	goto	u2490
  1344   0011C4                     u2480:
  1345   0011C4  0E00               	movlw	0
  1346   0011C6                     u2490:
  1347   0011C6  6F85               	movwf	dtoa@s& (0+255),b
  1348   0011C8                     
  1349                           ; BSR set to: 0
  1350                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  1351   0011C8  5185               	movf	dtoa@s& (0+255),w,b
  1352   0011CA  B4D8               	btfsc	status,2,c
  1353   0011CC  EFEA  F008         	goto	u2501
  1354   0011D0  EFEC  F008         	goto	u2500
  1355   0011D4                     u2501:
  1356   0011D4  EFF0  F008         	goto	l3429
  1357   0011D8                     u2500:
  1358   0011D8                     
  1359                           ; BSR set to: 0
  1360                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  1361   0011D8  6D7D               	negf	dtoa@d& (0+255),b
  1362   0011DA  1F7E               	comf	(dtoa@d+1)& (0+255),f,b
  1363   0011DC  B0D8               	btfsc	status,0,c
  1364   0011DE  2B7E               	incf	(dtoa@d+1)& (0+255),f,b
  1365   0011E0                     l3429:
  1366                           
  1367                           ; BSR set to: 0
  1368                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  1369   0011E0  BFBE               	btfsc	(_prec+1)& (0+255),7,b
  1370   0011E2  EFF7  F008         	goto	u2510
  1371   0011E6  EFF5  F008         	goto	u2511
  1372   0011EA                     u2511:
  1373   0011EA  EFFD  F008         	goto	l1256
  1374   0011EE                     u2510:
  1375   0011EE                     
  1376                           ; BSR set to: 0
  1377   0011EE  0E00               	movlw	0
  1378   0011F0  6F82               	movwf	(dtoa@p+1)& (0+255),b
  1379   0011F2  0E01               	movlw	1
  1380   0011F4  6F81               	movwf	dtoa@p& (0+255),b
  1381   0011F6  EF01  F009         	goto	l1258
  1382   0011FA                     l1256:
  1383                           
  1384                           ; BSR set to: 0
  1385   0011FA  C0BD  F081         	movff	_prec,dtoa@p
  1386   0011FE  C0BE  F082         	movff	_prec+1,dtoa@p+1
  1387   001202                     l1258:
  1388                           
  1389                           ; BSR set to: 0
  1390                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  1391   001202  C0BB  F083         	movff	_width,dtoa@w
  1392   001206  C0BC  F084         	movff	_width+1,dtoa@w+1
  1393   00120A                     
  1394                           ; BSR set to: 0
  1395                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  1396   00120A  5185               	movf	dtoa@s& (0+255),w,b
  1397   00120C  B4D8               	btfsc	status,2,c
  1398   00120E  EF0B  F009         	goto	u2521
  1399   001212  EF0D  F009         	goto	u2520
  1400   001216                     u2521:
  1401   001216  EF24  F009         	goto	l1259
  1402   00121A                     u2520:
  1403   00121A                     
  1404                           ; BSR set to: 0
  1405                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  1406   00121A  0783               	decf	dtoa@w& (0+255),f,b
  1407   00121C  A0D8               	btfss	status,0,c
  1408   00121E  0784               	decf	(dtoa@w+1)& (0+255),f,b
  1409   001220                     
  1410                           ; BSR set to: 0
  1411                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  1412   001220  5185               	movf	dtoa@s& (0+255),w,b
  1413   001222  A4D8               	btfss	status,2,c
  1414   001224  EF16  F009         	goto	u2531
  1415   001228  EF18  F009         	goto	u2530
  1416   00122C                     u2531:
  1417   00122C  EF1E  F009         	goto	l3441
  1418   001230                     u2530:
  1419   001230                     
  1420                           ; BSR set to: 0
  1421   001230  0E00               	movlw	0
  1422   001232  6F80               	movwf	(_dtoa$2023+1)& (0+255),b
  1423   001234  0E2B               	movlw	43
  1424   001236  6F7F               	movwf	_dtoa$2023& (0+255),b
  1425   001238  EF22  F009         	goto	l3443
  1426   00123C                     l3441:
  1427                           
  1428                           ; BSR set to: 0
  1429   00123C  0E00               	movlw	0
  1430   00123E  6F80               	movwf	(_dtoa$2023+1)& (0+255),b
  1431   001240  0E2D               	movlw	45
  1432   001242  6F7F               	movwf	_dtoa$2023& (0+255),b
  1433   001244                     l3443:
  1434                           
  1435                           ; BSR set to: 0
  1436   001244  C07F  F085         	movff	_dtoa$2023,dtoa@s
  1437   001248                     l1259:
  1438                           
  1439                           ; BSR set to: 0
  1440                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  1441   001248  0E00               	movlw	0
  1442   00124A  6F87               	movwf	(dtoa@i+1)& (0+255),b
  1443   00124C  0E1F               	movlw	31
  1444   00124E  6F86               	movwf	dtoa@i& (0+255),b
  1445   001250                     
  1446                           ; BSR set to: 0
  1447                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  1448   001250  0E00               	movlw	0
  1449   001252  0101               	movlb	1	; () banked
  1450   001254  6F1F               	movwf	(_dbuf+31)& (0+255),b
  1451                           
  1452                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  1453   001256  EF5E  F009         	goto	l3457
  1454   00125A                     l3447:
  1455                           
  1456                           ; BSR set to: 0
  1457                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  1458   00125A  0786               	decf	dtoa@i& (0+255),f,b
  1459   00125C  A0D8               	btfss	status,0,c
  1460   00125E  0787               	decf	(dtoa@i+1)& (0+255),f,b
  1461   001260                     
  1462                           ; BSR set to: 0
  1463                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  1464   001260  0E00               	movlw	low _dbuf
  1465   001262  2586               	addwf	dtoa@i& (0+255),w,b
  1466   001264  6ED9               	movwf	fsr2l,c
  1467   001266  0E01               	movlw	high _dbuf
  1468   001268  2187               	addwfc	(dtoa@i+1)& (0+255),w,b
  1469   00126A  6EDA               	movwf	fsr2h,c
  1470   00126C  C07D  F060         	movff	dtoa@d,___awmod@dividend
  1471   001270  C07E  F061         	movff	dtoa@d+1,___awmod@dividend+1
  1472   001274  0E00               	movlw	0
  1473   001276  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  1474   001278  0E0A               	movlw	10
  1475   00127A  6F62               	movwf	___awmod@divisor& (0+255),b
  1476   00127C  EC5A  F00D         	call	___awmod	;wreg free
  1477   001280  C060  F066         	movff	?___awmod,abs@a
  1478   001284  C061  F067         	movff	?___awmod+1,abs@a+1
  1479   001288  EC9E  F010         	call	_abs	;wreg free
  1480   00128C  0100               	movlb	0	; () banked
  1481   00128E  5166               	movf	?_abs& (0+255),w,b
  1482   001290  0F30               	addlw	48
  1483   001292  6EDF               	movwf	indf2,c
  1484   001294                     
  1485                           ; BSR set to: 0
  1486                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  1487   001294  0781               	decf	dtoa@p& (0+255),f,b
  1488   001296  A0D8               	btfss	status,0,c
  1489   001298  0782               	decf	(dtoa@p+1)& (0+255),f,b
  1490   00129A                     
  1491                           ; BSR set to: 0
  1492                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  1493   00129A  0783               	decf	dtoa@w& (0+255),f,b
  1494   00129C  A0D8               	btfss	status,0,c
  1495   00129E  0784               	decf	(dtoa@w+1)& (0+255),f,b
  1496   0012A0                     
  1497                           ; BSR set to: 0
  1498                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  1499   0012A0  C07D  F060         	movff	dtoa@d,___awdiv@dividend
  1500   0012A4  C07E  F061         	movff	dtoa@d+1,___awdiv@dividend+1
  1501   0012A8  0E00               	movlw	0
  1502   0012AA  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  1503   0012AC  0E0A               	movlw	10
  1504   0012AE  6F62               	movwf	___awdiv@divisor& (0+255),b
  1505   0012B0  EC97  F00C         	call	___awdiv	;wreg free
  1506   0012B4  C060  F07D         	movff	?___awdiv,dtoa@d
  1507   0012B8  C061  F07E         	movff	?___awdiv+1,dtoa@d+1
  1508   0012BC                     l3457:
  1509                           
  1510                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  1511   0012BC  0100               	movlb	0	; () banked
  1512   0012BE  BF87               	btfsc	(dtoa@i+1)& (0+255),7,b
  1513   0012C0  EF6A  F009         	goto	u2541
  1514   0012C4  5187               	movf	(dtoa@i+1)& (0+255),w,b
  1515   0012C6  E108               	bnz	u2540
  1516   0012C8  0586               	decf	dtoa@i& (0+255),w,b
  1517   0012CA  A0D8               	btfss	status,0,c
  1518   0012CC  EF6A  F009         	goto	u2541
  1519   0012D0  EF6C  F009         	goto	u2540
  1520   0012D4                     u2541:
  1521   0012D4  EF82  F009         	goto	l3463
  1522   0012D8                     u2540:
  1523   0012D8                     
  1524                           ; BSR set to: 0
  1525   0012D8  517D               	movf	dtoa@d& (0+255),w,b
  1526   0012DA  117E               	iorwf	(dtoa@d+1)& (0+255),w,b
  1527   0012DC  A4D8               	btfss	status,2,c
  1528   0012DE  EF73  F009         	goto	u2551
  1529   0012E2  EF75  F009         	goto	u2550
  1530   0012E6                     u2551:
  1531   0012E6  EF2D  F009         	goto	l3447
  1532   0012EA                     u2550:
  1533   0012EA                     
  1534                           ; BSR set to: 0
  1535   0012EA  BF82               	btfsc	(dtoa@p+1)& (0+255),7,b
  1536   0012EC  EF82  F009         	goto	u2560
  1537   0012F0  5182               	movf	(dtoa@p+1)& (0+255),w,b
  1538   0012F2  E106               	bnz	u2561
  1539   0012F4  0581               	decf	dtoa@p& (0+255),w,b
  1540   0012F6  B0D8               	btfsc	status,0,c
  1541   0012F8  EF80  F009         	goto	u2561
  1542   0012FC  EF82  F009         	goto	u2560
  1543   001300                     u2561:
  1544   001300  EF2D  F009         	goto	l3447
  1545   001304                     u2560:
  1546   001304                     l3463:
  1547                           
  1548                           ; BSR set to: 0
  1549                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  1550   001304  5185               	movf	dtoa@s& (0+255),w,b
  1551   001306  B4D8               	btfsc	status,2,c
  1552   001308  EF88  F009         	goto	u2571
  1553   00130C  EF8A  F009         	goto	u2570
  1554   001310                     u2571:
  1555   001310  EF95  F009         	goto	l3469
  1556   001314                     u2570:
  1557   001314                     
  1558                           ; BSR set to: 0
  1559                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  1560   001314  0786               	decf	dtoa@i& (0+255),f,b
  1561   001316  A0D8               	btfss	status,0,c
  1562   001318  0787               	decf	(dtoa@i+1)& (0+255),f,b
  1563   00131A                     
  1564                           ; BSR set to: 0
  1565                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  1566   00131A  0E00               	movlw	low _dbuf
  1567   00131C  2586               	addwf	dtoa@i& (0+255),w,b
  1568   00131E  6ED9               	movwf	fsr2l,c
  1569   001320  0E01               	movlw	high _dbuf
  1570   001322  2187               	addwfc	(dtoa@i+1)& (0+255),w,b
  1571   001324  6EDA               	movwf	fsr2h,c
  1572   001326  C085  FFDF         	movff	dtoa@s,indf2
  1573   00132A                     l3469:
  1574                           
  1575                           ; BSR set to: 0
  1576                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1577   00132A  C07B  F070         	movff	dtoa@fp,pad@fp
  1578   00132E  C07C  F071         	movff	dtoa@fp+1,pad@fp+1
  1579   001332  0E00               	movlw	low _dbuf
  1580   001334  2586               	addwf	dtoa@i& (0+255),w,b
  1581   001336  6F72               	movwf	pad@buf& (0+255),b
  1582   001338  0E01               	movlw	high _dbuf
  1583   00133A  2187               	addwfc	(dtoa@i+1)& (0+255),w,b
  1584   00133C  6F73               	movwf	(pad@buf+1)& (0+255),b
  1585   00133E  C083  F074         	movff	dtoa@w,pad@p
  1586   001342  C084  F075         	movff	dtoa@w+1,pad@p+1
  1587   001346  EC04  F00E         	call	_pad	;wreg free
  1588   00134A  0012               	return		;funcret
  1589   00134C                     __end_of_dtoa:
  1590                           	callstack 0
  1591                           
  1592 ;; *************** function _pad *****************
  1593 ;; Defined at:
  1594 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  1597 ;;		 -> sprintf@f(12), 
  1598 ;;  buf             2   18[BANK0 ] PTR unsigned char 
  1599 ;;		 -> dbuf(32), 
  1600 ;;  p               2   20[BANK0 ] int 
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;  w               2   25[BANK0 ] int 
  1603 ;;  i               2   23[BANK0 ] int 
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  1    wreg      void 
  1606 ;; Registers used:
  1607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1613 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1614 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1615 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1616 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1617 ;;Total ram usage:       11 bytes
  1618 ;; Hardware stack levels used: 1
  1619 ;; Hardware stack levels required when called: 13
  1620 ;; This function calls:
  1621 ;;		_fputc
  1622 ;;		_fputs
  1623 ;; This function is called by:
  1624 ;;		_dtoa
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           	psect	text5
  1629   001C08                     __ptext5:
  1630                           	callstack 0
  1631   001C08                     _pad:
  1632                           	callstack 13
  1633   001C08                     
  1634                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  1635   001C08  0100               	movlb	0	; () banked
  1636   001C0A  BF75               	btfsc	(pad@p+1)& (0+255),7,b
  1637   001C0C  EF0A  F00E         	goto	u2451
  1638   001C10  EF0C  F00E         	goto	u2450
  1639   001C14                     u2451:
  1640   001C14  EF12  F00E         	goto	l3405
  1641   001C18                     u2450:
  1642   001C18                     
  1643                           ; BSR set to: 0
  1644   001C18  C074  F079         	movff	pad@p,pad@w
  1645   001C1C  C075  F07A         	movff	pad@p+1,pad@w+1
  1646   001C20  EF16  F00E         	goto	l1247
  1647   001C24                     l3405:
  1648                           
  1649                           ; BSR set to: 0
  1650   001C24  0E00               	movlw	0
  1651   001C26  6F7A               	movwf	(pad@w+1)& (0+255),b
  1652   001C28  0E00               	movlw	0
  1653   001C2A  6F79               	movwf	pad@w& (0+255),b
  1654   001C2C                     l1247:
  1655                           
  1656                           ; BSR set to: 0
  1657                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  1658   001C2C  0E00               	movlw	0
  1659   001C2E  6F78               	movwf	(pad@i+1)& (0+255),b
  1660   001C30  0E00               	movlw	0
  1661   001C32  6F77               	movwf	pad@i& (0+255),b
  1662                           
  1663                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  1664   001C34  EF29  F00E         	goto	l3411
  1665   001C38                     l3407:
  1666                           
  1667                           ; BSR set to: 0
  1668                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  1669   001C38  0E00               	movlw	0
  1670   001C3A  6F61               	movwf	(fputc@c+1)& (0+255),b
  1671   001C3C  0E20               	movlw	32
  1672   001C3E  6F60               	movwf	fputc@c& (0+255),b
  1673   001C40  C070  F062         	movff	pad@fp,fputc@fp
  1674   001C44  C071  F063         	movff	pad@fp+1,fputc@fp+1
  1675   001C48  EC31  F00C         	call	_fputc	;wreg free
  1676   001C4C                     
  1677                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  1678   001C4C  0100               	movlb	0	; () banked
  1679   001C4E  4B77               	infsnz	pad@i& (0+255),f,b
  1680   001C50  2B78               	incf	(pad@i+1)& (0+255),f,b
  1681   001C52                     l3411:
  1682                           
  1683                           ; BSR set to: 0
  1684                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  1685   001C52  5179               	movf	pad@w& (0+255),w,b
  1686   001C54  5D77               	subwf	pad@i& (0+255),w,b
  1687   001C56  5178               	movf	(pad@i+1)& (0+255),w,b
  1688   001C58  0A80               	xorlw	128
  1689   001C5A  6F76               	movwf	??_pad& (0+255),b
  1690   001C5C  517A               	movf	(pad@w+1)& (0+255),w,b
  1691   001C5E  0A80               	xorlw	128
  1692   001C60  5976               	subwfb	??_pad& (0+255),w,b
  1693   001C62  A0D8               	btfss	status,0,c
  1694   001C64  EF36  F00E         	goto	u2461
  1695   001C68  EF38  F00E         	goto	u2460
  1696   001C6C                     u2461:
  1697   001C6C  EF1C  F00E         	goto	l3407
  1698   001C70                     u2460:
  1699   001C70                     
  1700                           ; BSR set to: 0
  1701                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  1702   001C70  C072  F069         	movff	pad@buf,fputs@s
  1703   001C74  C073  F06A         	movff	pad@buf+1,fputs@s+1
  1704   001C78  C070  F06B         	movff	pad@fp,fputs@fp
  1705   001C7C  C071  F06C         	movff	pad@fp+1,fputs@fp+1
  1706   001C80  EC12  F010         	call	_fputs	;wreg free
  1707   001C84  0012               	return		;funcret
  1708   001C86                     __end_of_pad:
  1709                           	callstack 0
  1710                           
  1711 ;; *************** function _fputs *****************
  1712 ;; Defined at:
  1713 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  1716 ;;		 -> dbuf(32), 
  1717 ;;  fp              2   11[BANK0 ] PTR struct _IO_FILE
  1718 ;;		 -> sprintf@f(12), 
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;  i               2   14[BANK0 ] int 
  1721 ;;  c               1   13[BANK0 ] unsigned char 
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  2    9[BANK0 ] int 
  1724 ;; Registers used:
  1725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1731 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1732 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1734 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1735 ;;Total ram usage:        7 bytes
  1736 ;; Hardware stack levels used: 1
  1737 ;; Hardware stack levels required when called: 12
  1738 ;; This function calls:
  1739 ;;		_fputc
  1740 ;; This function is called by:
  1741 ;;		_pad
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           	psect	text6
  1746   002024                     __ptext6:
  1747                           	callstack 0
  1748   002024                     _fputs:
  1749                           	callstack 13
  1750   002024  0E00               	movlw	0
  1751   002026  0100               	movlb	0	; () banked
  1752   002028  6F6F               	movwf	(fputs@i+1)& (0+255),b
  1753   00202A  0E00               	movlw	0
  1754   00202C  6F6E               	movwf	fputs@i& (0+255),b
  1755   00202E  EF25  F010         	goto	l3259
  1756   002032                     l3255:
  1757                           
  1758                           ; BSR set to: 0
  1759   002032  C06D  F060         	movff	fputs@c,fputc@c
  1760   002036  6B61               	clrf	(fputc@c+1)& (0+255),b
  1761   002038  C06B  F062         	movff	fputs@fp,fputc@fp
  1762   00203C  C06C  F063         	movff	fputs@fp+1,fputc@fp+1
  1763   002040  EC31  F00C         	call	_fputc	;wreg free
  1764   002044  0100               	movlb	0	; () banked
  1765   002046  4B6E               	infsnz	fputs@i& (0+255),f,b
  1766   002048  2B6F               	incf	(fputs@i+1)& (0+255),f,b
  1767   00204A                     l3259:
  1768                           
  1769                           ; BSR set to: 0
  1770   00204A  516E               	movf	fputs@i& (0+255),w,b
  1771   00204C  2569               	addwf	fputs@s& (0+255),w,b
  1772   00204E  6ED9               	movwf	fsr2l,c
  1773   002050  516F               	movf	(fputs@i+1)& (0+255),w,b
  1774   002052  216A               	addwfc	(fputs@s+1)& (0+255),w,b
  1775   002054  6EDA               	movwf	fsr2h,c
  1776   002056  50DF               	movf	indf2,w,c
  1777   002058  6F6D               	movwf	fputs@c& (0+255),b
  1778   00205A  516D               	movf	fputs@c& (0+255),w,b
  1779   00205C  A4D8               	btfss	status,2,c
  1780   00205E  EF33  F010         	goto	u2291
  1781   002062  EF35  F010         	goto	u2290
  1782   002066                     u2291:
  1783   002066  EF19  F010         	goto	l3255
  1784   00206A                     u2290:
  1785   00206A                     
  1786                           ; BSR set to: 0
  1787   00206A  0012               	return		;funcret
  1788   00206C                     __end_of_fputs:
  1789                           	callstack 0
  1790                           
  1791 ;; *************** function _fputc *****************
  1792 ;; Defined at:
  1793 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;  c               2    0[BANK0 ] int 
  1796 ;;  fp              2    2[BANK0 ] PTR struct _IO_FILE
  1797 ;;		 -> sprintf@f(12), 
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;		None
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  2    0[BANK0 ] int 
  1802 ;; Registers used:
  1803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1809 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1811 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1812 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1813 ;;Total ram usage:        9 bytes
  1814 ;; Hardware stack levels used: 1
  1815 ;; Hardware stack levels required when called: 11
  1816 ;; This function calls:
  1817 ;;		_putch
  1818 ;; This function is called by:
  1819 ;;		_pad
  1820 ;;		_vfpfcnvrt
  1821 ;;		_fputs
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           	psect	text7
  1826   001862                     __ptext7:
  1827                           	callstack 0
  1828   001862                     _fputc:
  1829                           	callstack 16
  1830   001862  0100               	movlb	0	; () banked
  1831   001864  5162               	movf	fputc@fp& (0+255),w,b
  1832   001866  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  1833   001868  B4D8               	btfsc	status,2,c
  1834   00186A  EF39  F00C         	goto	u2231
  1835   00186E  EF3B  F00C         	goto	u2230
  1836   001872                     u2231:
  1837   001872  EF44  F00C         	goto	l3231
  1838   001876                     u2230:
  1839   001876                     
  1840                           ; BSR set to: 0
  1841   001876  5162               	movf	fputc@fp& (0+255),w,b
  1842   001878  1163               	iorwf	(fputc@fp+1)& (0+255),w,b
  1843   00187A  A4D8               	btfss	status,2,c
  1844   00187C  EF42  F00C         	goto	u2241
  1845   001880  EF44  F00C         	goto	u2240
  1846   001884                     u2241:
  1847   001884  EF49  F00C         	goto	l3233
  1848   001888                     u2240:
  1849   001888                     l3231:
  1850                           
  1851                           ; BSR set to: 0
  1852   001888  5160               	movf	fputc@c& (0+255),w,b
  1853   00188A  EC60  F012         	call	_putch
  1854   00188E  EF96  F00C         	goto	l1302
  1855   001892                     l3233:
  1856                           
  1857                           ; BSR set to: 0
  1858   001892  EE20 F00A          	lfsr	2,10
  1859   001896  5162               	movf	fputc@fp& (0+255),w,b
  1860   001898  26D9               	addwf	fsr2l,f,c
  1861   00189A  5163               	movf	(fputc@fp+1)& (0+255),w,b
  1862   00189C  22DA               	addwfc	fsr2h,f,c
  1863   00189E  50DE               	movf	postinc2,w,c
  1864   0018A0  10DE               	iorwf	postinc2,w,c
  1865   0018A2  B4D8               	btfsc	status,2,c
  1866   0018A4  EF56  F00C         	goto	u2251
  1867   0018A8  EF58  F00C         	goto	u2250
  1868   0018AC                     u2251:
  1869   0018AC  EF73  F00C         	goto	l3237
  1870   0018B0                     u2250:
  1871   0018B0                     
  1872                           ; BSR set to: 0
  1873   0018B0  EE20 F00A          	lfsr	2,10
  1874   0018B4  5162               	movf	fputc@fp& (0+255),w,b
  1875   0018B6  26D9               	addwf	fsr2l,f,c
  1876   0018B8  5163               	movf	(fputc@fp+1)& (0+255),w,b
  1877   0018BA  22DA               	addwfc	fsr2h,f,c
  1878   0018BC  EE10 F003          	lfsr	1,3
  1879   0018C0  5162               	movf	fputc@fp& (0+255),w,b
  1880   0018C2  26E1               	addwf	fsr1l,f,c
  1881   0018C4  5163               	movf	(fputc@fp+1)& (0+255),w,b
  1882   0018C6  22E2               	addwfc	fsr1h,f,c
  1883   0018C8  50DE               	movf	postinc2,w,c
  1884   0018CA  5CE6               	subwf	postinc1,w,c
  1885   0018CC  50E6               	movf	postinc1,w,c
  1886   0018CE  0A80               	xorlw	128
  1887   0018D0  6F68               	movwf	(??_fputc+4)& (0+255),b
  1888   0018D2  50DE               	movf	postinc2,w,c
  1889   0018D4  0A80               	xorlw	128
  1890   0018D6  5968               	subwfb	(??_fputc+4)& (0+255),w,b
  1891   0018D8  B0D8               	btfsc	status,0,c
  1892   0018DA  EF71  F00C         	goto	u2261
  1893   0018DE  EF73  F00C         	goto	u2260
  1894   0018E2                     u2261:
  1895   0018E2  EF96  F00C         	goto	l1302
  1896   0018E6                     u2260:
  1897   0018E6                     l3237:
  1898                           
  1899                           ; BSR set to: 0
  1900   0018E6  EE20 F003          	lfsr	2,3
  1901   0018EA  5162               	movf	fputc@fp& (0+255),w,b
  1902   0018EC  26D9               	addwf	fsr2l,f,c
  1903   0018EE  5163               	movf	(fputc@fp+1)& (0+255),w,b
  1904   0018F0  22DA               	addwfc	fsr2h,f,c
  1905   0018F2  CFDE F064          	movff	postinc2,??_fputc
  1906   0018F6  CFDD F065          	movff	postdec2,??_fputc+1
  1907   0018FA  C062  FFD9         	movff	fputc@fp,fsr2l
  1908   0018FE  C063  FFDA         	movff	fputc@fp+1,fsr2h
  1909   001902  CFDE F066          	movff	postinc2,??_fputc+2
  1910   001906  CFDD F067          	movff	postdec2,??_fputc+3
  1911   00190A  5164               	movf	??_fputc& (0+255),w,b
  1912   00190C  2566               	addwf	(??_fputc+2)& (0+255),w,b
  1913   00190E  6ED9               	movwf	fsr2l,c
  1914   001910  5165               	movf	(??_fputc+1)& (0+255),w,b
  1915   001912  2167               	addwfc	(??_fputc+3)& (0+255),w,b
  1916   001914  6EDA               	movwf	fsr2h,c
  1917   001916  C060  FFDF         	movff	fputc@c,indf2
  1918   00191A  EE20 F003          	lfsr	2,3
  1919   00191E  5162               	movf	fputc@fp& (0+255),w,b
  1920   001920  26D9               	addwf	fsr2l,f,c
  1921   001922  5163               	movf	(fputc@fp+1)& (0+255),w,b
  1922   001924  22DA               	addwfc	fsr2h,f,c
  1923   001926  2ADE               	incf	postinc2,f,c
  1924   001928  0E00               	movlw	0
  1925   00192A  22DD               	addwfc	postdec2,f,c
  1926   00192C                     l1302:
  1927   00192C  0012               	return		;funcret
  1928   00192E                     __end_of_fputc:
  1929                           	callstack 0
  1930                           
  1931 ;; *************** function _putch *****************
  1932 ;; Defined at:
  1933 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;  c               1    wreg     unsigned char 
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;  c               1    0[COMRAM] unsigned char 
  1938 ;; Return value:  Size  Location     Type
  1939 ;;                  1    wreg      void 
  1940 ;; Registers used:
  1941 ;;		wreg
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1951 ;;Total ram usage:        0 bytes
  1952 ;; Hardware stack levels used: 1
  1953 ;; Hardware stack levels required when called: 10
  1954 ;; This function calls:
  1955 ;;		Nothing
  1956 ;; This function is called by:
  1957 ;;		_fputc
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           	psect	text8
  1962   0024C0                     __ptext8:
  1963                           	callstack 0
  1964   0024C0                     _putch:
  1965                           	callstack 16
  1966   0024C0  0012               	return		;funcret
  1967   0024C2                     __end_of_putch:
  1968                           	callstack 0
  1969                           
  1970 ;; *************** function _abs *****************
  1971 ;; Defined at:
  1972 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;  a               2    6[BANK0 ] int 
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;		None
  1977 ;; Return value:  Size  Location     Type
  1978 ;;                  2    6[BANK0 ] int 
  1979 ;; Registers used:
  1980 ;;		wreg, status,2, status,0
  1981 ;; Tracked objects:
  1982 ;;		On entry : 0/0
  1983 ;;		On exit  : 0/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1986 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1988 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1989 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1990 ;;Total ram usage:        4 bytes
  1991 ;; Hardware stack levels used: 1
  1992 ;; Hardware stack levels required when called: 10
  1993 ;; This function calls:
  1994 ;;		Nothing
  1995 ;; This function is called by:
  1996 ;;		_dtoa
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           	psect	text9
  2001   00213C                     __ptext9:
  2002                           	callstack 0
  2003   00213C                     _abs:
  2004                           	callstack 16
  2005   00213C  0100               	movlb	0	; () banked
  2006   00213E  BF67               	btfsc	(abs@a+1)& (0+255),7,b
  2007   002140  EFAC  F010         	goto	u2470
  2008   002144  5167               	movf	(abs@a+1)& (0+255),w,b
  2009   002146  E106               	bnz	u2471
  2010   002148  0566               	decf	abs@a& (0+255),w,b
  2011   00214A  B0D8               	btfsc	status,0,c
  2012   00214C  EFAA  F010         	goto	u2471
  2013   002150  EFAC  F010         	goto	u2470
  2014   002154                     u2471:
  2015   002154  EFBA  F010         	goto	l1287
  2016   002158                     u2470:
  2017   002158                     
  2018                           ; BSR set to: 0
  2019   002158  C066  F068         	movff	abs@a,??_abs
  2020   00215C  C067  F069         	movff	abs@a+1,??_abs+1
  2021   002160  1F68               	comf	??_abs& (0+255),f,b
  2022   002162  1F69               	comf	(??_abs+1)& (0+255),f,b
  2023   002164  4B68               	infsnz	??_abs& (0+255),f,b
  2024   002166  2B69               	incf	(??_abs+1)& (0+255),f,b
  2025   002168  C068  F066         	movff	??_abs,?_abs
  2026   00216C  C069  F067         	movff	??_abs+1,?_abs+1
  2027   002170  EFBE  F010         	goto	l1290
  2028   002174                     l1287:
  2029                           
  2030                           ; BSR set to: 0
  2031   002174  C066  F066         	movff	abs@a,?_abs
  2032   002178  C067  F067         	movff	abs@a+1,?_abs+1
  2033   00217C                     l1290:
  2034                           
  2035                           ; BSR set to: 0
  2036   00217C  0012               	return		;funcret
  2037   00217E                     __end_of_abs:
  2038                           	callstack 0
  2039                           
  2040 ;; *************** function ___awmod *****************
  2041 ;; Defined at:
  2042 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;  dividend        2    0[BANK0 ] int 
  2045 ;;  divisor         2    2[BANK0 ] int 
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;  sign            1    5[BANK0 ] unsigned char 
  2048 ;;  counter         1    4[BANK0 ] unsigned char 
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  2    0[BANK0 ] int 
  2051 ;; Registers used:
  2052 ;;		wreg, status,2, status,0
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2058 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2059 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2061 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2062 ;;Total ram usage:        6 bytes
  2063 ;; Hardware stack levels used: 1
  2064 ;; Hardware stack levels required when called: 10
  2065 ;; This function calls:
  2066 ;;		Nothing
  2067 ;; This function is called by:
  2068 ;;		_dtoa
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           	psect	text10
  2073   001AB4                     __ptext10:
  2074                           	callstack 0
  2075   001AB4                     ___awmod:
  2076                           	callstack 16
  2077   001AB4  0E00               	movlw	0
  2078   001AB6  0100               	movlb	0	; () banked
  2079   001AB8  6F65               	movwf	___awmod@sign& (0+255),b
  2080   001ABA                     
  2081                           ; BSR set to: 0
  2082   001ABA  BF61               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  2083   001ABC  EF64  F00D         	goto	u2390
  2084   001AC0  EF62  F00D         	goto	u2391
  2085   001AC4                     u2391:
  2086   001AC4  EF6A  F00D         	goto	l3373
  2087   001AC8                     u2390:
  2088   001AC8                     
  2089                           ; BSR set to: 0
  2090   001AC8  6D60               	negf	___awmod@dividend& (0+255),b
  2091   001ACA  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  2092   001ACC  B0D8               	btfsc	status,0,c
  2093   001ACE  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  2094   001AD0                     
  2095                           ; BSR set to: 0
  2096   001AD0  0E01               	movlw	1
  2097   001AD2  6F65               	movwf	___awmod@sign& (0+255),b
  2098   001AD4                     l3373:
  2099                           
  2100                           ; BSR set to: 0
  2101   001AD4  BF63               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  2102   001AD6  EF71  F00D         	goto	u2400
  2103   001ADA  EF6F  F00D         	goto	u2401
  2104   001ADE                     u2401:
  2105   001ADE  EF75  F00D         	goto	l3377
  2106   001AE2                     u2400:
  2107   001AE2                     
  2108                           ; BSR set to: 0
  2109   001AE2  6D62               	negf	___awmod@divisor& (0+255),b
  2110   001AE4  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  2111   001AE6  B0D8               	btfsc	status,0,c
  2112   001AE8  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  2113   001AEA                     l3377:
  2114                           
  2115                           ; BSR set to: 0
  2116   001AEA  5162               	movf	___awmod@divisor& (0+255),w,b
  2117   001AEC  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  2118   001AEE  B4D8               	btfsc	status,2,c
  2119   001AF0  EF7C  F00D         	goto	u2411
  2120   001AF4  EF7E  F00D         	goto	u2410
  2121   001AF8                     u2411:
  2122   001AF8  EFA2  F00D         	goto	l3393
  2123   001AFC                     u2410:
  2124   001AFC                     
  2125                           ; BSR set to: 0
  2126   001AFC  0E01               	movlw	1
  2127   001AFE  6F64               	movwf	___awmod@counter& (0+255),b
  2128   001B00  EF86  F00D         	goto	l3383
  2129   001B04                     l3381:
  2130                           
  2131                           ; BSR set to: 0
  2132   001B04  90D8               	bcf	status,0,c
  2133   001B06  3762               	rlcf	___awmod@divisor& (0+255),f,b
  2134   001B08  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  2135   001B0A  2B64               	incf	___awmod@counter& (0+255),f,b
  2136   001B0C                     l3383:
  2137                           
  2138                           ; BSR set to: 0
  2139   001B0C  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  2140   001B0E  EF8B  F00D         	goto	u2421
  2141   001B12  EF8D  F00D         	goto	u2420
  2142   001B16                     u2421:
  2143   001B16  EF82  F00D         	goto	l3381
  2144   001B1A                     u2420:
  2145   001B1A                     l3385:
  2146                           
  2147                           ; BSR set to: 0
  2148   001B1A  5162               	movf	___awmod@divisor& (0+255),w,b
  2149   001B1C  5D60               	subwf	___awmod@dividend& (0+255),w,b
  2150   001B1E  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  2151   001B20  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  2152   001B22  A0D8               	btfss	status,0,c
  2153   001B24  EF96  F00D         	goto	u2431
  2154   001B28  EF98  F00D         	goto	u2430
  2155   001B2C                     u2431:
  2156   001B2C  EF9C  F00D         	goto	l3389
  2157   001B30                     u2430:
  2158   001B30                     
  2159                           ; BSR set to: 0
  2160   001B30  5162               	movf	___awmod@divisor& (0+255),w,b
  2161   001B32  5F60               	subwf	___awmod@dividend& (0+255),f,b
  2162   001B34  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  2163   001B36  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  2164   001B38                     l3389:
  2165                           
  2166                           ; BSR set to: 0
  2167   001B38  90D8               	bcf	status,0,c
  2168   001B3A  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  2169   001B3C  3362               	rrcf	___awmod@divisor& (0+255),f,b
  2170   001B3E                     
  2171                           ; BSR set to: 0
  2172   001B3E  2F64               	decfsz	___awmod@counter& (0+255),f,b
  2173   001B40  EF8D  F00D         	goto	l3385
  2174   001B44                     l3393:
  2175                           
  2176                           ; BSR set to: 0
  2177   001B44  5165               	movf	___awmod@sign& (0+255),w,b
  2178   001B46  B4D8               	btfsc	status,2,c
  2179   001B48  EFA8  F00D         	goto	u2441
  2180   001B4C  EFAA  F00D         	goto	u2440
  2181   001B50                     u2441:
  2182   001B50  EFAE  F00D         	goto	l3397
  2183   001B54                     u2440:
  2184   001B54                     
  2185                           ; BSR set to: 0
  2186   001B54  6D60               	negf	___awmod@dividend& (0+255),b
  2187   001B56  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  2188   001B58  B0D8               	btfsc	status,0,c
  2189   001B5A  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  2190   001B5C                     l3397:
  2191                           
  2192                           ; BSR set to: 0
  2193   001B5C  C060  F060         	movff	___awmod@dividend,?___awmod
  2194   001B60  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  2195   001B64                     
  2196                           ; BSR set to: 0
  2197   001B64  0012               	return		;funcret
  2198   001B66                     __end_of___awmod:
  2199                           	callstack 0
  2200                           
  2201 ;; *************** function ___awdiv *****************
  2202 ;; Defined at:
  2203 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;  dividend        2    0[BANK0 ] int 
  2206 ;;  divisor         2    2[BANK0 ] int 
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;  quotient        2    6[BANK0 ] int 
  2209 ;;  sign            1    5[BANK0 ] unsigned char 
  2210 ;;  counter         1    4[BANK0 ] unsigned char 
  2211 ;; Return value:  Size  Location     Type
  2212 ;;                  2    0[BANK0 ] int 
  2213 ;; Registers used:
  2214 ;;		wreg, status,2, status,0
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2220 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2221 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2223 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2224 ;;Total ram usage:        8 bytes
  2225 ;; Hardware stack levels used: 1
  2226 ;; Hardware stack levels required when called: 10
  2227 ;; This function calls:
  2228 ;;		Nothing
  2229 ;; This function is called by:
  2230 ;;		_dtoa
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           	psect	text11
  2235   00192E                     __ptext11:
  2236                           	callstack 0
  2237   00192E                     ___awdiv:
  2238                           	callstack 16
  2239   00192E  0E00               	movlw	0
  2240   001930  0100               	movlb	0	; () banked
  2241   001932  6F65               	movwf	___awdiv@sign& (0+255),b
  2242   001934                     
  2243                           ; BSR set to: 0
  2244   001934  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  2245   001936  EFA1  F00C         	goto	u2330
  2246   00193A  EF9F  F00C         	goto	u2331
  2247   00193E                     u2331:
  2248   00193E  EFA7  F00C         	goto	l3329
  2249   001942                     u2330:
  2250   001942                     
  2251                           ; BSR set to: 0
  2252   001942  6D62               	negf	___awdiv@divisor& (0+255),b
  2253   001944  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  2254   001946  B0D8               	btfsc	status,0,c
  2255   001948  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  2256   00194A                     
  2257                           ; BSR set to: 0
  2258   00194A  0E01               	movlw	1
  2259   00194C  6F65               	movwf	___awdiv@sign& (0+255),b
  2260   00194E                     l3329:
  2261                           
  2262                           ; BSR set to: 0
  2263   00194E  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  2264   001950  EFAE  F00C         	goto	u2340
  2265   001954  EFAC  F00C         	goto	u2341
  2266   001958                     u2341:
  2267   001958  EFB4  F00C         	goto	l3335
  2268   00195C                     u2340:
  2269   00195C                     
  2270                           ; BSR set to: 0
  2271   00195C  6D60               	negf	___awdiv@dividend& (0+255),b
  2272   00195E  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  2273   001960  B0D8               	btfsc	status,0,c
  2274   001962  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  2275   001964                     
  2276                           ; BSR set to: 0
  2277   001964  0E01               	movlw	1
  2278   001966  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  2279   001968                     l3335:
  2280                           
  2281                           ; BSR set to: 0
  2282   001968  0E00               	movlw	0
  2283   00196A  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  2284   00196C  0E00               	movlw	0
  2285   00196E  6F66               	movwf	___awdiv@quotient& (0+255),b
  2286   001970                     
  2287                           ; BSR set to: 0
  2288   001970  5162               	movf	___awdiv@divisor& (0+255),w,b
  2289   001972  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  2290   001974  B4D8               	btfsc	status,2,c
  2291   001976  EFBF  F00C         	goto	u2351
  2292   00197A  EFC1  F00C         	goto	u2350
  2293   00197E                     u2351:
  2294   00197E  EFE9  F00C         	goto	l3357
  2295   001982                     u2350:
  2296   001982                     
  2297                           ; BSR set to: 0
  2298   001982  0E01               	movlw	1
  2299   001984  6F64               	movwf	___awdiv@counter& (0+255),b
  2300   001986  EFC9  F00C         	goto	l3343
  2301   00198A                     l3341:
  2302                           
  2303                           ; BSR set to: 0
  2304   00198A  90D8               	bcf	status,0,c
  2305   00198C  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  2306   00198E  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  2307   001990  2B64               	incf	___awdiv@counter& (0+255),f,b
  2308   001992                     l3343:
  2309                           
  2310                           ; BSR set to: 0
  2311   001992  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  2312   001994  EFCE  F00C         	goto	u2361
  2313   001998  EFD0  F00C         	goto	u2360
  2314   00199C                     u2361:
  2315   00199C  EFC5  F00C         	goto	l3341
  2316   0019A0                     u2360:
  2317   0019A0                     l3345:
  2318                           
  2319                           ; BSR set to: 0
  2320   0019A0  90D8               	bcf	status,0,c
  2321   0019A2  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  2322   0019A4  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  2323   0019A6                     
  2324                           ; BSR set to: 0
  2325   0019A6  5162               	movf	___awdiv@divisor& (0+255),w,b
  2326   0019A8  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  2327   0019AA  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2328   0019AC  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  2329   0019AE  A0D8               	btfss	status,0,c
  2330   0019B0  EFDC  F00C         	goto	u2371
  2331   0019B4  EFDE  F00C         	goto	u2370
  2332   0019B8                     u2371:
  2333   0019B8  EFE3  F00C         	goto	l3353
  2334   0019BC                     u2370:
  2335   0019BC                     
  2336                           ; BSR set to: 0
  2337   0019BC  5162               	movf	___awdiv@divisor& (0+255),w,b
  2338   0019BE  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  2339   0019C0  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  2340   0019C2  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  2341   0019C4                     
  2342                           ; BSR set to: 0
  2343   0019C4  8166               	bsf	___awdiv@quotient& (0+255),0,b
  2344   0019C6                     l3353:
  2345                           
  2346                           ; BSR set to: 0
  2347   0019C6  90D8               	bcf	status,0,c
  2348   0019C8  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  2349   0019CA  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  2350   0019CC                     
  2351                           ; BSR set to: 0
  2352   0019CC  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  2353   0019CE  EFD0  F00C         	goto	l3345
  2354   0019D2                     l3357:
  2355                           
  2356                           ; BSR set to: 0
  2357   0019D2  5165               	movf	___awdiv@sign& (0+255),w,b
  2358   0019D4  B4D8               	btfsc	status,2,c
  2359   0019D6  EFEF  F00C         	goto	u2381
  2360   0019DA  EFF1  F00C         	goto	u2380
  2361   0019DE                     u2381:
  2362   0019DE  EFF5  F00C         	goto	l3361
  2363   0019E2                     u2380:
  2364   0019E2                     
  2365                           ; BSR set to: 0
  2366   0019E2  6D66               	negf	___awdiv@quotient& (0+255),b
  2367   0019E4  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  2368   0019E6  B0D8               	btfsc	status,0,c
  2369   0019E8  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  2370   0019EA                     l3361:
  2371                           
  2372                           ; BSR set to: 0
  2373   0019EA  C066  F060         	movff	___awdiv@quotient,?___awdiv
  2374   0019EE  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  2375   0019F2                     
  2376                           ; BSR set to: 0
  2377   0019F2  0012               	return		;funcret
  2378   0019F4                     __end_of___awdiv:
  2379                           	callstack 0
  2380                           
  2381 ;; *************** function _SYSTEM_Initialize *****************
  2382 ;; Defined at:
  2383 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;		None
  2386 ;; Auto vars:     Size  Location     Type
  2387 ;;		None
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  1    wreg      void 
  2390 ;; Registers used:
  2391 ;;		wreg, status,2, status,0, cstack
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2401 ;;Total ram usage:        0 bytes
  2402 ;; Hardware stack levels used: 1
  2403 ;; Hardware stack levels required when called: 12
  2404 ;; This function calls:
  2405 ;;		_ADC_Initialize
  2406 ;;		_EUSART1_Initialize
  2407 ;;		_INTERRUPT_Initialize
  2408 ;;		_OSCILLATOR_Initialize
  2409 ;;		_PIN_MANAGER_Initialize
  2410 ;; This function is called by:
  2411 ;;		_main
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           	psect	text12
  2416   0023B4                     __ptext12:
  2417                           	callstack 0
  2418   0023B4                     _SYSTEM_Initialize:
  2419                           	callstack 18
  2420   0023B4                     
  2421                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  2422   0023B4  EC5E  F012         	call	_INTERRUPT_Initialize	;wreg free
  2423   0023B8                     
  2424                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  2425   0023B8  ECBF  F010         	call	_PIN_MANAGER_Initialize	;wreg free
  2426   0023BC                     
  2427                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  2428   0023BC  EC53  F012         	call	_OSCILLATOR_Initialize	;wreg free
  2429   0023C0                     
  2430                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  2431   0023C0  ECE5  F011         	call	_ADC_Initialize	;wreg free
  2432   0023C4                     
  2433                           ;mcc_generated_files/mcc.c: 57:     EUSART1_Initialize();
  2434   0023C4  EC7D  F00E         	call	_EUSART1_Initialize	;wreg free
  2435   0023C8  0012               	return		;funcret
  2436   0023CA                     __end_of_SYSTEM_Initialize:
  2437                           	callstack 0
  2438                           
  2439 ;; *************** function _PIN_MANAGER_Initialize *****************
  2440 ;; Defined at:
  2441 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;		None
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;		None
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      void 
  2448 ;; Registers used:
  2449 ;;		wreg, status,2
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2459 ;;Total ram usage:        0 bytes
  2460 ;; Hardware stack levels used: 1
  2461 ;; Hardware stack levels required when called: 10
  2462 ;; This function calls:
  2463 ;;		Nothing
  2464 ;; This function is called by:
  2465 ;;		_SYSTEM_Initialize
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           	psect	text13
  2470   00217E                     __ptext13:
  2471                           	callstack 0
  2472   00217E                     _PIN_MANAGER_Initialize:
  2473                           	callstack 19
  2474   00217E                     
  2475                           ;mcc_generated_files/pin_manager.c: 55:     LATE = 0x00;
  2476   00217E  0E00               	movlw	0
  2477   002180  6E8D               	movwf	141,c	;volatile
  2478                           
  2479                           ;mcc_generated_files/pin_manager.c: 56:     LATJ = 0x00;
  2480   002182  0E00               	movlw	0
  2481   002184  6E91               	movwf	145,c	;volatile
  2482                           
  2483                           ;mcc_generated_files/pin_manager.c: 57:     LATD = 0x00;
  2484   002186  0E00               	movlw	0
  2485   002188  6E8C               	movwf	140,c	;volatile
  2486                           
  2487                           ;mcc_generated_files/pin_manager.c: 58:     LATA = 0x00;
  2488   00218A  0E00               	movlw	0
  2489   00218C  6E89               	movwf	137,c	;volatile
  2490                           
  2491                           ;mcc_generated_files/pin_manager.c: 59:     LATF = 0x00;
  2492   00218E  0E00               	movlw	0
  2493   002190  6E8E               	movwf	142,c	;volatile
  2494                           
  2495                           ;mcc_generated_files/pin_manager.c: 60:     LATB = 0x00;
  2496   002192  0E00               	movlw	0
  2497   002194  6E8A               	movwf	138,c	;volatile
  2498                           
  2499                           ;mcc_generated_files/pin_manager.c: 61:     LATG = 0x00;
  2500   002196  0E00               	movlw	0
  2501   002198  6E8F               	movwf	143,c	;volatile
  2502                           
  2503                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  2504   00219A  0E00               	movlw	0
  2505   00219C  6E8B               	movwf	139,c	;volatile
  2506                           
  2507                           ;mcc_generated_files/pin_manager.c: 63:     LATH = 0x00;
  2508   00219E  0E00               	movlw	0
  2509   0021A0  6E90               	movwf	144,c	;volatile
  2510   0021A2                     
  2511                           ;mcc_generated_files/pin_manager.c: 68:     TRISE = 0xFF;
  2512   0021A2  6896               	setf	150,c	;volatile
  2513   0021A4                     
  2514                           ;mcc_generated_files/pin_manager.c: 69:     TRISF = 0xFF;
  2515   0021A4  6897               	setf	151,c	;volatile
  2516                           
  2517                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x3F;
  2518   0021A6  0E3F               	movlw	63
  2519   0021A8  6E92               	movwf	146,c	;volatile
  2520   0021AA                     
  2521                           ;mcc_generated_files/pin_manager.c: 71:     TRISG = 0xFF;
  2522   0021AA  6898               	setf	152,c	;volatile
  2523   0021AC                     
  2524                           ;mcc_generated_files/pin_manager.c: 72:     TRISB = 0xFF;
  2525   0021AC  6893               	setf	147,c	;volatile
  2526   0021AE                     
  2527                           ;mcc_generated_files/pin_manager.c: 73:     TRISH = 0xFF;
  2528   0021AE  6899               	setf	153,c	;volatile
  2529                           
  2530                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xBF;
  2531   0021B0  0EBF               	movlw	191
  2532   0021B2  6E94               	movwf	148,c	;volatile
  2533   0021B4                     
  2534                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xFF;
  2535   0021B4  6895               	setf	149,c	;volatile
  2536                           
  2537                           ;mcc_generated_files/pin_manager.c: 76:     TRISJ = 0xF8;
  2538   0021B6  0EF8               	movlw	248
  2539   0021B8  6E9A               	movwf	154,c	;volatile
  2540                           
  2541                           ;mcc_generated_files/pin_manager.c: 81:     ADCON1bits.PCFG = 0x00;
  2542   0021BA  0EF0               	movlw	-16
  2543   0021BC  16C1               	andwf	193,f,c	;volatile
  2544   0021BE  0012               	return		;funcret
  2545   0021C0                     __end_of_PIN_MANAGER_Initialize:
  2546                           	callstack 0
  2547                           
  2548 ;; *************** function _OSCILLATOR_Initialize *****************
  2549 ;; Defined at:
  2550 ;;		line 60 in file "mcc_generated_files/mcc.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;		None
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;		None
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  1    wreg      void 
  2557 ;; Registers used:
  2558 ;;		wreg, status,2
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2568 ;;Total ram usage:        0 bytes
  2569 ;; Hardware stack levels used: 1
  2570 ;; Hardware stack levels required when called: 10
  2571 ;; This function calls:
  2572 ;;		Nothing
  2573 ;; This function is called by:
  2574 ;;		_SYSTEM_Initialize
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           	psect	text14
  2579   0024A6                     __ptext14:
  2580                           	callstack 0
  2581   0024A6                     _OSCILLATOR_Initialize:
  2582                           	callstack 19
  2583   0024A6                     
  2584                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x00;
  2585   0024A6  0E00               	movlw	0
  2586   0024A8  6ED3               	movwf	211,c	;volatile
  2587                           
  2588                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  2589   0024AA  0E00               	movlw	0
  2590   0024AC  6E9B               	movwf	155,c	;volatile
  2591   0024AE  0012               	return		;funcret
  2592   0024B0                     __end_of_OSCILLATOR_Initialize:
  2593                           	callstack 0
  2594                           
  2595 ;; *************** function _INTERRUPT_Initialize *****************
  2596 ;; Defined at:
  2597 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;		None
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;		None
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  1    wreg      void 
  2604 ;; Registers used:
  2605 ;;		None
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2615 ;;Total ram usage:        0 bytes
  2616 ;; Hardware stack levels used: 1
  2617 ;; Hardware stack levels required when called: 10
  2618 ;; This function calls:
  2619 ;;		Nothing
  2620 ;; This function is called by:
  2621 ;;		_SYSTEM_Initialize
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           	psect	text15
  2626   0024BC                     __ptext15:
  2627                           	callstack 0
  2628   0024BC                     _INTERRUPT_Initialize:
  2629                           	callstack 19
  2630   0024BC                     
  2631                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  2632   0024BC  9ED0               	bcf	208,7,c	;volatile
  2633   0024BE  0012               	return		;funcret
  2634   0024C0                     __end_of_INTERRUPT_Initialize:
  2635                           	callstack 0
  2636                           
  2637 ;; *************** function _EUSART1_Initialize *****************
  2638 ;; Defined at:
  2639 ;;		line 118 in file "mcc_generated_files/eusart1.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;		None
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;		None
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  1    wreg      void 
  2646 ;; Registers used:
  2647 ;;		wreg, status,2, status,0, cstack
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2657 ;;Total ram usage:        0 bytes
  2658 ;; Hardware stack levels used: 1
  2659 ;; Hardware stack levels required when called: 11
  2660 ;; This function calls:
  2661 ;;		_EUSART1_SetErrorHandler
  2662 ;;		_EUSART1_SetFramingErrorHandler
  2663 ;;		_EUSART1_SetOverrunErrorHandler
  2664 ;;		_EUSART1_SetRxInterruptHandler
  2665 ;; This function is called by:
  2666 ;;		_SYSTEM_Initialize
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           	psect	text16
  2671   001CFA                     __ptext16:
  2672                           	callstack 0
  2673   001CFA                     _EUSART1_Initialize:
  2674                           	callstack 18
  2675   001CFA                     
  2676                           ;mcc_generated_files/eusart1.c: 121:     PIE1bits.RC1IE = 0;
  2677   001CFA  9A9D               	bcf	157,5,c	;volatile
  2678   001CFC                     
  2679                           ;mcc_generated_files/eusart1.c: 122:     EUSART1_SetRxInterruptHandler(PrintOnScreen);
  2680   001CFC  0E06               	movlw	low _PrintOnScreen
  2681   001CFE  0100               	movlb	0	; () banked
  2682   001D00  6F60               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler& (0+255),b
  2683   001D02  0E10               	movlw	high _PrintOnScreen
  2684   001D04  6F61               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
  2685   001D06  0E00               	movlw	low (_PrintOnScreen shr (0+16))
  2686   001D08  6F62               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
  2687   001D0A  EC1C  F012         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  2688   001D0E                     
  2689                           ;mcc_generated_files/eusart1.c: 126:     BAUDCON1 = 0x08;
  2690   001D0E  0E08               	movlw	8
  2691   001D10  6E7E               	movwf	126,c	;volatile
  2692   001D12                     
  2693                           ;mcc_generated_files/eusart1.c: 129:     RCSTA1 = 0x90;
  2694   001D12  0E90               	movlw	144
  2695   001D14  6EAB               	movwf	171,c	;volatile
  2696   001D16                     
  2697                           ;mcc_generated_files/eusart1.c: 132:     TXSTA1 = 0x24;
  2698   001D16  0E24               	movlw	36
  2699   001D18  6EAC               	movwf	172,c	;volatile
  2700   001D1A                     
  2701                           ;mcc_generated_files/eusart1.c: 135:     SPBRG1 = 0x35;
  2702   001D1A  0E35               	movlw	53
  2703   001D1C  6EAF               	movwf	175,c	;volatile
  2704   001D1E                     
  2705                           ;mcc_generated_files/eusart1.c: 138:     SPBRGH1 = 0x00;
  2706   001D1E  0E00               	movlw	0
  2707   001D20  6E7F               	movwf	127,c	;volatile
  2708   001D22                     
  2709                           ;mcc_generated_files/eusart1.c: 141:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  2710   001D22  0EC2               	movlw	low _EUSART1_DefaultFramingErrorHandler
  2711   001D24  0100               	movlb	0	; () banked
  2712   001D26  6F60               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler& (0+255),b
  2713   001D28  0E24               	movlw	high _EUSART1_DefaultFramingErrorHandler
  2714   001D2A  6F61               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
  2715   001D2C  0E00               	movlw	low (_EUSART1_DefaultFramingErrorHandler shr (0+16))
  2716   001D2E  6F62               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+2)& (0+255),b
  2717   001D30  EC2A  F012         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  2718   001D34                     
  2719                           ;mcc_generated_files/eusart1.c: 142:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  2720   001D34  0EB0               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  2721   001D36  0100               	movlb	0	; () banked
  2722   001D38  6F60               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler& (0+255),b
  2723   001D3A  0E24               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  2724   001D3C  6F61               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
  2725   001D3E  0E00               	movlw	low (_EUSART1_DefaultOverrunErrorHandler shr (0+16))
  2726   001D40  6F62               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+2)& (0+255),b
  2727   001D42  EC23  F012         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  2728   001D46                     
  2729                           ;mcc_generated_files/eusart1.c: 143:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  2730   001D46  0EB6               	movlw	low _EUSART1_DefaultErrorHandler
  2731   001D48  0100               	movlb	0	; () banked
  2732   001D4A  6F60               	movwf	EUSART1_SetErrorHandler@interruptHandler& (0+255),b
  2733   001D4C  0E24               	movlw	high _EUSART1_DefaultErrorHandler
  2734   001D4E  6F61               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)& (0+255),b
  2735   001D50  0E00               	movlw	low (_EUSART1_DefaultErrorHandler shr (0+16))
  2736   001D52  6F62               	movwf	(EUSART1_SetErrorHandler@interruptHandler+2)& (0+255),b
  2737   001D54  EC31  F012         	call	_EUSART1_SetErrorHandler	;wreg free
  2738                           
  2739                           ;mcc_generated_files/eusart1.c: 145:     eusart1RxLastError.status = 0;
  2740   001D58  0E00               	movlw	0
  2741   001D5A  6E43               	movwf	_eusart1RxLastError^0,c	;volatile
  2742                           
  2743                           ;mcc_generated_files/eusart1.c: 148:     eusart1RxHead = 0;
  2744   001D5C  0E00               	movlw	0
  2745   001D5E  6E46               	movwf	_eusart1RxHead^0,c	;volatile
  2746                           
  2747                           ;mcc_generated_files/eusart1.c: 149:     eusart1RxTail = 0;
  2748   001D60  0E00               	movlw	0
  2749   001D62  6E45               	movwf	_eusart1RxTail^0,c	;volatile
  2750                           
  2751                           ;mcc_generated_files/eusart1.c: 150:     eusart1RxCount = 0;
  2752   001D64  0E00               	movlw	0
  2753   001D66  6E44               	movwf	_eusart1RxCount^0,c	;volatile
  2754   001D68                     
  2755                           ;mcc_generated_files/eusart1.c: 153:     PIE1bits.RC1IE = 1;
  2756   001D68  8A9D               	bsf	157,5,c	;volatile
  2757   001D6A  0012               	return		;funcret
  2758   001D6C                     __end_of_EUSART1_Initialize:
  2759                           	callstack 0
  2760                           
  2761 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  2762 ;; Defined at:
  2763 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  2766 ;;		 -> PrintOnScreen(1), 
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;		None
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  1    wreg      void 
  2771 ;; Registers used:
  2772 ;;		wreg, status,2, status,0
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2778 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2782 ;;Total ram usage:        3 bytes
  2783 ;; Hardware stack levels used: 1
  2784 ;; Hardware stack levels required when called: 10
  2785 ;; This function calls:
  2786 ;;		Nothing
  2787 ;; This function is called by:
  2788 ;;		_EUSART1_Initialize
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           	psect	text17
  2793   002438                     __ptext17:
  2794                           	callstack 0
  2795   002438                     _EUSART1_SetRxInterruptHandler:
  2796                           	callstack 18
  2797   002438                     
  2798                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  2799   002438  C060  F053         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  2800   00243C  C061  F054         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  2801   002440  C062  F055         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+2,_EUSART1_RxDefaultInterruptHandl
      +                          er+2
  2802   002444  0012               	return		;funcret
  2803   002446                     __end_of_EUSART1_SetRxInterruptHandler:
  2804                           	callstack 0
  2805                           
  2806 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  2807 ;; Defined at:
  2808 ;;		line 260 in file "mcc_generated_files/eusart1.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  2811 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;		None
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  1    wreg      void 
  2816 ;; Registers used:
  2817 ;;		wreg, status,2, status,0
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2823 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;Total ram usage:        3 bytes
  2828 ;; Hardware stack levels used: 1
  2829 ;; Hardware stack levels required when called: 10
  2830 ;; This function calls:
  2831 ;;		Nothing
  2832 ;; This function is called by:
  2833 ;;		_EUSART1_Initialize
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           	psect	text18
  2838   002446                     __ptext18:
  2839                           	callstack 0
  2840   002446                     _EUSART1_SetOverrunErrorHandler:
  2841                           	callstack 18
  2842   002446                     
  2843                           ;mcc_generated_files/eusart1.c: 261:     EUSART1_OverrunErrorHandler = interruptHandler;
  2844   002446  C060  F0E6         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  2845   00244A  C061  F0E7         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  2846   00244E  C062  F0E8         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+2,_EUSART1_OverrunErrorHandler+2
  2847   002452  0012               	return		;funcret
  2848   002454                     __end_of_EUSART1_SetOverrunErrorHandler:
  2849                           	callstack 0
  2850                           
  2851 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  2852 ;; Defined at:
  2853 ;;		line 256 in file "mcc_generated_files/eusart1.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  2856 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;		None
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  1    wreg      void 
  2861 ;; Registers used:
  2862 ;;		wreg, status,2, status,0
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2868 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2871 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2872 ;;Total ram usage:        3 bytes
  2873 ;; Hardware stack levels used: 1
  2874 ;; Hardware stack levels required when called: 10
  2875 ;; This function calls:
  2876 ;;		Nothing
  2877 ;; This function is called by:
  2878 ;;		_EUSART1_Initialize
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           	psect	text19
  2883   002454                     __ptext19:
  2884                           	callstack 0
  2885   002454                     _EUSART1_SetFramingErrorHandler:
  2886                           	callstack 18
  2887   002454                     
  2888                           ;mcc_generated_files/eusart1.c: 257:     EUSART1_FramingErrorHandler = interruptHandler;
  2889   002454  C060  F0E9         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  2890   002458  C061  F0EA         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  2891   00245C  C062  F0EB         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+2,_EUSART1_FramingErrorHandler+2
  2892   002460  0012               	return		;funcret
  2893   002462                     __end_of_EUSART1_SetFramingErrorHandler:
  2894                           	callstack 0
  2895                           
  2896 ;; *************** function _EUSART1_SetErrorHandler *****************
  2897 ;; Defined at:
  2898 ;;		line 264 in file "mcc_generated_files/eusart1.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;  interruptHan    3    0[BANK0 ] PTR FTN()void 
  2901 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;		None
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  1    wreg      void 
  2906 ;; Registers used:
  2907 ;;		wreg, status,2, status,0
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2913 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2917 ;;Total ram usage:        3 bytes
  2918 ;; Hardware stack levels used: 1
  2919 ;; Hardware stack levels required when called: 10
  2920 ;; This function calls:
  2921 ;;		Nothing
  2922 ;; This function is called by:
  2923 ;;		_EUSART1_Initialize
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text20
  2928   002462                     __ptext20:
  2929                           	callstack 0
  2930   002462                     _EUSART1_SetErrorHandler:
  2931                           	callstack 18
  2932   002462                     
  2933                           ;mcc_generated_files/eusart1.c: 265:     EUSART1_ErrorHandler = interruptHandler;
  2934   002462  C060  F0E3         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  2935   002466  C061  F0E4         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  2936   00246A  C062  F0E5         	movff	EUSART1_SetErrorHandler@interruptHandler+2,_EUSART1_ErrorHandler+2
  2937   00246E  0012               	return		;funcret
  2938   002470                     __end_of_EUSART1_SetErrorHandler:
  2939                           	callstack 0
  2940                           
  2941 ;; *************** function _ADC_Initialize *****************
  2942 ;; Defined at:
  2943 ;;		line 61 in file "mcc_generated_files/adc.c"
  2944 ;; Parameters:    Size  Location     Type
  2945 ;;		None
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;		None
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  1    wreg      void 
  2950 ;; Registers used:
  2951 ;;		wreg, status,2
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2961 ;;Total ram usage:        0 bytes
  2962 ;; Hardware stack levels used: 1
  2963 ;; Hardware stack levels required when called: 10
  2964 ;; This function calls:
  2965 ;;		Nothing
  2966 ;; This function is called by:
  2967 ;;		_SYSTEM_Initialize
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           	psect	text21
  2972   0023CA                     __ptext21:
  2973                           	callstack 0
  2974   0023CA                     _ADC_Initialize:
  2975                           	callstack 19
  2976   0023CA                     
  2977                           ;mcc_generated_files/adc.c: 66:     ADCON1 = 0x00;
  2978   0023CA  0E00               	movlw	0
  2979   0023CC  6EC1               	movwf	193,c	;volatile
  2980                           
  2981                           ;mcc_generated_files/adc.c: 69:     ADCON2 = 0xBA;
  2982   0023CE  0EBA               	movlw	186
  2983   0023D0  6EC0               	movwf	192,c	;volatile
  2984                           
  2985                           ;mcc_generated_files/adc.c: 72:     ADRESL = 0x00;
  2986   0023D2  0E00               	movlw	0
  2987   0023D4  6EC3               	movwf	195,c	;volatile
  2988                           
  2989                           ;mcc_generated_files/adc.c: 75:     ADRESH = 0x00;
  2990   0023D6  0E00               	movlw	0
  2991   0023D8  6EC4               	movwf	196,c	;volatile
  2992                           
  2993                           ;mcc_generated_files/adc.c: 78:     ADCON0 = 0x01;
  2994   0023DA  0E01               	movlw	1
  2995   0023DC  6EC2               	movwf	194,c	;volatile
  2996   0023DE  0012               	return		;funcret
  2997   0023E0                     __end_of_ADC_Initialize:
  2998                           	callstack 0
  2999                           
  3000 ;; *************** function _LCD_Init *****************
  3001 ;; Defined at:
  3002 ;;		line 85 in file "LCD-library/LCD-library.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;		None
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;  LCD_f           2    0        int 
  3007 ;;  LCD_n           2    0        int 
  3008 ;;  LCD_dl          2    0        int 
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  1    wreg      void 
  3011 ;; Registers used:
  3012 ;;		wreg, status,2, status,0, cstack
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3020 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3021 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3022 ;;Total ram usage:        6 bytes
  3023 ;; Hardware stack levels used: 1
  3024 ;; Hardware stack levels required when called: 15
  3025 ;; This function calls:
  3026 ;;		_LCD_4bitCode
  3027 ;;		_LCD_4bitCodeNoWait
  3028 ;;		_LCD_8bitCode
  3029 ;;		_LCD_8bitCodeNoWait
  3030 ;;		_LCD_SetCursorAt
  3031 ;;		__delay_ms
  3032 ;;		__delay_us
  3033 ;; This function is called by:
  3034 ;;		_main
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           	psect	text22
  3039   00134C                     __ptext22:
  3040                           	callstack 0
  3041   00134C                     _LCD_Init:
  3042                           	callstack 15
  3043   00134C                     
  3044                           ;LCD-library/LCD-library.c: 86:     TRISE = TRISGbits.RG5 = TRISHbits.TRISH2 = TRISHbits
      +                          .TRISH1 = TRISHbits.TRISH0 = 0;
  3045   00134C  9099               	bcf	153,0,c	;volatile
  3046   00134E  9299               	bcf	153,1,c	;volatile
  3047   001350  9499               	bcf	153,2,c	;volatile
  3048   001352  9A98               	bcf	152,5,c	;volatile
  3049   001354  0E00               	movlw	0
  3050   001356  BA98               	btfsc	152,5,c	;volatile
  3051   001358  0E01               	movlw	1
  3052   00135A  6E96               	movwf	150,c	;volatile
  3053   00135C                     
  3054                           ;LCD-library/LCD-library.c: 90:     int LCD_dl, LCD_n, LCD_f;;LCD-library/LCD-library.c:
      +                           91:     if(8 == 8) LCD_dl = 1; else if(8 == 4) LCD_dl = 0;
  3055   00135C  0E00               	movlw	0
  3056   00135E  6E84               	movwf	132,c	;volatile
  3057   001360  B084               	btfsc	132,0,c	;volatile
  3058   001362  D002               	bra	u2675
  3059   001364  9287               	bcf	135,1,c	;volatile
  3060   001366  D001               	bra	u2676
  3061   001368                     u2675:
  3062   001368  8287               	bsf	135,1,c	;volatile
  3063   00136A                     u2676:
  3064   00136A  B287               	btfsc	135,1,c	;volatile
  3065   00136C  D002               	bra	u2685
  3066   00136E  9487               	bcf	135,2,c	;volatile
  3067   001370  D001               	bra	u2686
  3068   001372                     u2685:
  3069   001372  8487               	bsf	135,2,c	;volatile
  3070   001374                     u2686:
  3071   001374  A487               	btfss	135,2,c	;volatile
  3072   001376  D002               	bra	u2695
  3073   001378  8087               	bsf	135,0,c	;volatile
  3074   00137A  D001               	bra	u2697
  3075   00137C                     u2695:
  3076   00137C  9087               	bcf	135,0,c	;volatile
  3077   00137E                     u2697:
  3078   00137E                     
  3079                           ;LCD-library/LCD-library.c: 98:         _delay_ms(50);
  3080   00137E  0E00               	movlw	0
  3081   001380  0100               	movlb	0	; () banked
  3082   001382  6F61               	movwf	(__delay_ms@ms+1)& (0+255),b
  3083   001384  0E32               	movlw	50
  3084   001386  6F60               	movwf	__delay_ms@ms& (0+255),b
  3085   001388  EC36  F010         	call	__delay_ms	;wreg free
  3086   00138C                     
  3087                           ;LCD-library/LCD-library.c: 99:         LCD_8bitCodeNoWait(0b0000100000 + (LCD_dl<<4) + 
      +                          (LCD_n<<3) + (LCD_f<<2));
  3088   00138C  0E00               	movlw	0
  3089   00138E  0100               	movlb	0	; () banked
  3090   001390  6F61               	movwf	(LCD_8bitCodeNoWait@code+1)& (0+255),b
  3091   001392  0E38               	movlw	56
  3092   001394  6F60               	movwf	LCD_8bitCodeNoWait@code& (0+255),b
  3093   001396  EC74  F00F         	call	_LCD_8bitCodeNoWait	;wreg free
  3094   00139A                     
  3095                           ;LCD-library/LCD-library.c: 100:         _delay_ms(10);
  3096   00139A  0E00               	movlw	0
  3097   00139C  0100               	movlb	0	; () banked
  3098   00139E  6F61               	movwf	(__delay_ms@ms+1)& (0+255),b
  3099   0013A0  0E0A               	movlw	10
  3100   0013A2  6F60               	movwf	__delay_ms@ms& (0+255),b
  3101   0013A4  EC36  F010         	call	__delay_ms	;wreg free
  3102   0013A8                     
  3103                           ;LCD-library/LCD-library.c: 101:         LCD_8bitCodeNoWait(0b0000100000 + (LCD_dl<<4) +
      +                           (LCD_n<<3) + (LCD_f<<2));
  3104   0013A8  0E00               	movlw	0
  3105   0013AA  0100               	movlb	0	; () banked
  3106   0013AC  6F61               	movwf	(LCD_8bitCodeNoWait@code+1)& (0+255),b
  3107   0013AE  0E38               	movlw	56
  3108   0013B0  6F60               	movwf	LCD_8bitCodeNoWait@code& (0+255),b
  3109   0013B2  EC74  F00F         	call	_LCD_8bitCodeNoWait	;wreg free
  3110   0013B6                     
  3111                           ;LCD-library/LCD-library.c: 102:         _delay_us(200);
  3112   0013B6  0E00               	movlw	0
  3113   0013B8  0100               	movlb	0	; () banked
  3114   0013BA  6F61               	movwf	(__delay_us@us+1)& (0+255),b
  3115   0013BC  0EC8               	movlw	200
  3116   0013BE  6F60               	movwf	__delay_us@us& (0+255),b
  3117   0013C0  EC20  F011         	call	__delay_us	;wreg free
  3118   0013C4                     
  3119                           ;LCD-library/LCD-library.c: 103:         LCD_8bitCodeNoWait(0b0000100000 + (LCD_dl<<4) +
      +                           (LCD_n<<3) + (LCD_f<<2));
  3120   0013C4  0E00               	movlw	0
  3121   0013C6  0100               	movlb	0	; () banked
  3122   0013C8  6F61               	movwf	(LCD_8bitCodeNoWait@code+1)& (0+255),b
  3123   0013CA  0E38               	movlw	56
  3124   0013CC  6F60               	movwf	LCD_8bitCodeNoWait@code& (0+255),b
  3125   0013CE  EC74  F00F         	call	_LCD_8bitCodeNoWait	;wreg free
  3126   0013D2                     
  3127                           ;LCD-library/LCD-library.c: 105:         _delay_us(200);
  3128   0013D2  0E00               	movlw	0
  3129   0013D4  0100               	movlb	0	; () banked
  3130   0013D6  6F61               	movwf	(__delay_us@us+1)& (0+255),b
  3131   0013D8  0EC8               	movlw	200
  3132   0013DA  6F60               	movwf	__delay_us@us& (0+255),b
  3133   0013DC  EC20  F011         	call	__delay_us	;wreg free
  3134   0013E0                     
  3135                           ;LCD-library/LCD-library.c: 107:         LCD_8bitCode(0b0000100000 + (LCD_dl<<4) + (LCD_
      +                          n<<3) + (LCD_f<<2));
  3136   0013E0  0E00               	movlw	0
  3137   0013E2  0100               	movlb	0	; () banked
  3138   0013E4  6F66               	movwf	(LCD_8bitCode@code+1)& (0+255),b
  3139   0013E6  0E38               	movlw	56
  3140   0013E8  6F65               	movwf	LCD_8bitCode@code& (0+255),b
  3141   0013EA  ECF0  F011         	call	_LCD_8bitCode	;wreg free
  3142   0013EE                     
  3143                           ;LCD-library/LCD-library.c: 108:         LCD_8bitCode(0b0000001000);
  3144   0013EE  0E00               	movlw	0
  3145   0013F0  0100               	movlb	0	; () banked
  3146   0013F2  6F66               	movwf	(LCD_8bitCode@code+1)& (0+255),b
  3147   0013F4  0E08               	movlw	8
  3148   0013F6  6F65               	movwf	LCD_8bitCode@code& (0+255),b
  3149   0013F8  ECF0  F011         	call	_LCD_8bitCode	;wreg free
  3150   0013FC                     
  3151                           ;LCD-library/LCD-library.c: 109:         LCD_8bitCode(0b0000000001);
  3152   0013FC  0E00               	movlw	0
  3153   0013FE  0100               	movlb	0	; () banked
  3154   001400  6F66               	movwf	(LCD_8bitCode@code+1)& (0+255),b
  3155   001402  0E01               	movlw	1
  3156   001404  6F65               	movwf	LCD_8bitCode@code& (0+255),b
  3157   001406  ECF0  F011         	call	_LCD_8bitCode	;wreg free
  3158   00140A                     
  3159                           ;LCD-library/LCD-library.c: 110:         LCD_8bitCode(0b0000000100 + (LCD_isIncrement<<1
      +                          ) + LCD_isShift);
  3160   00140A  C04D  F06F         	movff	_LCD_isIncrement,??_LCD_Init
  3161   00140E  C04E  F070         	movff	_LCD_isIncrement+1,??_LCD_Init+1
  3162   001412  90D8               	bcf	status,0,c
  3163   001414  0100               	movlb	0	; () banked
  3164   001416  376F               	rlcf	??_LCD_Init& (0+255),f,b
  3165   001418  3770               	rlcf	(??_LCD_Init+1)& (0+255),f,b
  3166   00141A  0E04               	movlw	4
  3167   00141C  256F               	addwf	??_LCD_Init& (0+255),w,b
  3168   00141E  6F65               	movwf	LCD_8bitCode@code& (0+255),b
  3169   001420  0E00               	movlw	0
  3170   001422  2170               	addwfc	(??_LCD_Init+1)& (0+255),w,b
  3171   001424  6F66               	movwf	(LCD_8bitCode@code+1)& (0+255),b
  3172   001426  ECF0  F011         	call	_LCD_8bitCode	;wreg free
  3173   00142A                     
  3174                           ;LCD-library/LCD-library.c: 113:         LCD_8bitCode(0b0000001000 + (LCD_isDisplayOn<<2
      +                          ) + (LCD_isCursorOn<<1) + LCD_isCursorBlinking);
  3175   00142A  C049  F06F         	movff	_LCD_isCursorOn,??_LCD_Init
  3176   00142E  C04A  F070         	movff	_LCD_isCursorOn+1,??_LCD_Init+1
  3177   001432  90D8               	bcf	status,0,c
  3178   001434  0100               	movlb	0	; () banked
  3179   001436  376F               	rlcf	??_LCD_Init& (0+255),f,b
  3180   001438  3770               	rlcf	(??_LCD_Init+1)& (0+255),f,b
  3181   00143A  C04B  F071         	movff	_LCD_isDisplayOn,??_LCD_Init+2
  3182   00143E  C04C  F072         	movff	_LCD_isDisplayOn+1,??_LCD_Init+3
  3183   001442  90D8               	bcf	status,0,c
  3184   001444  3771               	rlcf	(??_LCD_Init+2)& (0+255),f,b
  3185   001446  3772               	rlcf	(??_LCD_Init+3)& (0+255),f,b
  3186   001448  90D8               	bcf	status,0,c
  3187   00144A  3771               	rlcf	(??_LCD_Init+2)& (0+255),f,b
  3188   00144C  3772               	rlcf	(??_LCD_Init+3)& (0+255),f,b
  3189   00144E  516F               	movf	??_LCD_Init& (0+255),w,b
  3190   001450  2571               	addwf	(??_LCD_Init+2)& (0+255),w,b
  3191   001452  6F73               	movwf	(??_LCD_Init+4)& (0+255),b
  3192   001454  5170               	movf	(??_LCD_Init+1)& (0+255),w,b
  3193   001456  2172               	addwfc	(??_LCD_Init+3)& (0+255),w,b
  3194   001458  6F74               	movwf	(??_LCD_Init+5)& (0+255),b
  3195   00145A  503F               	movf	_LCD_isCursorBlinking^0,w,c
  3196   00145C  2773               	addwf	(??_LCD_Init+4)& (0+255),f,b
  3197   00145E  5040               	movf	(_LCD_isCursorBlinking+1)^0,w,c
  3198   001460  2374               	addwfc	(??_LCD_Init+5)& (0+255),f,b
  3199   001462  0E08               	movlw	8
  3200   001464  2573               	addwf	(??_LCD_Init+4)& (0+255),w,b
  3201   001466  6F65               	movwf	LCD_8bitCode@code& (0+255),b
  3202   001468  0E00               	movlw	0
  3203   00146A  2174               	addwfc	(??_LCD_Init+5)& (0+255),w,b
  3204   00146C  6F66               	movwf	(LCD_8bitCode@code+1)& (0+255),b
  3205   00146E  ECF0  F011         	call	_LCD_8bitCode	;wreg free
  3206   001472                     
  3207                           ;LCD-library/LCD-library.c: 135:     LCD_SetCursorAt(LCD_posX, LCD_posY);
  3208   001472  C051  F069         	movff	_LCD_posX,LCD_SetCursorAt@pos
  3209   001476  C052  F06A         	movff	_LCD_posX+1,LCD_SetCursorAt@pos+1
  3210   00147A  C04F  F06B         	movff	_LCD_posY,LCD_SetCursorAt@row
  3211   00147E  C050  F06C         	movff	_LCD_posY+1,LCD_SetCursorAt@row+1
  3212   001482  EC5A  F00B         	call	_LCD_SetCursorAt	;wreg free
  3213   001486  0012               	return		;funcret
  3214   001488                     __end_of_LCD_Init:
  3215                           	callstack 0
  3216                           
  3217 ;; *************** function __delay_ms *****************
  3218 ;; Defined at:
  3219 ;;		line 8 in file "LCD-library/LCD-library.c"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;  ms              2    0[BANK0 ] int 
  3222 ;; Auto vars:     Size  Location     Type
  3223 ;;  i               2    3[BANK0 ] int 
  3224 ;; Return value:  Size  Location     Type
  3225 ;;                  1    wreg      void 
  3226 ;; Registers used:
  3227 ;;		wreg, status,2, status,0
  3228 ;; Tracked objects:
  3229 ;;		On entry : 0/0
  3230 ;;		On exit  : 0/0
  3231 ;;		Unchanged: 0/0
  3232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3233 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3234 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3235 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3236 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3237 ;;Total ram usage:        5 bytes
  3238 ;; Hardware stack levels used: 1
  3239 ;; Hardware stack levels required when called: 10
  3240 ;; This function calls:
  3241 ;;		Nothing
  3242 ;; This function is called by:
  3243 ;;		_LCD_Init
  3244 ;;		___delay_s
  3245 ;;		_LCD_TypeStr
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249                           	psect	text23
  3250   00206C                     __ptext23:
  3251                           	callstack 0
  3252   00206C                     __delay_ms:
  3253                           	callstack 19
  3254   00206C  0E00               	movlw	0
  3255   00206E  0100               	movlb	0	; () banked
  3256   002070  6F64               	movwf	(__delay_ms@i+1)& (0+255),b
  3257   002072  0E00               	movlw	0
  3258   002074  6F63               	movwf	__delay_ms@i& (0+255),b
  3259   002076  EF49  F010         	goto	l55
  3260   00207A                     l3517:
  3261                           
  3262                           ; BSR set to: 0
  3263   00207A  0E09               	movlw	9
  3264   00207C  0100               	movlb	0	; () banked
  3265   00207E  6F62               	movwf	??__delay_ms& (0+255),b
  3266   002080  0E1C               	movlw	28
  3267   002082                     u2907:
  3268   002082  2EE8               	decfsz	wreg,f,c
  3269   002084  D7FE               	bra	u2907
  3270   002086  2F62               	decfsz	??__delay_ms& (0+255),f,b
  3271   002088  D7FC               	bra	u2907
  3272   00208A  F000               	nop	
  3273   00208C  0100               	movlb	0	; () banked
  3274   00208E  4B63               	infsnz	__delay_ms@i& (0+255),f,b
  3275   002090  2B64               	incf	(__delay_ms@i+1)& (0+255),f,b
  3276   002092                     l55:
  3277                           
  3278                           ; BSR set to: 0
  3279   002092  5160               	movf	__delay_ms@ms& (0+255),w,b
  3280   002094  5D63               	subwf	__delay_ms@i& (0+255),w,b
  3281   002096  5164               	movf	(__delay_ms@i+1)& (0+255),w,b
  3282   002098  0A80               	xorlw	128
  3283   00209A  6F62               	movwf	??__delay_ms& (0+255),b
  3284   00209C  5161               	movf	(__delay_ms@ms+1)& (0+255),w,b
  3285   00209E  0A80               	xorlw	128
  3286   0020A0  5962               	subwfb	??__delay_ms& (0+255),w,b
  3287   0020A2  A0D8               	btfss	status,0,c
  3288   0020A4  EF56  F010         	goto	u2611
  3289   0020A8  EF58  F010         	goto	u2610
  3290   0020AC                     u2611:
  3291   0020AC  EF3D  F010         	goto	l3517
  3292   0020B0                     u2610:
  3293   0020B0                     
  3294                           ; BSR set to: 0
  3295   0020B0  0012               	return		;funcret
  3296   0020B2                     __end_of__delay_ms:
  3297                           	callstack 0
  3298                           
  3299 ;; *************** function _LCD_SetCursorAt *****************
  3300 ;; Defined at:
  3301 ;;		line 232 in file "LCD-library/LCD-library.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;  pos             2    9[BANK0 ] int 
  3304 ;;  row             2   11[BANK0 ] int 
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;		None
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  1    wreg      void 
  3309 ;; Registers used:
  3310 ;;		wreg, status,2, status,0, cstack
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3316 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3318 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3319 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3320 ;;Total ram usage:        6 bytes
  3321 ;; Hardware stack levels used: 1
  3322 ;; Hardware stack levels required when called: 14
  3323 ;; This function calls:
  3324 ;;		_LCD_Code
  3325 ;; This function is called by:
  3326 ;;		_LCD_Init
  3327 ;;		_LCD_TypeStr
  3328 ;;		_LCD_MoveCursorUp
  3329 ;;		_LCD_MoveCursorDown
  3330 ;;		_LCD_NewChar
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334                           	psect	text24
  3335   0016B4                     __ptext24:
  3336                           	callstack 0
  3337   0016B4                     _LCD_SetCursorAt:
  3338                           	callstack 15
  3339   0016B4                     
  3340                           ;LCD-library/LCD-library.c: 233:     if(pos >= 1 && pos <= 16 && row >= 1 && row <= 2){
  3341   0016B4  0100               	movlb	0	; () banked
  3342   0016B6  BF6A               	btfsc	(LCD_SetCursorAt@pos+1)& (0+255),7,b
  3343   0016B8  EF66  F00B         	goto	u2621
  3344   0016BC  516A               	movf	(LCD_SetCursorAt@pos+1)& (0+255),w,b
  3345   0016BE  E108               	bnz	u2620
  3346   0016C0  0569               	decf	LCD_SetCursorAt@pos& (0+255),w,b
  3347   0016C2  A0D8               	btfss	status,0,c
  3348   0016C4  EF66  F00B         	goto	u2621
  3349   0016C8  EF68  F00B         	goto	u2620
  3350   0016CC                     u2621:
  3351   0016CC  EFC5  F00B         	goto	l165
  3352   0016D0                     u2620:
  3353   0016D0                     
  3354                           ; BSR set to: 0
  3355   0016D0  BF6A               	btfsc	(LCD_SetCursorAt@pos+1)& (0+255),7,b
  3356   0016D2  EF76  F00B         	goto	u2630
  3357   0016D6  516A               	movf	(LCD_SetCursorAt@pos+1)& (0+255),w,b
  3358   0016D8  E107               	bnz	u2631
  3359   0016DA  0E11               	movlw	17
  3360   0016DC  5D69               	subwf	LCD_SetCursorAt@pos& (0+255),w,b
  3361   0016DE  B0D8               	btfsc	status,0,c
  3362   0016E0  EF74  F00B         	goto	u2631
  3363   0016E4  EF76  F00B         	goto	u2630
  3364   0016E8                     u2631:
  3365   0016E8  EFC5  F00B         	goto	l165
  3366   0016EC                     u2630:
  3367   0016EC                     
  3368                           ; BSR set to: 0
  3369   0016EC  BF6C               	btfsc	(LCD_SetCursorAt@row+1)& (0+255),7,b
  3370   0016EE  EF81  F00B         	goto	u2641
  3371   0016F2  516C               	movf	(LCD_SetCursorAt@row+1)& (0+255),w,b
  3372   0016F4  E108               	bnz	u2640
  3373   0016F6  056B               	decf	LCD_SetCursorAt@row& (0+255),w,b
  3374   0016F8  A0D8               	btfss	status,0,c
  3375   0016FA  EF81  F00B         	goto	u2641
  3376   0016FE  EF83  F00B         	goto	u2640
  3377   001702                     u2641:
  3378   001702  EFC5  F00B         	goto	l165
  3379   001706                     u2640:
  3380   001706                     
  3381                           ; BSR set to: 0
  3382   001706  BF6C               	btfsc	(LCD_SetCursorAt@row+1)& (0+255),7,b
  3383   001708  EF91  F00B         	goto	u2650
  3384   00170C  516C               	movf	(LCD_SetCursorAt@row+1)& (0+255),w,b
  3385   00170E  E107               	bnz	u2651
  3386   001710  0E03               	movlw	3
  3387   001712  5D6B               	subwf	LCD_SetCursorAt@row& (0+255),w,b
  3388   001714  B0D8               	btfsc	status,0,c
  3389   001716  EF8F  F00B         	goto	u2651
  3390   00171A  EF91  F00B         	goto	u2650
  3391   00171E                     u2651:
  3392   00171E  EFC5  F00B         	goto	l165
  3393   001722                     u2650:
  3394   001722                     
  3395                           ; BSR set to: 0
  3396                           ;LCD-library/LCD-library.c: 234:         LCD_posX = pos;
  3397   001722  C069  F051         	movff	LCD_SetCursorAt@pos,_LCD_posX
  3398   001726  C06A  F052         	movff	LCD_SetCursorAt@pos+1,_LCD_posX+1
  3399                           
  3400                           ;LCD-library/LCD-library.c: 235:         LCD_posY = row;
  3401   00172A  C06B  F04F         	movff	LCD_SetCursorAt@row,_LCD_posY
  3402   00172E  C06C  F050         	movff	LCD_SetCursorAt@row+1,_LCD_posY+1
  3403                           
  3404                           ;LCD-library/LCD-library.c: 236:         switch(row) {
  3405   001732  EFAF  F00B         	goto	l3539
  3406   001736                     l3531:
  3407                           
  3408                           ; BSR set to: 0
  3409   001736  0E7F               	movlw	127
  3410   001738  2569               	addwf	LCD_SetCursorAt@pos& (0+255),w,b
  3411   00173A  6F67               	movwf	LCD_Code@code& (0+255),b
  3412   00173C  0E00               	movlw	0
  3413   00173E  216A               	addwfc	(LCD_SetCursorAt@pos+1)& (0+255),w,b
  3414   001740  6F68               	movwf	(LCD_Code@code+1)& (0+255),b
  3415   001742  EC38  F012         	call	_LCD_Code	;wreg free
  3416   001746  EFC5  F00B         	goto	l165
  3417   00174A                     l3533:
  3418                           
  3419                           ; BSR set to: 0
  3420   00174A  0EBF               	movlw	191
  3421   00174C  2569               	addwf	LCD_SetCursorAt@pos& (0+255),w,b
  3422   00174E  6F67               	movwf	LCD_Code@code& (0+255),b
  3423   001750  0E00               	movlw	0
  3424   001752  216A               	addwfc	(LCD_SetCursorAt@pos+1)& (0+255),w,b
  3425   001754  6F68               	movwf	(LCD_Code@code+1)& (0+255),b
  3426   001756  EC38  F012         	call	_LCD_Code	;wreg free
  3427   00175A  EFC5  F00B         	goto	l165
  3428   00175E                     l3539:
  3429                           
  3430                           ; BSR set to: 0
  3431   00175E  C06B  F06D         	movff	LCD_SetCursorAt@row,??_LCD_SetCursorAt
  3432   001762  C06C  F06E         	movff	LCD_SetCursorAt@row+1,??_LCD_SetCursorAt+1
  3433                           
  3434                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3435                           ; Switch size 1, requested type "simple"
  3436                           ; Number of cases is 1, Range of values is 0 to 0
  3437                           ; switch strategies available:
  3438                           ; Name         Instructions Cycles
  3439                           ; simple_byte            4     3 (average)
  3440                           ;	Chosen strategy is simple_byte
  3441   001766  516E               	movf	(??_LCD_SetCursorAt+1)& (0+255),w,b
  3442   001768  0A00               	xorlw	0	; case 0
  3443   00176A  B4D8               	btfsc	status,2,c
  3444   00176C  EFBA  F00B         	goto	l3869
  3445   001770  EF9B  F00B         	goto	l3531
  3446   001774                     l3869:
  3447                           
  3448                           ; BSR set to: 0
  3449                           ; Switch size 1, requested type "simple"
  3450                           ; Number of cases is 2, Range of values is 1 to 2
  3451                           ; switch strategies available:
  3452                           ; Name         Instructions Cycles
  3453                           ; simple_byte            7     4 (average)
  3454                           ;	Chosen strategy is simple_byte
  3455   001774  516D               	movf	??_LCD_SetCursorAt& (0+255),w,b
  3456   001776  0A01               	xorlw	1	; case 1
  3457   001778  B4D8               	btfsc	status,2,c
  3458   00177A  EF9B  F00B         	goto	l3531
  3459   00177E  0A03               	xorlw	3	; case 2
  3460   001780  B4D8               	btfsc	status,2,c
  3461   001782  EFA5  F00B         	goto	l3533
  3462   001786  EF9B  F00B         	goto	l3531
  3463   00178A                     l165:
  3464   00178A  0012               	return		;funcret
  3465   00178C                     __end_of_LCD_SetCursorAt:
  3466                           	callstack 0
  3467                           
  3468 ;; *************** function _LCD_Code *****************
  3469 ;; Defined at:
  3470 ;;		line 77 in file "LCD-library/LCD-library.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;  code            2    7[BANK0 ] int 
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;		None
  3475 ;; Return value:  Size  Location     Type
  3476 ;;                  1    wreg      void 
  3477 ;; Registers used:
  3478 ;;		wreg, status,2, status,0, cstack
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3484 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3487 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3488 ;;Total ram usage:        2 bytes
  3489 ;; Hardware stack levels used: 1
  3490 ;; Hardware stack levels required when called: 13
  3491 ;; This function calls:
  3492 ;;		_LCD_4bitCode
  3493 ;;		_LCD_8bitCode
  3494 ;; This function is called by:
  3495 ;;		_LCD_SetCursorAt
  3496 ;;		_LCD_TurnOff
  3497 ;;		_LCD_TurnOn
  3498 ;;		_LCD_home
  3499 ;;		_LCD_CursorOff
  3500 ;;		_LCD_CursorOn
  3501 ;;		_LCD_CursorBlinkingOn
  3502 ;;		_LCD_CursorBlinkingOff
  3503 ;;		_LCD_NewChar
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           
  3507                           	psect	text25
  3508   002470                     __ptext25:
  3509                           	callstack 0
  3510   002470                     _LCD_Code:
  3511                           	callstack 15
  3512   002470  C067  F065         	movff	LCD_Code@code,LCD_8bitCode@code
  3513   002474  C068  F066         	movff	LCD_Code@code+1,LCD_8bitCode@code+1
  3514   002478  ECF0  F011         	call	_LCD_8bitCode	;wreg free
  3515   00247C  0012               	return		;funcret
  3516   00247E                     __end_of_LCD_Code:
  3517                           	callstack 0
  3518                           
  3519 ;; *************** function _LCD_8bitCode *****************
  3520 ;; Defined at:
  3521 ;;		line 59 in file "LCD-library/LCD-library.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;  code            2    5[BANK0 ] int 
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;		None
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  1    wreg      void 
  3528 ;; Registers used:
  3529 ;;		wreg, status,2, status,0, cstack
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3535 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3538 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3539 ;;Total ram usage:        2 bytes
  3540 ;; Hardware stack levels used: 1
  3541 ;; Hardware stack levels required when called: 12
  3542 ;; This function calls:
  3543 ;;		_LCD_8bitCodeNoWait
  3544 ;;		_LCD_Wait
  3545 ;; This function is called by:
  3546 ;;		_LCD_Code
  3547 ;;		_LCD_Init
  3548 ;; This function uses a non-reentrant model
  3549 ;;
  3550                           
  3551                           	psect	text26
  3552   0023E0                     __ptext26:
  3553                           	callstack 0
  3554   0023E0                     _LCD_8bitCode:
  3555                           	callstack 15
  3556   0023E0                     
  3557                           ;LCD-library/LCD-library.c: 60:     LCD_8bitCodeNoWait(code);
  3558   0023E0  C065  F060         	movff	LCD_8bitCode@code,LCD_8bitCodeNoWait@code
  3559   0023E4  C066  F061         	movff	LCD_8bitCode@code+1,LCD_8bitCodeNoWait@code+1
  3560   0023E8  EC74  F00F         	call	_LCD_8bitCodeNoWait	;wreg free
  3561                           
  3562                           ;LCD-library/LCD-library.c: 61:     LCD_Wait();
  3563   0023EC  EC14  F012         	call	_LCD_Wait	;wreg free
  3564   0023F0  0012               	return		;funcret
  3565   0023F2                     __end_of_LCD_8bitCode:
  3566                           	callstack 0
  3567                           
  3568 ;; *************** function _LCD_8bitCodeNoWait *****************
  3569 ;; Defined at:
  3570 ;;		line 52 in file "LCD-library/LCD-library.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;  code            2    0[BANK0 ] int 
  3573 ;; Auto vars:     Size  Location     Type
  3574 ;;		None
  3575 ;; Return value:  Size  Location     Type
  3576 ;;                  1    wreg      void 
  3577 ;; Registers used:
  3578 ;;		wreg, status,2, status,0
  3579 ;; Tracked objects:
  3580 ;;		On entry : 0/0
  3581 ;;		On exit  : 0/0
  3582 ;;		Unchanged: 0/0
  3583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3584 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3586 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3587 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3588 ;;Total ram usage:        5 bytes
  3589 ;; Hardware stack levels used: 1
  3590 ;; Hardware stack levels required when called: 10
  3591 ;; This function calls:
  3592 ;;		Nothing
  3593 ;; This function is called by:
  3594 ;;		_LCD_8bitCode
  3595 ;;		_LCD_Init
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598                           
  3599                           	psect	text27
  3600   001EE8                     __ptext27:
  3601                           	callstack 0
  3602   001EE8                     _LCD_8bitCodeNoWait:
  3603                           	callstack 16
  3604   001EE8                     
  3605                           ;LCD-library/LCD-library.c: 53:     PORTHbits.RH2 = (code & 0b1000000000) >> 9;
  3606   001EE8  C060  F062         	movff	LCD_8bitCodeNoWait@code,??_LCD_8bitCodeNoWait
  3607   001EEC  C061  F063         	movff	LCD_8bitCodeNoWait@code+1,??_LCD_8bitCodeNoWait+1
  3608   001EF0  0E09               	movlw	9
  3609   001EF2  0100               	movlb	0	; () banked
  3610   001EF4  6F64               	movwf	(??_LCD_8bitCodeNoWait+2)& (0+255),b
  3611   001EF6                     u2305:
  3612   001EF6  3563               	rlcf	(??_LCD_8bitCodeNoWait+1)& (0+255),w,b
  3613   001EF8  3363               	rrcf	(??_LCD_8bitCodeNoWait+1)& (0+255),f,b
  3614   001EFA  3362               	rrcf	??_LCD_8bitCodeNoWait& (0+255),f,b
  3615   001EFC  2F64               	decfsz	(??_LCD_8bitCodeNoWait+2)& (0+255),f,b
  3616   001EFE  EF7B  F00F         	goto	u2305
  3617   001F02  0E01               	movlw	1
  3618   001F04  1762               	andwf	??_LCD_8bitCodeNoWait& (0+255),f,b
  3619   001F06  4762               	rlncf	??_LCD_8bitCodeNoWait& (0+255),f,b
  3620   001F08  4762               	rlncf	??_LCD_8bitCodeNoWait& (0+255),f,b
  3621   001F0A  5087               	movf	135,w,c	;volatile
  3622   001F0C  1962               	xorwf	??_LCD_8bitCodeNoWait& (0+255),w,b
  3623   001F0E  0BFB               	andlw	-5
  3624   001F10  1962               	xorwf	??_LCD_8bitCodeNoWait& (0+255),w,b
  3625   001F12  6E87               	movwf	135,c	;volatile
  3626                           
  3627                           ;LCD-library/LCD-library.c: 54:     PORTHbits.RH1 = (code & 0b0100000000) >> 8;
  3628   001F14  C061  F062         	movff	LCD_8bitCodeNoWait@code+1,??_LCD_8bitCodeNoWait
  3629   001F18  6B63               	clrf	(??_LCD_8bitCodeNoWait+1)& (0+255),b
  3630   001F1A  BF62               	btfsc	??_LCD_8bitCodeNoWait& (0+255),7,b
  3631   001F1C  6963               	setf	(??_LCD_8bitCodeNoWait+1)& (0+255),b
  3632   001F1E  0E01               	movlw	1
  3633   001F20  1762               	andwf	??_LCD_8bitCodeNoWait& (0+255),f,b
  3634   001F22  4762               	rlncf	??_LCD_8bitCodeNoWait& (0+255),f,b
  3635   001F24  5087               	movf	135,w,c	;volatile
  3636   001F26  1962               	xorwf	??_LCD_8bitCodeNoWait& (0+255),w,b
  3637   001F28  0BFD               	andlw	-3
  3638   001F2A  1962               	xorwf	??_LCD_8bitCodeNoWait& (0+255),w,b
  3639   001F2C  6E87               	movwf	135,c	;volatile
  3640   001F2E                     
  3641                           ; BSR set to: 0
  3642                           ;LCD-library/LCD-library.c: 55:     PORTE = code & 0b0011111111;
  3643   001F2E  C060  FF84         	movff	LCD_8bitCodeNoWait@code,3972	;volatile
  3644   001F32                     
  3645                           ; BSR set to: 0
  3646                           ;LCD-library/LCD-library.c: 56:     PORTHbits.RH0 = 1;
  3647   001F32  8087               	bsf	135,0,c	;volatile
  3648   001F34                     
  3649                           ; BSR set to: 0
  3650                           ;LCD-library/LCD-library.c: 57:     PORTHbits.RH0 = 0;
  3651   001F34  9087               	bcf	135,0,c	;volatile
  3652   001F36                     
  3653                           ; BSR set to: 0
  3654   001F36  0012               	return		;funcret
  3655   001F38                     __end_of_LCD_8bitCodeNoWait:
  3656                           	callstack 0
  3657                           
  3658 ;; *************** function _LCD_4bitCode *****************
  3659 ;; Defined at:
  3660 ;;		line 72 in file "LCD-library/LCD-library.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;  code            2    5[BANK0 ] int 
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;		None
  3665 ;; Return value:  Size  Location     Type
  3666 ;;                  1    wreg      void 
  3667 ;; Registers used:
  3668 ;;		wreg, status,2, status,0, cstack
  3669 ;; Tracked objects:
  3670 ;;		On entry : 0/0
  3671 ;;		On exit  : 0/0
  3672 ;;		Unchanged: 0/0
  3673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3674 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3677 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3678 ;;Total ram usage:        2 bytes
  3679 ;; Hardware stack levels used: 1
  3680 ;; Hardware stack levels required when called: 12
  3681 ;; This function calls:
  3682 ;;		_LCD_4bitCodeNoWait
  3683 ;;		_LCD_Wait
  3684 ;; This function is called by:
  3685 ;;		_LCD_Code
  3686 ;;		_LCD_Init
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690                           	psect	text28
  3691   0023F2                     __ptext28:
  3692                           	callstack 0
  3693   0023F2                     _LCD_4bitCode:
  3694                           	callstack 15
  3695   0023F2                     
  3696                           ;LCD-library/LCD-library.c: 73:     LCD_4bitCodeNoWait(code);
  3697   0023F2  C065  F060         	movff	LCD_4bitCode@code,LCD_4bitCodeNoWait@code
  3698   0023F6  C066  F061         	movff	LCD_4bitCode@code+1,LCD_4bitCodeNoWait@code+1
  3699   0023FA  ECB6  F00E         	call	_LCD_4bitCodeNoWait	;wreg free
  3700                           
  3701                           ;LCD-library/LCD-library.c: 74:     LCD_Wait();
  3702   0023FE  EC14  F012         	call	_LCD_Wait	;wreg free
  3703   002402  0012               	return		;funcret
  3704   002404                     __end_of_LCD_4bitCode:
  3705                           	callstack 0
  3706                           
  3707 ;; *************** function _LCD_Wait *****************
  3708 ;; Defined at:
  3709 ;;		line 11 in file "LCD-library/LCD-library.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;		None
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;		None
  3714 ;; Return value:  Size  Location     Type
  3715 ;;                  1    wreg      void 
  3716 ;; Registers used:
  3717 ;;		wreg, status,2, status,0, cstack
  3718 ;; Tracked objects:
  3719 ;;		On entry : 0/0
  3720 ;;		On exit  : 0/0
  3721 ;;		Unchanged: 0/0
  3722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3727 ;;Total ram usage:        0 bytes
  3728 ;; Hardware stack levels used: 1
  3729 ;; Hardware stack levels required when called: 11
  3730 ;; This function calls:
  3731 ;;		___delay
  3732 ;;		__delay_us
  3733 ;; This function is called by:
  3734 ;;		_LCD_8bitCode
  3735 ;;		_LCD_4bitCode
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739                           	psect	text29
  3740   002428                     __ptext29:
  3741                           	callstack 0
  3742   002428                     _LCD_Wait:
  3743                           	callstack 15
  3744   002428  0E01               	movlw	1
  3745   00242A  0100               	movlb	0	; () banked
  3746   00242C  6F61               	movwf	(__delay_us@us+1)& (0+255),b
  3747   00242E  0EF4               	movlw	244
  3748   002430  6F60               	movwf	__delay_us@us& (0+255),b
  3749   002432  EC20  F011         	call	__delay_us	;wreg free
  3750   002436  0012               	return		;funcret
  3751   002438                     __end_of_LCD_Wait:
  3752                           	callstack 0
  3753                           
  3754 ;; *************** function __delay_us *****************
  3755 ;; Defined at:
  3756 ;;		line 7 in file "LCD-library/LCD-library.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;  us              2    0[BANK0 ] int 
  3759 ;; Auto vars:     Size  Location     Type
  3760 ;;  i               2    3[BANK0 ] int 
  3761 ;; Return value:  Size  Location     Type
  3762 ;;                  1    wreg      void 
  3763 ;; Registers used:
  3764 ;;		wreg, status,2, status,0
  3765 ;; Tracked objects:
  3766 ;;		On entry : 0/0
  3767 ;;		On exit  : 0/0
  3768 ;;		Unchanged: 0/0
  3769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3770 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3771 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3772 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3773 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3774 ;;Total ram usage:        5 bytes
  3775 ;; Hardware stack levels used: 1
  3776 ;; Hardware stack levels required when called: 10
  3777 ;; This function calls:
  3778 ;;		Nothing
  3779 ;; This function is called by:
  3780 ;;		_LCD_Wait
  3781 ;;		_LCD_Init
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           	psect	text30
  3786   002240                     __ptext30:
  3787                           	callstack 0
  3788   002240                     __delay_us:
  3789                           	callstack 19
  3790   002240  0E00               	movlw	0
  3791   002242  0100               	movlb	0	; () banked
  3792   002244  6F64               	movwf	(__delay_us@i+1)& (0+255),b
  3793   002246  0E00               	movlw	0
  3794   002248  6F63               	movwf	__delay_us@i& (0+255),b
  3795   00224A  EF2D  F011         	goto	l3251
  3796   00224E                     l50:
  3797                           
  3798                           ; BSR set to: 0
  3799   00224E  D000               	nop2		;2 cycle nop
  3800   002250  D000               	nop2		;2 cycle nop
  3801   002252  D000               	nop2		;2 cycle nop
  3802   002254  0100               	movlb	0	; () banked
  3803   002256  4B63               	infsnz	__delay_us@i& (0+255),f,b
  3804   002258  2B64               	incf	(__delay_us@i+1)& (0+255),f,b
  3805   00225A                     l3251:
  3806                           
  3807                           ; BSR set to: 0
  3808   00225A  5160               	movf	__delay_us@us& (0+255),w,b
  3809   00225C  5D63               	subwf	__delay_us@i& (0+255),w,b
  3810   00225E  5164               	movf	(__delay_us@i+1)& (0+255),w,b
  3811   002260  0A80               	xorlw	128
  3812   002262  6F62               	movwf	??__delay_us& (0+255),b
  3813   002264  5161               	movf	(__delay_us@us+1)& (0+255),w,b
  3814   002266  0A80               	xorlw	128
  3815   002268  5962               	subwfb	??__delay_us& (0+255),w,b
  3816   00226A  A0D8               	btfss	status,0,c
  3817   00226C  EF3A  F011         	goto	u2281
  3818   002270  EF3C  F011         	goto	u2280
  3819   002274                     u2281:
  3820   002274  EF27  F011         	goto	l50
  3821   002278                     u2280:
  3822   002278                     
  3823                           ; BSR set to: 0
  3824   002278  0012               	return		;funcret
  3825   00227A                     __end_of__delay_us:
  3826                           	callstack 0
  3827                           
  3828 ;; *************** function ___delay *****************
  3829 ;; Defined at:
  3830 ;;		line 6 in file "LCD-library/LCD-library.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;  time            2    0[BANK0 ] int 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;  i               2    3[BANK0 ] int 
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  1    wreg      void 
  3837 ;; Registers used:
  3838 ;;		wreg, status,2, status,0
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3844 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3845 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3846 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3847 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3848 ;;Total ram usage:        5 bytes
  3849 ;; Hardware stack levels used: 1
  3850 ;; Hardware stack levels required when called: 10
  3851 ;; This function calls:
  3852 ;;		Nothing
  3853 ;; This function is called by:
  3854 ;;		_LCD_Wait
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858                           	psect	text31
  3859   0022E6                     __ptext31:
  3860                           	callstack 0
  3861   0022E6                     ___delay:
  3862                           	callstack 15
  3863   0022E6  0E00               	movlw	0
  3864   0022E8  0100               	movlb	0	; () banked
  3865   0022EA  6F64               	movwf	(___delay@i+1)& (0+255),b
  3866   0022EC  0E00               	movlw	0
  3867   0022EE  6F63               	movwf	___delay@i& (0+255),b
  3868   0022F0  EF7C  F011         	goto	l3245
  3869   0022F4                     l3243:
  3870                           
  3871                           ; BSR set to: 0
  3872   0022F4  4B63               	infsnz	___delay@i& (0+255),f,b
  3873   0022F6  2B64               	incf	(___delay@i+1)& (0+255),f,b
  3874   0022F8                     l3245:
  3875                           
  3876                           ; BSR set to: 0
  3877   0022F8  5160               	movf	___delay@time& (0+255),w,b
  3878   0022FA  5D63               	subwf	___delay@i& (0+255),w,b
  3879   0022FC  5164               	movf	(___delay@i+1)& (0+255),w,b
  3880   0022FE  0A80               	xorlw	128
  3881   002300  6F62               	movwf	??___delay& (0+255),b
  3882   002302  5161               	movf	(___delay@time+1)& (0+255),w,b
  3883   002304  0A80               	xorlw	128
  3884   002306  5962               	subwfb	??___delay& (0+255),w,b
  3885   002308  A0D8               	btfss	status,0,c
  3886   00230A  EF89  F011         	goto	u2271
  3887   00230E  EF8B  F011         	goto	u2270
  3888   002312                     u2271:
  3889   002312  EF7A  F011         	goto	l3243
  3890   002316                     u2270:
  3891   002316                     
  3892                           ; BSR set to: 0
  3893   002316  0012               	return		;funcret
  3894   002318                     __end_of___delay:
  3895                           	callstack 0
  3896                           
  3897 ;; *************** function _LCD_4bitCodeNoWait *****************
  3898 ;; Defined at:
  3899 ;;		line 64 in file "LCD-library/LCD-library.c"
  3900 ;; Parameters:    Size  Location     Type
  3901 ;;  code            2    0[BANK0 ] int 
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;		None
  3904 ;; Return value:  Size  Location     Type
  3905 ;;                  1    wreg      void 
  3906 ;; Registers used:
  3907 ;;		wreg, status,2, status,0
  3908 ;; Tracked objects:
  3909 ;;		On entry : 0/0
  3910 ;;		On exit  : 0/0
  3911 ;;		Unchanged: 0/0
  3912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3913 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3915 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3916 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3917 ;;Total ram usage:        5 bytes
  3918 ;; Hardware stack levels used: 1
  3919 ;; Hardware stack levels required when called: 10
  3920 ;; This function calls:
  3921 ;;		Nothing
  3922 ;; This function is called by:
  3923 ;;		_LCD_4bitCode
  3924 ;;		_LCD_Init
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928                           	psect	text32
  3929   001D6C                     __ptext32:
  3930                           	callstack 0
  3931   001D6C                     _LCD_4bitCodeNoWait:
  3932                           	callstack 16
  3933   001D6C                     
  3934                           ;LCD-library/LCD-library.c: 65:     PORTHbits.RH2 = (code & 0b100000) >> 5;
  3935   001D6C  C060  F062         	movff	LCD_4bitCodeNoWait@code,??_LCD_4bitCodeNoWait
  3936   001D70  C061  F063         	movff	LCD_4bitCodeNoWait@code+1,??_LCD_4bitCodeNoWait+1
  3937   001D74  0E05               	movlw	5
  3938   001D76  0100               	movlb	0	; () banked
  3939   001D78  6F64               	movwf	(??_LCD_4bitCodeNoWait+2)& (0+255),b
  3940   001D7A                     u2315:
  3941   001D7A  3563               	rlcf	(??_LCD_4bitCodeNoWait+1)& (0+255),w,b
  3942   001D7C  3363               	rrcf	(??_LCD_4bitCodeNoWait+1)& (0+255),f,b
  3943   001D7E  3362               	rrcf	??_LCD_4bitCodeNoWait& (0+255),f,b
  3944   001D80  2F64               	decfsz	(??_LCD_4bitCodeNoWait+2)& (0+255),f,b
  3945   001D82  EFBD  F00E         	goto	u2315
  3946   001D86  0E01               	movlw	1
  3947   001D88  1762               	andwf	??_LCD_4bitCodeNoWait& (0+255),f,b
  3948   001D8A  4762               	rlncf	??_LCD_4bitCodeNoWait& (0+255),f,b
  3949   001D8C  4762               	rlncf	??_LCD_4bitCodeNoWait& (0+255),f,b
  3950   001D8E  5087               	movf	135,w,c	;volatile
  3951   001D90  1962               	xorwf	??_LCD_4bitCodeNoWait& (0+255),w,b
  3952   001D92  0BFB               	andlw	-5
  3953   001D94  1962               	xorwf	??_LCD_4bitCodeNoWait& (0+255),w,b
  3954   001D96  6E87               	movwf	135,c	;volatile
  3955                           
  3956                           ;LCD-library/LCD-library.c: 66:     PORTHbits.RH1 = (code & 0b010000) >> 4;
  3957   001D98  C060  F062         	movff	LCD_4bitCodeNoWait@code,??_LCD_4bitCodeNoWait
  3958   001D9C  C061  F063         	movff	LCD_4bitCodeNoWait@code+1,??_LCD_4bitCodeNoWait+1
  3959   001DA0  0E04               	movlw	4
  3960   001DA2  6F64               	movwf	(??_LCD_4bitCodeNoWait+2)& (0+255),b
  3961   001DA4                     u2325:
  3962   001DA4  3563               	rlcf	(??_LCD_4bitCodeNoWait+1)& (0+255),w,b
  3963   001DA6  3363               	rrcf	(??_LCD_4bitCodeNoWait+1)& (0+255),f,b
  3964   001DA8  3362               	rrcf	??_LCD_4bitCodeNoWait& (0+255),f,b
  3965   001DAA  2F64               	decfsz	(??_LCD_4bitCodeNoWait+2)& (0+255),f,b
  3966   001DAC  EFD2  F00E         	goto	u2325
  3967   001DB0  0E01               	movlw	1
  3968   001DB2  1762               	andwf	??_LCD_4bitCodeNoWait& (0+255),f,b
  3969   001DB4  4762               	rlncf	??_LCD_4bitCodeNoWait& (0+255),f,b
  3970   001DB6  5087               	movf	135,w,c	;volatile
  3971   001DB8  1962               	xorwf	??_LCD_4bitCodeNoWait& (0+255),w,b
  3972   001DBA  0BFD               	andlw	-3
  3973   001DBC  1962               	xorwf	??_LCD_4bitCodeNoWait& (0+255),w,b
  3974   001DBE  6E87               	movwf	135,c	;volatile
  3975                           
  3976                           ;LCD-library/LCD-library.c: 67:     PORTE &= 0b00001111;
  3977   001DC0  0E0F               	movlw	15
  3978   001DC2  1684               	andwf	132,f,c	;volatile
  3979                           
  3980                           ;LCD-library/LCD-library.c: 68:     PORTE |= (code & 0b001111) << 4;
  3981   001DC4  C060  F062         	movff	LCD_4bitCodeNoWait@code,??_LCD_4bitCodeNoWait	;volatile
  3982   001DC8  0E0F               	movlw	15
  3983   001DCA  1762               	andwf	??_LCD_4bitCodeNoWait& (0+255),f,b
  3984   001DCC  3962               	swapf	??_LCD_4bitCodeNoWait& (0+255),w,b
  3985   001DCE  0BF0               	andlw	240
  3986   001DD0  1284               	iorwf	132,f,c	;volatile
  3987   001DD2                     
  3988                           ; BSR set to: 0
  3989                           ;LCD-library/LCD-library.c: 69:     PORTHbits.RH0 = 1;
  3990   001DD2  8087               	bsf	135,0,c	;volatile
  3991   001DD4                     
  3992                           ; BSR set to: 0
  3993                           ;LCD-library/LCD-library.c: 70:     PORTHbits.RH0 = 0;
  3994   001DD4  9087               	bcf	135,0,c	;volatile
  3995   001DD6                     
  3996                           ; BSR set to: 0
  3997   001DD6  0012               	return		;funcret
  3998   001DD8                     __end_of_LCD_4bitCodeNoWait:
  3999                           	callstack 0
  4000                           
  4001 ;; *************** function _EUSART1_Write *****************
  4002 ;; Defined at:
  4003 ;;		line 197 in file "mcc_generated_files/eusart1.c"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;  txData          1    wreg     unsigned char 
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;  txData          1    0[BANK0 ] unsigned char 
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  1    wreg      void 
  4010 ;; Registers used:
  4011 ;;		wreg
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4018 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4020 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4021 ;;Total ram usage:        1 bytes
  4022 ;; Hardware stack levels used: 1
  4023 ;; Hardware stack levels required when called: 10
  4024 ;; This function calls:
  4025 ;;		Nothing
  4026 ;; This function is called by:
  4027 ;;		_main
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           	psect	text33
  4032   00239C                     __ptext33:
  4033                           	callstack 0
  4034   00239C                     _EUSART1_Write:
  4035                           	callstack 20
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;incstack = 0
  4039                           ;EUSART1_Write@txData stored from wreg
  4040   00239C  0100               	movlb	0	; () banked
  4041   00239E  6F60               	movwf	EUSART1_Write@txData& (0+255),b
  4042   0023A0                     l400:
  4043                           
  4044                           ;mcc_generated_files/eusart1.c: 199:     while(0 == PIR1bits.TX1IF)
  4045   0023A0  A89E               	btfss	158,4,c	;volatile
  4046   0023A2  EFD5  F011         	goto	u2701
  4047   0023A6  EFD7  F011         	goto	u2700
  4048   0023AA                     u2701:
  4049   0023AA  EFD0  F011         	goto	l400
  4050   0023AE                     u2700:
  4051   0023AE                     
  4052                           ;mcc_generated_files/eusart1.c: 203:     TXREG1 = txData;
  4053   0023AE  C060  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
  4054   0023B2  0012               	return		;funcret
  4055   0023B4                     __end_of_EUSART1_Write:
  4056                           	callstack 0
  4057                           
  4058 ;; *************** function _ADC_GetConversion *****************
  4059 ;; Defined at:
  4060 ;;		line 109 in file "mcc_generated_files/adc.c"
  4061 ;; Parameters:    Size  Location     Type
  4062 ;;  channel         1    wreg     enum E4918
  4063 ;; Auto vars:     Size  Location     Type
  4064 ;;  channel         1    4[BANK0 ] enum E4918
  4065 ;; Return value:  Size  Location     Type
  4066 ;;                  2    0[BANK0 ] unsigned short 
  4067 ;; Registers used:
  4068 ;;		wreg, status,2, status,0
  4069 ;; Tracked objects:
  4070 ;;		On entry : 0/0
  4071 ;;		On exit  : 0/0
  4072 ;;		Unchanged: 0/0
  4073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4074 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4075 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4076 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4077 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4078 ;;Total ram usage:        5 bytes
  4079 ;; Hardware stack levels used: 1
  4080 ;; Hardware stack levels required when called: 10
  4081 ;; This function calls:
  4082 ;;		Nothing
  4083 ;; This function is called by:
  4084 ;;		_main
  4085 ;; This function uses a non-reentrant model
  4086 ;;
  4087                           
  4088                           	psect	text34
  4089   0021C0                     __ptext34:
  4090                           	callstack 0
  4091   0021C0                     _ADC_GetConversion:
  4092                           	callstack 20
  4093                           
  4094                           ;incstack = 0
  4095                           ;ADC_GetConversion@channel stored from wreg
  4096   0021C0  0100               	movlb	0	; () banked
  4097   0021C2  6F64               	movwf	ADC_GetConversion@channel& (0+255),b
  4098   0021C4                     
  4099                           ;mcc_generated_files/adc.c: 109: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 110: {;mcc_generated_files/adc.c: 112:     ADCON0bits.CHS = ch
      +                          annel;
  4100   0021C4  C064  F062         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  4101   0021C8  0100               	movlb	0	; () banked
  4102   0021CA  4762               	rlncf	??_ADC_GetConversion& (0+255),f,b
  4103   0021CC  4762               	rlncf	??_ADC_GetConversion& (0+255),f,b
  4104   0021CE  50C2               	movf	194,w,c	;volatile
  4105   0021D0  1962               	xorwf	??_ADC_GetConversion& (0+255),w,b
  4106   0021D2  0BC3               	andlw	-61
  4107   0021D4  1962               	xorwf	??_ADC_GetConversion& (0+255),w,b
  4108   0021D6  6EC2               	movwf	194,c	;volatile
  4109   0021D8                     
  4110                           ; BSR set to: 0
  4111                           ;mcc_generated_files/adc.c: 115:     ADCON0bits.ADON = 1;
  4112   0021D8  80C2               	bsf	194,0,c	;volatile
  4113   0021DA                     
  4114                           ; BSR set to: 0
  4115                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.GO_nDONE = 1;
  4116   0021DA  82C2               	bsf	194,1,c	;volatile
  4117   0021DC                     l538:
  4118                           
  4119                           ;mcc_generated_files/adc.c: 121:     while (ADCON0bits.GO_nDONE)
  4120   0021DC  B2C2               	btfsc	194,1,c	;volatile
  4121   0021DE  EFF3  F010         	goto	u2711
  4122   0021E2  EFF5  F010         	goto	u2710
  4123   0021E6                     u2711:
  4124   0021E6  EFEE  F010         	goto	l538
  4125   0021EA                     u2710:
  4126   0021EA                     
  4127                           ;mcc_generated_files/adc.c: 126:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  4128   0021EA  50C4               	movf	196,w,c	;volatile
  4129   0021EC  0100               	movlb	0	; () banked
  4130   0021EE  6F63               	movwf	(??_ADC_GetConversion+1)& (0+255),b
  4131   0021F0  6B62               	clrf	??_ADC_GetConversion& (0+255),b
  4132   0021F2  50C3               	movf	195,w,c	;volatile
  4133   0021F4  2562               	addwf	??_ADC_GetConversion& (0+255),w,b
  4134   0021F6  6F60               	movwf	?_ADC_GetConversion& (0+255),b
  4135   0021F8  0E00               	movlw	0
  4136   0021FA  2163               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
  4137   0021FC  6F61               	movwf	(?_ADC_GetConversion+1)& (0+255),b
  4138   0021FE                     
  4139                           ; BSR set to: 0
  4140   0021FE  0012               	return		;funcret
  4141   002200                     __end_of_ADC_GetConversion:
  4142                           	callstack 0
  4143                           
  4144 ;; *************** function _INTERRUPT_InterruptManager *****************
  4145 ;; Defined at:
  4146 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;		None
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;		None
  4151 ;; Return value:  Size  Location     Type
  4152 ;;                  1    wreg      void 
  4153 ;; Registers used:
  4154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4155 ;; Tracked objects:
  4156 ;;		On entry : 0/0
  4157 ;;		On exit  : 0/0
  4158 ;;		Unchanged: 0/0
  4159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4162 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4163 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4164 ;;Total ram usage:        6 bytes
  4165 ;; Hardware stack levels used: 1
  4166 ;; Hardware stack levels required when called: 9
  4167 ;; This function calls:
  4168 ;;		NULL
  4169 ;;		_PrintOnScreen
  4170 ;; This function is called by:
  4171 ;;		Interrupt level 2
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           	psect	intcode
  4176   000008                     __pintcode:
  4177                           	callstack 0
  4178   000008                     _INTERRUPT_InterruptManager:
  4179                           	callstack 13
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;incstack = 0
  4183   000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4184   00000A  CFFA F026          	movff	pclath,??_INTERRUPT_InterruptManager
  4185   00000E  CFFB F027          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  4186   000012  CFE1 F028          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
  4187   000016  CFE2 F029          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
  4188   00001A  CFD9 F02A          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
  4189   00001E  CFDA F02B          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
  4190   000022                     
  4191                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  4192   000022  ACF2               	btfss	242,6,c	;volatile
  4193   000024  EF16  F000         	goto	i2u217_41
  4194   000028  EF18  F000         	goto	i2u217_40
  4195   00002C                     i2u217_41:
  4196   00002C  EF33  F000         	goto	i2l457
  4197   000030                     i2u217_40:
  4198   000030                     
  4199                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.RC1IE == 1 && PIR1bits.RC1IF == 1)
  4200   000030  AA9D               	btfss	157,5,c	;volatile
  4201   000032  EF1D  F000         	goto	i2u218_41
  4202   000036  EF1F  F000         	goto	i2u218_40
  4203   00003A                     i2u218_41:
  4204   00003A  EF33  F000         	goto	i2l457
  4205   00003E                     i2u218_40:
  4206   00003E  AA9E               	btfss	158,5,c	;volatile
  4207   000040  EF24  F000         	goto	i2u219_41
  4208   000044  EF26  F000         	goto	i2u219_40
  4209   000048                     i2u219_41:
  4210   000048  EF33  F000         	goto	i2l457
  4211   00004C                     i2u219_40:
  4212   00004C                     
  4213                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART1_RxDefaultInterruptHandler();
  4214   00004C  D802               	call	i2u220_48
  4215   00004E  EF33  F000         	goto	i2u220_49
  4216   000052                     i2u220_48:
  4217   000052  0005               	push	
  4218   000054  6EFA               	movwf	pclath,c
  4219   000056  5053               	movf	_EUSART1_RxDefaultInterruptHandler^0,w,c
  4220   000058  6EFD               	movwf	tosl,c
  4221   00005A  5054               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^0,w,c
  4222   00005C  6EFE               	movwf	tosh,c
  4223   00005E  5055               	movf	(_EUSART1_RxDefaultInterruptHandler+2)^0,w,c
  4224   000060  6EFF               	movwf	tosu,c
  4225   000062  50FA               	movf	pclath,w,c
  4226   000064  0012               	return		;indir
  4227   000066                     i2u220_49:
  4228   000066                     i2l457:
  4229   000066  C02B  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
  4230   00006A  C02A  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
  4231   00006E  C029  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
  4232   000072  C028  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
  4233   000076  C027  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  4234   00007A  C026  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  4235   00007E  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4236   000080  0011               	retfie		f
  4237   000082                     __end_of_INTERRUPT_InterruptManager:
  4238                           	callstack 0
  4239                           
  4240 ;; *************** function _PrintOnScreen *****************
  4241 ;; Defined at:
  4242 ;;		line 83 in file "mcc_generated_files/eusart1.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;		None
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;  i               2   35[COMRAM] int 
  4247 ;;  len             2   31[COMRAM] int 
  4248 ;;  length          1   34[COMRAM] unsigned char 
  4249 ;;  received        1   33[COMRAM] unsigned char 
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  1    wreg      void 
  4252 ;; Registers used:
  4253 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4260 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4261 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4262 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4263 ;;Total ram usage:        8 bytes
  4264 ;; Hardware stack levels used: 1
  4265 ;; Hardware stack levels required when called: 8
  4266 ;; This function calls:
  4267 ;;		_EUSART1_Read
  4268 ;;		_EUSART1_Receive_ISR
  4269 ;;		_LCD_Clear
  4270 ;;		_LCD_PrintStr
  4271 ;;		_strlen
  4272 ;; This function is called by:
  4273 ;;		_EUSART1_Initialize
  4274 ;;		_INTERRUPT_InterruptManager
  4275 ;; This function uses a non-reentrant model
  4276 ;;
  4277                           
  4278                           	psect	text36
  4279   001006                     __ptext36:
  4280                           	callstack 0
  4281   001006                     _PrintOnScreen:
  4282                           	callstack 13
  4283   001006                     
  4284                           ;mcc_generated_files/eusart1.c: 84:     EUSART1_Receive_ISR();
  4285   001006  ECFA  F00C         	call	_EUSART1_Receive_ISR	;wreg free
  4286   00100A                     
  4287                           ;mcc_generated_files/eusart1.c: 85:     char received = EUSART1_Read();
  4288   00100A  EC9C  F00F         	call	_EUSART1_Read	;wreg free
  4289   00100E  6E22               	movwf	PrintOnScreen@received^0,c
  4290   001010                     
  4291                           ;mcc_generated_files/eusart1.c: 86:     if (received == 3){
  4292   001010  0E03               	movlw	3
  4293   001012  1822               	xorwf	PrintOnScreen@received^0,w,c
  4294   001014  A4D8               	btfss	status,2,c
  4295   001016  EF0F  F008         	goto	i2u190_41
  4296   00101A  EF11  F008         	goto	i2u190_40
  4297   00101E                     i2u190_41:
  4298   00101E  EFC1  F008         	goto	i2l2999
  4299   001022                     i2u190_40:
  4300   001022                     
  4301                           ;mcc_generated_files/eusart1.c: 87:         if (command[0] == 'l'){
  4302   001022  0E6C               	movlw	108
  4303   001024  0100               	movlb	0	; () banked
  4304   001026  19C0               	xorwf	_command& (0+255),w,b
  4305   001028  A4D8               	btfss	status,2,c
  4306   00102A  EF19  F008         	goto	i2u191_41
  4307   00102E  EF1B  F008         	goto	i2u191_40
  4308   001032                     i2u191_41:
  4309   001032  EF62  F008         	goto	i2l2983
  4310   001036                     i2u191_40:
  4311   001036                     
  4312                           ; BSR set to: 0
  4313                           ;mcc_generated_files/eusart1.c: 88:             int len = strlen(command);
  4314   001036  0EC0               	movlw	low _command
  4315   001038  6E01               	movwf	strlen@s^0,c
  4316   00103A  0E00               	movlw	high _command
  4317   00103C  6E02               	movwf	(strlen@s+1)^0,c
  4318   00103E  EC3D  F011         	call	_strlen	;wreg free
  4319   001042  C001  F020         	movff	?_strlen,PrintOnScreen@len
  4320   001046  C002  F021         	movff	?_strlen+1,PrintOnScreen@len+1
  4321   00104A                     
  4322                           ;mcc_generated_files/eusart1.c: 89:             for (int i = 0; i < len; i++){
  4323   00104A  0E00               	movlw	0
  4324   00104C  6E25               	movwf	(PrintOnScreen@i+1)^0,c
  4325   00104E  0E00               	movlw	0
  4326   001050  6E24               	movwf	PrintOnScreen@i^0,c
  4327   001052  EF3B  F008         	goto	i2l2975
  4328   001056                     i2l2971:
  4329                           
  4330                           ;mcc_generated_files/eusart1.c: 90:                 command[i] = command[i + 1];
  4331   001056  0EC1               	movlw	low (_command+1)
  4332   001058  2424               	addwf	PrintOnScreen@i^0,w,c
  4333   00105A  6ED9               	movwf	fsr2l,c
  4334   00105C  0E00               	movlw	high (_command+1)
  4335   00105E  2025               	addwfc	(PrintOnScreen@i+1)^0,w,c
  4336   001060  6EDA               	movwf	fsr2h,c
  4337   001062  0EC0               	movlw	low _command
  4338   001064  2424               	addwf	PrintOnScreen@i^0,w,c
  4339   001066  6EE1               	movwf	fsr1l,c
  4340   001068  0E00               	movlw	high _command
  4341   00106A  2025               	addwfc	(PrintOnScreen@i+1)^0,w,c
  4342   00106C  6EE2               	movwf	fsr1h,c
  4343   00106E  CFDF FFE7          	movff	indf2,indf1
  4344   001072                     
  4345                           ;mcc_generated_files/eusart1.c: 91:             }
  4346   001072  4A24               	infsnz	PrintOnScreen@i^0,f,c
  4347   001074  2A25               	incf	(PrintOnScreen@i+1)^0,f,c
  4348   001076                     i2l2975:
  4349   001076  5020               	movf	PrintOnScreen@len^0,w,c
  4350   001078  5C24               	subwf	PrintOnScreen@i^0,w,c
  4351   00107A  5025               	movf	(PrintOnScreen@i+1)^0,w,c
  4352   00107C  0A80               	xorlw	128
  4353   00107E  6E1E               	movwf	??_PrintOnScreen^0,c
  4354   001080  5021               	movf	(PrintOnScreen@len+1)^0,w,c
  4355   001082  0A80               	xorlw	128
  4356   001084  581E               	subwfb	??_PrintOnScreen^0,w,c
  4357   001086  A0D8               	btfss	status,0,c
  4358   001088  EF48  F008         	goto	i2u192_41
  4359   00108C  EF4A  F008         	goto	i2u192_40
  4360   001090                     i2u192_41:
  4361   001090  EF2B  F008         	goto	i2l2971
  4362   001094                     i2u192_40:
  4363   001094                     
  4364                           ;mcc_generated_files/eusart1.c: 92:             LCD_Clear();
  4365   001094  ECA4  F011         	call	_LCD_Clear	;wreg free
  4366   001098                     
  4367                           ;mcc_generated_files/eusart1.c: 93:             LCD_PrintStr(command);
  4368   001098  0EC0               	movlw	low _command
  4369   00109A  6E15               	movwf	LCD_PrintStr@str^0,c
  4370   00109C  0E00               	movlw	high _command
  4371   00109E  6E16               	movwf	(LCD_PrintStr@str+1)^0,c
  4372   0010A0  ECDF  F00A         	call	_LCD_PrintStr	;wreg free
  4373   0010A4                     
  4374                           ;mcc_generated_files/eusart1.c: 94:             command[strlen(command) - 1] = ' ';
  4375   0010A4  0EC0               	movlw	low _command
  4376   0010A6  6E01               	movwf	strlen@s^0,c
  4377   0010A8  0E00               	movlw	high _command
  4378   0010AA  6E02               	movwf	(strlen@s+1)^0,c
  4379   0010AC  EC3D  F011         	call	_strlen	;wreg free
  4380   0010B0  0EBF               	movlw	low (_command+65535)
  4381   0010B2  2401               	addwf	?_strlen^0,w,c
  4382   0010B4  6ED9               	movwf	fsr2l,c
  4383   0010B6  0E00               	movlw	high (_command+65535)
  4384   0010B8  2002               	addwfc	(?_strlen+1)^0,w,c
  4385   0010BA  6EDA               	movwf	fsr2h,c
  4386   0010BC  0E20               	movlw	32
  4387   0010BE  6EDF               	movwf	indf2,c
  4388                           
  4389                           ;mcc_generated_files/eusart1.c: 95:         }
  4390   0010C0  EFBC  F008         	goto	i2l2997
  4391   0010C4                     i2l2983:
  4392                           
  4393                           ; BSR set to: 0
  4394   0010C4  0E64               	movlw	100
  4395   0010C6  19C0               	xorwf	_command& (0+255),w,b
  4396   0010C8  A4D8               	btfss	status,2,c
  4397   0010CA  EF69  F008         	goto	i2u193_41
  4398   0010CE  EF6B  F008         	goto	i2u193_40
  4399   0010D2                     i2u193_41:
  4400   0010D2  EFBC  F008         	goto	i2l2997
  4401   0010D6                     i2u193_40:
  4402   0010D6  EFA3  F008         	goto	i2l2995
  4403   0010DA                     i2l2987:
  4404                           
  4405                           ; BSR set to: 0
  4406                           ;mcc_generated_files/eusart1.c: 99:                     PORTJbits.RJ0 = !PORTJbits.RJ0;
  4407   0010DA  A088               	btfss	136,0,c	;volatile
  4408   0010DC  EF72  F008         	goto	i2u194_41
  4409   0010E0  EF76  F008         	goto	i2u194_40
  4410   0010E4                     i2u194_41:
  4411   0010E4  6A1E               	clrf	??_PrintOnScreen^0,c
  4412   0010E6  2A1E               	incf	??_PrintOnScreen^0,f,c
  4413   0010E8  EF77  F008         	goto	i2u195_48
  4414   0010EC                     i2u194_40:
  4415   0010EC  6A1E               	clrf	??_PrintOnScreen^0,c
  4416   0010EE                     i2u195_48:
  4417   0010EE  5088               	movf	136,w,c	;volatile
  4418   0010F0  181E               	xorwf	??_PrintOnScreen^0,w,c
  4419   0010F2  0BFE               	andlw	-2
  4420   0010F4  181E               	xorwf	??_PrintOnScreen^0,w,c
  4421   0010F6  6E88               	movwf	136,c	;volatile
  4422                           
  4423                           ;mcc_generated_files/eusart1.c: 100:                     break;
  4424   0010F8  EFBC  F008         	goto	i2l2997
  4425   0010FC                     i2l2989:
  4426                           
  4427                           ; BSR set to: 0
  4428                           ;mcc_generated_files/eusart1.c: 102:                     PORTJbits.RJ1 = !PORTJbits.RJ1;
  4429   0010FC  A288               	btfss	136,1,c	;volatile
  4430   0010FE  EF83  F008         	goto	i2u196_41
  4431   001102  EF87  F008         	goto	i2u196_40
  4432   001106                     i2u196_41:
  4433   001106  6A1E               	clrf	??_PrintOnScreen^0,c
  4434   001108  2A1E               	incf	??_PrintOnScreen^0,f,c
  4435   00110A  EF88  F008         	goto	i2u197_48
  4436   00110E                     i2u196_40:
  4437   00110E  6A1E               	clrf	??_PrintOnScreen^0,c
  4438   001110                     i2u197_48:
  4439   001110  461E               	rlncf	??_PrintOnScreen^0,f,c
  4440   001112  5088               	movf	136,w,c	;volatile
  4441   001114  181E               	xorwf	??_PrintOnScreen^0,w,c
  4442   001116  0BFD               	andlw	-3
  4443   001118  181E               	xorwf	??_PrintOnScreen^0,w,c
  4444   00111A  6E88               	movwf	136,c	;volatile
  4445                           
  4446                           ;mcc_generated_files/eusart1.c: 103:                     break;
  4447   00111C  EFBC  F008         	goto	i2l2997
  4448   001120                     i2l2991:
  4449                           
  4450                           ; BSR set to: 0
  4451                           ;mcc_generated_files/eusart1.c: 105:                     PORTJbits.RJ2 = !PORTJbits.RJ2;
  4452   001120  A488               	btfss	136,2,c	;volatile
  4453   001122  EF95  F008         	goto	i2u198_41
  4454   001126  EF99  F008         	goto	i2u198_40
  4455   00112A                     i2u198_41:
  4456   00112A  6A1E               	clrf	??_PrintOnScreen^0,c
  4457   00112C  2A1E               	incf	??_PrintOnScreen^0,f,c
  4458   00112E  EF9A  F008         	goto	i2u199_48
  4459   001132                     i2u198_40:
  4460   001132  6A1E               	clrf	??_PrintOnScreen^0,c
  4461   001134                     i2u199_48:
  4462   001134  461E               	rlncf	??_PrintOnScreen^0,f,c
  4463   001136  461E               	rlncf	??_PrintOnScreen^0,f,c
  4464   001138  5088               	movf	136,w,c	;volatile
  4465   00113A  181E               	xorwf	??_PrintOnScreen^0,w,c
  4466   00113C  0BFB               	andlw	-5
  4467   00113E  181E               	xorwf	??_PrintOnScreen^0,w,c
  4468   001140  6E88               	movwf	136,c	;volatile
  4469                           
  4470                           ;mcc_generated_files/eusart1.c: 106:                     break;
  4471   001142  EFBC  F008         	goto	i2l2997
  4472   001146                     i2l2995:
  4473                           
  4474                           ; BSR set to: 0
  4475   001146  51C1               	movf	(_command+1)& (0+255),w,b
  4476   001148  6E1E               	movwf	??_PrintOnScreen^0,c
  4477   00114A  6A1F               	clrf	(??_PrintOnScreen+1)^0,c
  4478                           
  4479                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4480                           ; Switch size 1, requested type "simple"
  4481                           ; Number of cases is 1, Range of values is 0 to 0
  4482                           ; switch strategies available:
  4483                           ; Name         Instructions Cycles
  4484                           ; simple_byte            4     3 (average)
  4485                           ;	Chosen strategy is simple_byte
  4486   00114C  501F               	movf	(??_PrintOnScreen+1)^0,w,c
  4487   00114E  0A00               	xorlw	0	; case 0
  4488   001150  B4D8               	btfsc	status,2,c
  4489   001152  EFAD  F008         	goto	i2l3871
  4490   001156  EFBC  F008         	goto	i2l2997
  4491   00115A                     i2l3871:
  4492                           
  4493                           ; BSR set to: 0
  4494                           ; Switch size 1, requested type "simple"
  4495                           ; Number of cases is 3, Range of values is 49 to 51
  4496                           ; switch strategies available:
  4497                           ; Name         Instructions Cycles
  4498                           ; simple_byte           10     6 (average)
  4499                           ;	Chosen strategy is simple_byte
  4500   00115A  501E               	movf	??_PrintOnScreen^0,w,c
  4501   00115C  0A31               	xorlw	49	; case 49
  4502   00115E  B4D8               	btfsc	status,2,c
  4503   001160  EF6D  F008         	goto	i2l2987
  4504   001164  0A03               	xorlw	3	; case 50
  4505   001166  B4D8               	btfsc	status,2,c
  4506   001168  EF7E  F008         	goto	i2l2989
  4507   00116C  0A01               	xorlw	1	; case 51
  4508   00116E  B4D8               	btfsc	status,2,c
  4509   001170  EF90  F008         	goto	i2l2991
  4510   001174  EFBC  F008         	goto	i2l2997
  4511   001178                     i2l2997:
  4512                           
  4513                           ;mcc_generated_files/eusart1.c: 109:         command[0] = '\0';
  4514   001178  0E00               	movlw	0
  4515   00117A  0100               	movlb	0	; () banked
  4516   00117C  6FC0               	movwf	_command& (0+255),b
  4517                           
  4518                           ;mcc_generated_files/eusart1.c: 110:     }
  4519   00117E  EFD8  F008         	goto	i2l373
  4520   001182                     i2l2999:
  4521                           
  4522                           ;mcc_generated_files/eusart1.c: 112:         uint8_t length = strlen(command);
  4523   001182  0EC0               	movlw	low _command
  4524   001184  6E01               	movwf	strlen@s^0,c
  4525   001186  0E00               	movlw	high _command
  4526   001188  6E02               	movwf	(strlen@s+1)^0,c
  4527   00118A  EC3D  F011         	call	_strlen	;wreg free
  4528   00118E  5001               	movf	?_strlen^0,w,c
  4529   001190  6E23               	movwf	PrintOnScreen@length^0,c
  4530   001192                     
  4531                           ;mcc_generated_files/eusart1.c: 113:         command[length] = received;
  4532   001192  0EC0               	movlw	low _command
  4533   001194  2423               	addwf	PrintOnScreen@length^0,w,c
  4534   001196  6ED9               	movwf	fsr2l,c
  4535   001198  6ADA               	clrf	fsr2h,c
  4536   00119A  0E00               	movlw	high _command
  4537   00119C  22DA               	addwfc	fsr2h,f,c
  4538   00119E  C022  FFDF         	movff	PrintOnScreen@received,indf2
  4539   0011A2                     
  4540                           ;mcc_generated_files/eusart1.c: 114:         command[length + 1] = '\0';
  4541   0011A2  0EC1               	movlw	low (_command+1)
  4542   0011A4  2423               	addwf	PrintOnScreen@length^0,w,c
  4543   0011A6  6ED9               	movwf	fsr2l,c
  4544   0011A8  6ADA               	clrf	fsr2h,c
  4545   0011AA  0E00               	movlw	high (_command+1)
  4546   0011AC  22DA               	addwfc	fsr2h,f,c
  4547   0011AE  6ADF               	clrf	indf2,c
  4548   0011B0                     i2l373:
  4549   0011B0  0012               	return		;funcret
  4550   0011B2                     __end_of_PrintOnScreen:
  4551                           	callstack 0
  4552                           
  4553 ;; *************** function _LCD_PrintStr *****************
  4554 ;; Defined at:
  4555 ;;		line 151 in file "LCD-library/LCD-library.c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;  str             2   20[COMRAM] PTR const unsigned char 
  4558 ;;		 -> command(35), LCD_PrintNum@strNumber(20), 
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;  i               2   27[COMRAM] int 
  4561 ;;  initialY        2   25[COMRAM] int 
  4562 ;;  initialX        2   23[COMRAM] int 
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  1    wreg      void 
  4565 ;; Registers used:
  4566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4572 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4573 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4574 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4575 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4576 ;;Total ram usage:        9 bytes
  4577 ;; Hardware stack levels used: 1
  4578 ;; Hardware stack levels required when called: 7
  4579 ;; This function calls:
  4580 ;;		_LCD_MoveCursorLeft
  4581 ;;		_LCD_MoveCursorRight
  4582 ;;		_LCD_PrintChar
  4583 ;;		_strlen
  4584 ;;		i2_LCD_SetCursorAt
  4585 ;; This function is called by:
  4586 ;;		_PrintOnScreen
  4587 ;;		_LCD_PrintNum
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           	psect	text37
  4592   0015BE                     __ptext37:
  4593                           	callstack 0
  4594   0015BE                     _LCD_PrintStr:
  4595                           	callstack 13
  4596   0015BE                     
  4597                           ;LCD-library/LCD-library.c: 153:     int initialX = LCD_posX;
  4598   0015BE  C051  F018         	movff	_LCD_posX,LCD_PrintStr@initialX
  4599   0015C2  C052  F019         	movff	_LCD_posX+1,LCD_PrintStr@initialX+1
  4600                           
  4601                           ;LCD-library/LCD-library.c: 154:     int initialY = LCD_posY;
  4602   0015C6  C04F  F01A         	movff	_LCD_posY,LCD_PrintStr@initialY
  4603   0015CA  C050  F01B         	movff	_LCD_posY+1,LCD_PrintStr@initialY+1
  4604   0015CE                     
  4605                           ;LCD-library/LCD-library.c: 156:     for(int i = 0; i < strlen(str); i++) {
  4606   0015CE  0E00               	movlw	0
  4607   0015D0  6E1D               	movwf	(LCD_PrintStr@i+1)^0,c
  4608   0015D2  0E00               	movlw	0
  4609   0015D4  6E1C               	movwf	LCD_PrintStr@i^0,c
  4610   0015D6  EF35  F00B         	goto	i2l2791
  4611   0015DA                     i2l2773:
  4612                           
  4613                           ;LCD-library/LCD-library.c: 157:         if (str[i] == '\r'){
  4614   0015DA  501C               	movf	LCD_PrintStr@i^0,w,c
  4615   0015DC  2415               	addwf	LCD_PrintStr@str^0,w,c
  4616   0015DE  6ED9               	movwf	fsr2l,c
  4617   0015E0  501D               	movf	(LCD_PrintStr@i+1)^0,w,c
  4618   0015E2  2016               	addwfc	(LCD_PrintStr@str+1)^0,w,c
  4619   0015E4  6EDA               	movwf	fsr2h,c
  4620   0015E6  0E0D               	movlw	13
  4621   0015E8  18DE               	xorwf	postinc2,w,c
  4622   0015EA  A4D8               	btfss	status,2,c
  4623   0015EC  EFFA  F00A         	goto	i2u173_41
  4624   0015F0  EFFC  F00A         	goto	i2u173_40
  4625   0015F4                     i2u173_41:
  4626   0015F4  EF0A  F00B         	goto	i2l2779
  4627   0015F8                     i2u173_40:
  4628   0015F8                     
  4629                           ;LCD-library/LCD-library.c: 158:             LCD_SetCursorAt(1, 2);
  4630   0015F8  0E00               	movlw	0
  4631   0015FA  6E0B               	movwf	(i2LCD_SetCursorAt@pos+1)^0,c
  4632   0015FC  0E01               	movlw	1
  4633   0015FE  6E0A               	movwf	i2LCD_SetCursorAt@pos^0,c
  4634   001600  0E00               	movlw	0
  4635   001602  6E0D               	movwf	(i2LCD_SetCursorAt@row+1)^0,c
  4636   001604  0E02               	movlw	2
  4637   001606  6E0C               	movwf	i2LCD_SetCursorAt@row^0,c
  4638   001608  ECC6  F00B         	call	i2_LCD_SetCursorAt	;wreg free
  4639   00160C                     
  4640                           ;LCD-library/LCD-library.c: 159:             i++;
  4641   00160C  4A1C               	infsnz	LCD_PrintStr@i^0,f,c
  4642   00160E  2A1D               	incf	(LCD_PrintStr@i+1)^0,f,c
  4643                           
  4644                           ;LCD-library/LCD-library.c: 160:         }
  4645   001610  EF33  F00B         	goto	i2l2789
  4646   001614                     i2l2779:
  4647                           
  4648                           ;LCD-library/LCD-library.c: 162:             LCD_PrintChar(str[i]);
  4649   001614  501C               	movf	LCD_PrintStr@i^0,w,c
  4650   001616  2415               	addwf	LCD_PrintStr@str^0,w,c
  4651   001618  6ED9               	movwf	fsr2l,c
  4652   00161A  501D               	movf	(LCD_PrintStr@i+1)^0,w,c
  4653   00161C  2016               	addwfc	(LCD_PrintStr@str+1)^0,w,c
  4654   00161E  6EDA               	movwf	fsr2h,c
  4655   001620  50DF               	movf	indf2,w,c
  4656   001622  EC43  F00E         	call	_LCD_PrintChar
  4657   001626                     
  4658                           ;LCD-library/LCD-library.c: 164:             if(!LCD_isCursorMoving) {
  4659   001626  5047               	movf	_LCD_isCursorMoving^0,w,c
  4660   001628  1048               	iorwf	(_LCD_isCursorMoving+1)^0,w,c
  4661   00162A  A4D8               	btfss	status,2,c
  4662   00162C  EF1A  F00B         	goto	i2u174_41
  4663   001630  EF1C  F00B         	goto	i2u174_40
  4664   001634                     i2u174_41:
  4665   001634  EF33  F00B         	goto	i2l2789
  4666   001638                     i2u174_40:
  4667   001638                     
  4668                           ;LCD-library/LCD-library.c: 165:                 if(LCD_isIncrement) LCD_MoveCursorRight
      +                          (1);
  4669   001638  504D               	movf	_LCD_isIncrement^0,w,c
  4670   00163A  104E               	iorwf	(_LCD_isIncrement+1)^0,w,c
  4671   00163C  B4D8               	btfsc	status,2,c
  4672   00163E  EF23  F00B         	goto	i2u175_41
  4673   001642  EF25  F00B         	goto	i2u175_40
  4674   001646                     i2u175_41:
  4675   001646  EF2D  F00B         	goto	i2l2787
  4676   00164A                     i2u175_40:
  4677   00164A  0E00               	movlw	0
  4678   00164C  6E11               	movwf	(LCD_MoveCursorRight@howMuch+1)^0,c
  4679   00164E  0E01               	movlw	1
  4680   001650  6E10               	movwf	LCD_MoveCursorRight@howMuch^0,c
  4681   001652  EC59  F010         	call	_LCD_MoveCursorRight	;wreg free
  4682   001656  EF33  F00B         	goto	i2l2789
  4683   00165A                     i2l2787:
  4684   00165A  0E00               	movlw	0
  4685   00165C  6E11               	movwf	(LCD_MoveCursorLeft@howMuch+1)^0,c
  4686   00165E  0E01               	movlw	1
  4687   001660  6E10               	movwf	LCD_MoveCursorLeft@howMuch^0,c
  4688   001662  EC7C  F010         	call	_LCD_MoveCursorLeft	;wreg free
  4689   001666                     i2l2789:
  4690                           
  4691                           ;LCD-library/LCD-library.c: 169:     }
  4692   001666  4A1C               	infsnz	LCD_PrintStr@i^0,f,c
  4693   001668  2A1D               	incf	(LCD_PrintStr@i+1)^0,f,c
  4694   00166A                     i2l2791:
  4695   00166A  C015  F001         	movff	LCD_PrintStr@str,strlen@s
  4696   00166E  C016  F002         	movff	LCD_PrintStr@str+1,strlen@s+1
  4697   001672  EC3D  F011         	call	_strlen	;wreg free
  4698   001676  5001               	movf	?_strlen^0,w,c
  4699   001678  5C1C               	subwf	LCD_PrintStr@i^0,w,c
  4700   00167A  5002               	movf	(?_strlen+1)^0,w,c
  4701   00167C  581D               	subwfb	(LCD_PrintStr@i+1)^0,w,c
  4702   00167E  A0D8               	btfss	status,0,c
  4703   001680  EF44  F00B         	goto	i2u176_41
  4704   001684  EF46  F00B         	goto	i2u176_40
  4705   001688                     i2u176_41:
  4706   001688  EFED  F00A         	goto	i2l2773
  4707   00168C                     i2u176_40:
  4708   00168C                     
  4709                           ;LCD-library/LCD-library.c: 171:     if(!LCD_isCursorMoving) LCD_SetCursorAt(initialX, i
      +                          nitialY);
  4710   00168C  5047               	movf	_LCD_isCursorMoving^0,w,c
  4711   00168E  1048               	iorwf	(_LCD_isCursorMoving+1)^0,w,c
  4712   001690  A4D8               	btfss	status,2,c
  4713   001692  EF4D  F00B         	goto	i2u177_41
  4714   001696  EF4F  F00B         	goto	i2u177_40
  4715   00169A                     i2u177_41:
  4716   00169A  EF59  F00B         	goto	i2l132
  4717   00169E                     i2u177_40:
  4718   00169E  C018  F00A         	movff	LCD_PrintStr@initialX,i2LCD_SetCursorAt@pos
  4719   0016A2  C019  F00B         	movff	LCD_PrintStr@initialX+1,i2LCD_SetCursorAt@pos+1
  4720   0016A6  C01A  F00C         	movff	LCD_PrintStr@initialY,i2LCD_SetCursorAt@row
  4721   0016AA  C01B  F00D         	movff	LCD_PrintStr@initialY+1,i2LCD_SetCursorAt@row+1
  4722   0016AE  ECC6  F00B         	call	i2_LCD_SetCursorAt	;wreg free
  4723   0016B2                     i2l132:
  4724   0016B2  0012               	return		;funcret
  4725   0016B4                     __end_of_LCD_PrintStr:
  4726                           	callstack 0
  4727                           
  4728 ;; *************** function _strlen *****************
  4729 ;; Defined at:
  4730 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strlen.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4733 ;;		 -> command(35), LCD_PrintNum@strNumber(20), 
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4736 ;;		 -> command(35), LCD_PrintNum@strNumber(20), 
  4737 ;; Return value:  Size  Location     Type
  4738 ;;                  2    0[COMRAM] unsigned int 
  4739 ;; Registers used:
  4740 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4746 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4747 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4749 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4750 ;;Total ram usage:        4 bytes
  4751 ;; Hardware stack levels used: 1
  4752 ;; This function calls:
  4753 ;;		Nothing
  4754 ;; This function is called by:
  4755 ;;		_LCD_PrintStr
  4756 ;;		_PrintOnScreen
  4757 ;;		_LCD_TypeStr
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           	psect	text38
  4762   00227A                     __ptext38:
  4763                           	callstack 0
  4764   00227A                     _strlen:
  4765                           	callstack 20
  4766   00227A  C001  F003         	movff	strlen@s,strlen@a
  4767   00227E  C002  F004         	movff	strlen@s+1,strlen@a+1
  4768   002282  EF45  F011         	goto	i2l2685
  4769   002286                     i2l2683:
  4770   002286  4A01               	infsnz	strlen@s^0,f,c
  4771   002288  2A02               	incf	(strlen@s+1)^0,f,c
  4772   00228A                     i2l2685:
  4773   00228A  C001  FFD9         	movff	strlen@s,fsr2l
  4774   00228E  C002  FFDA         	movff	strlen@s+1,fsr2h
  4775   002292  50DF               	movf	indf2,w,c
  4776   002294  A4D8               	btfss	status,2,c
  4777   002296  EF4F  F011         	goto	i2u163_41
  4778   00229A  EF51  F011         	goto	i2u163_40
  4779   00229E                     i2u163_41:
  4780   00229E  EF43  F011         	goto	i2l2683
  4781   0022A2                     i2u163_40:
  4782   0022A2  5003               	movf	strlen@a^0,w,c
  4783   0022A4  5C01               	subwf	strlen@s^0,w,c
  4784   0022A6  6E01               	movwf	?_strlen^0,c
  4785   0022A8  5004               	movf	(strlen@a+1)^0,w,c
  4786   0022AA  5802               	subwfb	(strlen@s+1)^0,w,c
  4787   0022AC  6E02               	movwf	(?_strlen+1)^0,c
  4788   0022AE  0012               	return		;funcret
  4789   0022B0                     __end_of_strlen:
  4790                           	callstack 0
  4791                           
  4792 ;; *************** function _LCD_PrintChar *****************
  4793 ;; Defined at:
  4794 ;;		line 139 in file "LCD-library/LCD-library.c"
  4795 ;; Parameters:    Size  Location     Type
  4796 ;;  inputChar       1    wreg     unsigned char 
  4797 ;; Auto vars:     Size  Location     Type
  4798 ;;  inputChar       1   19[COMRAM] unsigned char 
  4799 ;; Return value:  Size  Location     Type
  4800 ;;                  1    wreg      void 
  4801 ;; Registers used:
  4802 ;;		wreg, status,2, status,0, cstack
  4803 ;; Tracked objects:
  4804 ;;		On entry : 0/0
  4805 ;;		On exit  : 0/0
  4806 ;;		Unchanged: 0/0
  4807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4809 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4811 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4812 ;;Total ram usage:        1 bytes
  4813 ;; Hardware stack levels used: 1
  4814 ;; Hardware stack levels required when called: 6
  4815 ;; This function calls:
  4816 ;;		_LCD_MoveCursorLeft
  4817 ;;		_LCD_MoveCursorRight
  4818 ;;		i2_LCD_Code
  4819 ;; This function is called by:
  4820 ;;		_LCD_PrintStr
  4821 ;;		_LCD_TypeStr
  4822 ;; This function uses a non-reentrant model
  4823 ;;
  4824                           
  4825                           	psect	text39
  4826   001C86                     __ptext39:
  4827                           	callstack 0
  4828   001C86                     _LCD_PrintChar:
  4829                           	callstack 13
  4830                           
  4831                           ;incstack = 0
  4832                           ;LCD_PrintChar@inputChar stored from wreg
  4833   001C86  6E14               	movwf	LCD_PrintChar@inputChar^0,c
  4834   001C88                     
  4835                           ;LCD-library/LCD-library.c: 140:     LCD_Code(0b1000000000 + inputChar);
  4836   001C88  0E00               	movlw	0
  4837   001C8A  2414               	addwf	LCD_PrintChar@inputChar^0,w,c
  4838   001C8C  6E08               	movwf	i2LCD_Code@code^0,c
  4839   001C8E  6A09               	clrf	(i2LCD_Code@code+1)^0,c
  4840   001C90  0E02               	movlw	2
  4841   001C92  2209               	addwfc	(i2LCD_Code@code+1)^0,f,c
  4842   001C94  EC3F  F012         	call	i2_LCD_Code	;wreg free
  4843   001C98                     
  4844                           ;LCD-library/LCD-library.c: 142:     if(LCD_isIncrement) LCD_posX++; else LCD_posX--;
  4845   001C98  504D               	movf	_LCD_isIncrement^0,w,c
  4846   001C9A  104E               	iorwf	(_LCD_isIncrement+1)^0,w,c
  4847   001C9C  B4D8               	btfsc	status,2,c
  4848   001C9E  EF53  F00E         	goto	i2u160_41
  4849   001CA2  EF55  F00E         	goto	i2u160_40
  4850   001CA6                     i2u160_41:
  4851   001CA6  EF59  F00E         	goto	i2l2671
  4852   001CAA                     i2u160_40:
  4853   001CAA  4A51               	infsnz	_LCD_posX^0,f,c
  4854   001CAC  2A52               	incf	(_LCD_posX+1)^0,f,c
  4855   001CAE  EF5C  F00E         	goto	i2l2673
  4856   001CB2                     i2l2671:
  4857   001CB2  0651               	decf	_LCD_posX^0,f,c
  4858   001CB4  A0D8               	btfss	status,0,c
  4859   001CB6  0652               	decf	(_LCD_posX+1)^0,f,c
  4860   001CB8                     i2l2673:
  4861                           
  4862                           ;LCD-library/LCD-library.c: 144:     if(!LCD_isCursorMoving) {
  4863   001CB8  5047               	movf	_LCD_isCursorMoving^0,w,c
  4864   001CBA  1048               	iorwf	(_LCD_isCursorMoving+1)^0,w,c
  4865   001CBC  A4D8               	btfss	status,2,c
  4866   001CBE  EF63  F00E         	goto	i2u161_41
  4867   001CC2  EF65  F00E         	goto	i2u161_40
  4868   001CC6                     i2u161_41:
  4869   001CC6  EF7C  F00E         	goto	i2l120
  4870   001CCA                     i2u161_40:
  4871   001CCA                     
  4872                           ;LCD-library/LCD-library.c: 145:         if(LCD_isIncrement) LCD_MoveCursorLeft(1);
  4873   001CCA  504D               	movf	_LCD_isIncrement^0,w,c
  4874   001CCC  104E               	iorwf	(_LCD_isIncrement+1)^0,w,c
  4875   001CCE  B4D8               	btfsc	status,2,c
  4876   001CD0  EF6C  F00E         	goto	i2u162_41
  4877   001CD4  EF6E  F00E         	goto	i2u162_40
  4878   001CD8                     i2u162_41:
  4879   001CD8  EF76  F00E         	goto	i2l2679
  4880   001CDC                     i2u162_40:
  4881   001CDC  0E00               	movlw	0
  4882   001CDE  6E11               	movwf	(LCD_MoveCursorLeft@howMuch+1)^0,c
  4883   001CE0  0E01               	movlw	1
  4884   001CE2  6E10               	movwf	LCD_MoveCursorLeft@howMuch^0,c
  4885   001CE4  EC7C  F010         	call	_LCD_MoveCursorLeft	;wreg free
  4886   001CE8  EF7C  F00E         	goto	i2l120
  4887   001CEC                     i2l2679:
  4888   001CEC  0E00               	movlw	0
  4889   001CEE  6E11               	movwf	(LCD_MoveCursorRight@howMuch+1)^0,c
  4890   001CF0  0E01               	movlw	1
  4891   001CF2  6E10               	movwf	LCD_MoveCursorRight@howMuch^0,c
  4892   001CF4  EC59  F010         	call	_LCD_MoveCursorRight	;wreg free
  4893   001CF8                     i2l120:
  4894   001CF8  0012               	return		;funcret
  4895   001CFA                     __end_of_LCD_PrintChar:
  4896                           	callstack 0
  4897                           
  4898 ;; *************** function _LCD_MoveCursorRight *****************
  4899 ;; Defined at:
  4900 ;;		line 286 in file "LCD-library/LCD-library.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;  howMuch         2   15[COMRAM] int 
  4903 ;; Auto vars:     Size  Location     Type
  4904 ;;		None
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  1    wreg      void 
  4907 ;; Registers used:
  4908 ;;		wreg, status,2, status,0, cstack
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4914 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4916 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4917 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4918 ;;Total ram usage:        4 bytes
  4919 ;; Hardware stack levels used: 1
  4920 ;; Hardware stack levels required when called: 5
  4921 ;; This function calls:
  4922 ;;		i2_LCD_SetCursorAt
  4923 ;; This function is called by:
  4924 ;;		_LCD_PrintChar
  4925 ;;		_LCD_PrintStr
  4926 ;;		_LCD_TypeStr
  4927 ;; This function uses a non-reentrant model
  4928 ;;
  4929                           
  4930                           	psect	text40
  4931   0020B2                     __ptext40:
  4932                           	callstack 0
  4933   0020B2                     _LCD_MoveCursorRight:
  4934                           	callstack 13
  4935   0020B2                     
  4936                           ;LCD-library/LCD-library.c: 287:     if(LCD_posX +howMuch <= 16) {
  4937   0020B2  5010               	movf	LCD_MoveCursorRight@howMuch^0,w,c
  4938   0020B4  2451               	addwf	_LCD_posX^0,w,c
  4939   0020B6  6E12               	movwf	??_LCD_MoveCursorRight^0,c
  4940   0020B8  5011               	movf	(LCD_MoveCursorRight@howMuch+1)^0,w,c
  4941   0020BA  2052               	addwfc	(_LCD_posX+1)^0,w,c
  4942   0020BC  6E13               	movwf	(??_LCD_MoveCursorRight+1)^0,c
  4943   0020BE  BE13               	btfsc	(??_LCD_MoveCursorRight+1)^0,7,c
  4944   0020C0  EF6D  F010         	goto	i2u148_40
  4945   0020C4  5013               	movf	(??_LCD_MoveCursorRight+1)^0,w,c
  4946   0020C6  E107               	bnz	i2u148_41
  4947   0020C8  0E11               	movlw	17
  4948   0020CA  5C12               	subwf	??_LCD_MoveCursorRight^0,w,c
  4949   0020CC  B0D8               	btfsc	status,0,c
  4950   0020CE  EF6B  F010         	goto	i2u148_41
  4951   0020D2  EF6D  F010         	goto	i2u148_40
  4952   0020D6                     i2u148_41:
  4953   0020D6  EF7B  F010         	goto	i2l192
  4954   0020DA                     i2u148_40:
  4955   0020DA                     
  4956                           ;LCD-library/LCD-library.c: 288:         LCD_posX += howMuch;
  4957   0020DA  5010               	movf	LCD_MoveCursorRight@howMuch^0,w,c
  4958   0020DC  2651               	addwf	_LCD_posX^0,f,c
  4959   0020DE  5011               	movf	(LCD_MoveCursorRight@howMuch+1)^0,w,c
  4960   0020E0  2252               	addwfc	(_LCD_posX+1)^0,f,c
  4961   0020E2                     
  4962                           ;LCD-library/LCD-library.c: 289:         LCD_SetCursorAt(LCD_posX, LCD_posY);
  4963   0020E2  C051  F00A         	movff	_LCD_posX,i2LCD_SetCursorAt@pos
  4964   0020E6  C052  F00B         	movff	_LCD_posX+1,i2LCD_SetCursorAt@pos+1
  4965   0020EA  C04F  F00C         	movff	_LCD_posY,i2LCD_SetCursorAt@row
  4966   0020EE  C050  F00D         	movff	_LCD_posY+1,i2LCD_SetCursorAt@row+1
  4967   0020F2  ECC6  F00B         	call	i2_LCD_SetCursorAt	;wreg free
  4968   0020F6                     i2l192:
  4969   0020F6  0012               	return		;funcret
  4970   0020F8                     __end_of_LCD_MoveCursorRight:
  4971                           	callstack 0
  4972                           
  4973 ;; *************** function _LCD_MoveCursorLeft *****************
  4974 ;; Defined at:
  4975 ;;		line 279 in file "LCD-library/LCD-library.c"
  4976 ;; Parameters:    Size  Location     Type
  4977 ;;  howMuch         2   15[COMRAM] int 
  4978 ;; Auto vars:     Size  Location     Type
  4979 ;;		None
  4980 ;; Return value:  Size  Location     Type
  4981 ;;                  1    wreg      void 
  4982 ;; Registers used:
  4983 ;;		wreg, status,2, status,0, cstack
  4984 ;; Tracked objects:
  4985 ;;		On entry : 0/0
  4986 ;;		On exit  : 0/0
  4987 ;;		Unchanged: 0/0
  4988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4989 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4991 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4992 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4993 ;;Total ram usage:        4 bytes
  4994 ;; Hardware stack levels used: 1
  4995 ;; Hardware stack levels required when called: 5
  4996 ;; This function calls:
  4997 ;;		i2_LCD_SetCursorAt
  4998 ;; This function is called by:
  4999 ;;		_LCD_PrintChar
  5000 ;;		_LCD_PrintStr
  5001 ;;		_LCD_TypeStr
  5002 ;; This function uses a non-reentrant model
  5003 ;;
  5004                           
  5005                           	psect	text41
  5006   0020F8                     __ptext41:
  5007                           	callstack 0
  5008   0020F8                     _LCD_MoveCursorLeft:
  5009                           	callstack 13
  5010   0020F8                     
  5011                           ;LCD-library/LCD-library.c: 280:     if(LCD_posX -howMuch >= 1) {
  5012   0020F8  5010               	movf	LCD_MoveCursorLeft@howMuch^0,w,c
  5013   0020FA  5C51               	subwf	_LCD_posX^0,w,c
  5014   0020FC  6E12               	movwf	??_LCD_MoveCursorLeft^0,c
  5015   0020FE  5011               	movf	(LCD_MoveCursorLeft@howMuch+1)^0,w,c
  5016   002100  5852               	subwfb	(_LCD_posX+1)^0,w,c
  5017   002102  6E13               	movwf	(??_LCD_MoveCursorLeft+1)^0,c
  5018   002104  BE13               	btfsc	(??_LCD_MoveCursorLeft+1)^0,7,c
  5019   002106  EF8D  F010         	goto	i2u147_41
  5020   00210A  5013               	movf	(??_LCD_MoveCursorLeft+1)^0,w,c
  5021   00210C  E108               	bnz	i2u147_40
  5022   00210E  0412               	decf	??_LCD_MoveCursorLeft^0,w,c
  5023   002110  A0D8               	btfss	status,0,c
  5024   002112  EF8D  F010         	goto	i2u147_41
  5025   002116  EF8F  F010         	goto	i2u147_40
  5026   00211A                     i2u147_41:
  5027   00211A  EF9D  F010         	goto	i2l188
  5028   00211E                     i2u147_40:
  5029   00211E                     
  5030                           ;LCD-library/LCD-library.c: 281:         LCD_posX -= howMuch;
  5031   00211E  5010               	movf	LCD_MoveCursorLeft@howMuch^0,w,c
  5032   002120  5E51               	subwf	_LCD_posX^0,f,c
  5033   002122  5011               	movf	(LCD_MoveCursorLeft@howMuch+1)^0,w,c
  5034   002124  5A52               	subwfb	(_LCD_posX+1)^0,f,c
  5035   002126                     
  5036                           ;LCD-library/LCD-library.c: 282:         LCD_SetCursorAt(LCD_posX, LCD_posY);
  5037   002126  C051  F00A         	movff	_LCD_posX,i2LCD_SetCursorAt@pos
  5038   00212A  C052  F00B         	movff	_LCD_posX+1,i2LCD_SetCursorAt@pos+1
  5039   00212E  C04F  F00C         	movff	_LCD_posY,i2LCD_SetCursorAt@row
  5040   002132  C050  F00D         	movff	_LCD_posY+1,i2LCD_SetCursorAt@row+1
  5041   002136  ECC6  F00B         	call	i2_LCD_SetCursorAt	;wreg free
  5042   00213A                     i2l188:
  5043   00213A  0012               	return		;funcret
  5044   00213C                     __end_of_LCD_MoveCursorLeft:
  5045                           	callstack 0
  5046                           
  5047 ;; *************** function i2_LCD_SetCursorAt *****************
  5048 ;; Defined at:
  5049 ;;		line 232 in file "LCD-library/LCD-library.c"
  5050 ;; Parameters:    Size  Location     Type
  5051 ;;  pos             2    9[COMRAM] int 
  5052 ;;  row             2   11[COMRAM] int 
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;		None
  5055 ;; Return value:  Size  Location     Type
  5056 ;;                  1    wreg      void 
  5057 ;; Registers used:
  5058 ;;		wreg, status,2, status,0, cstack
  5059 ;; Tracked objects:
  5060 ;;		On entry : 0/0
  5061 ;;		On exit  : 0/0
  5062 ;;		Unchanged: 0/0
  5063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5064 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5066 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5067 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5068 ;;Total ram usage:        6 bytes
  5069 ;; Hardware stack levels used: 1
  5070 ;; Hardware stack levels required when called: 4
  5071 ;; This function calls:
  5072 ;;		i2_LCD_Code
  5073 ;; This function is called by:
  5074 ;;		_LCD_PrintStr
  5075 ;;		_LCD_MoveCursorLeft
  5076 ;;		_LCD_MoveCursorRight
  5077 ;; This function uses a non-reentrant model
  5078 ;;
  5079                           
  5080                           	psect	text42
  5081   00178C                     __ptext42:
  5082                           	callstack 0
  5083   00178C                     i2_LCD_SetCursorAt:
  5084                           	callstack 15
  5085   00178C                     
  5086                           ;LCD-library/LCD-library.c: 233:     if(pos >= 1 && pos <= 16 && row >= 1 && row <= 2){
  5087   00178C  BE0B               	btfsc	(i2LCD_SetCursorAt@pos+1)^0,7,c
  5088   00178E  EFD1  F00B         	goto	i2u143_41
  5089   001792  500B               	movf	(i2LCD_SetCursorAt@pos+1)^0,w,c
  5090   001794  E108               	bnz	i2u143_40
  5091   001796  040A               	decf	i2LCD_SetCursorAt@pos^0,w,c
  5092   001798  A0D8               	btfss	status,0,c
  5093   00179A  EFD1  F00B         	goto	i2u143_41
  5094   00179E  EFD3  F00B         	goto	i2u143_40
  5095   0017A2                     i2u143_41:
  5096   0017A2  EF30  F00C         	goto	i2l165
  5097   0017A6                     i2u143_40:
  5098   0017A6  BE0B               	btfsc	(i2LCD_SetCursorAt@pos+1)^0,7,c
  5099   0017A8  EFE1  F00B         	goto	i2u144_40
  5100   0017AC  500B               	movf	(i2LCD_SetCursorAt@pos+1)^0,w,c
  5101   0017AE  E107               	bnz	i2u144_41
  5102   0017B0  0E11               	movlw	17
  5103   0017B2  5C0A               	subwf	i2LCD_SetCursorAt@pos^0,w,c
  5104   0017B4  B0D8               	btfsc	status,0,c
  5105   0017B6  EFDF  F00B         	goto	i2u144_41
  5106   0017BA  EFE1  F00B         	goto	i2u144_40
  5107   0017BE                     i2u144_41:
  5108   0017BE  EF30  F00C         	goto	i2l165
  5109   0017C2                     i2u144_40:
  5110   0017C2  BE0D               	btfsc	(i2LCD_SetCursorAt@row+1)^0,7,c
  5111   0017C4  EFEC  F00B         	goto	i2u145_41
  5112   0017C8  500D               	movf	(i2LCD_SetCursorAt@row+1)^0,w,c
  5113   0017CA  E108               	bnz	i2u145_40
  5114   0017CC  040C               	decf	i2LCD_SetCursorAt@row^0,w,c
  5115   0017CE  A0D8               	btfss	status,0,c
  5116   0017D0  EFEC  F00B         	goto	i2u145_41
  5117   0017D4  EFEE  F00B         	goto	i2u145_40
  5118   0017D8                     i2u145_41:
  5119   0017D8  EF30  F00C         	goto	i2l165
  5120   0017DC                     i2u145_40:
  5121   0017DC  BE0D               	btfsc	(i2LCD_SetCursorAt@row+1)^0,7,c
  5122   0017DE  EFFC  F00B         	goto	i2u146_40
  5123   0017E2  500D               	movf	(i2LCD_SetCursorAt@row+1)^0,w,c
  5124   0017E4  E107               	bnz	i2u146_41
  5125   0017E6  0E03               	movlw	3
  5126   0017E8  5C0C               	subwf	i2LCD_SetCursorAt@row^0,w,c
  5127   0017EA  B0D8               	btfsc	status,0,c
  5128   0017EC  EFFA  F00B         	goto	i2u146_41
  5129   0017F0  EFFC  F00B         	goto	i2u146_40
  5130   0017F4                     i2u146_41:
  5131   0017F4  EF30  F00C         	goto	i2l165
  5132   0017F8                     i2u146_40:
  5133   0017F8                     
  5134                           ;LCD-library/LCD-library.c: 234:         LCD_posX = pos;
  5135   0017F8  C00A  F051         	movff	i2LCD_SetCursorAt@pos,_LCD_posX
  5136   0017FC  C00B  F052         	movff	i2LCD_SetCursorAt@pos+1,_LCD_posX+1
  5137                           
  5138                           ;LCD-library/LCD-library.c: 235:         LCD_posY = row;
  5139   001800  C00C  F04F         	movff	i2LCD_SetCursorAt@row,_LCD_posY
  5140   001804  C00D  F050         	movff	i2LCD_SetCursorAt@row+1,_LCD_posY+1
  5141                           
  5142                           ;LCD-library/LCD-library.c: 236:         switch(row) {
  5143   001808  EF1A  F00C         	goto	i2l2579
  5144   00180C                     i2l2571:
  5145   00180C  0E7F               	movlw	127
  5146   00180E  240A               	addwf	i2LCD_SetCursorAt@pos^0,w,c
  5147   001810  6E08               	movwf	i2LCD_Code@code^0,c
  5148   001812  0E00               	movlw	0
  5149   001814  200B               	addwfc	(i2LCD_SetCursorAt@pos+1)^0,w,c
  5150   001816  6E09               	movwf	(i2LCD_Code@code+1)^0,c
  5151   001818  EC3F  F012         	call	i2_LCD_Code	;wreg free
  5152   00181C  EF30  F00C         	goto	i2l165
  5153   001820                     i2l2573:
  5154   001820  0EBF               	movlw	191
  5155   001822  240A               	addwf	i2LCD_SetCursorAt@pos^0,w,c
  5156   001824  6E08               	movwf	i2LCD_Code@code^0,c
  5157   001826  0E00               	movlw	0
  5158   001828  200B               	addwfc	(i2LCD_SetCursorAt@pos+1)^0,w,c
  5159   00182A  6E09               	movwf	(i2LCD_Code@code+1)^0,c
  5160   00182C  EC3F  F012         	call	i2_LCD_Code	;wreg free
  5161   001830  EF30  F00C         	goto	i2l165
  5162   001834                     i2l2579:
  5163   001834  C00C  F00E         	movff	i2LCD_SetCursorAt@row,??i2_LCD_SetCursorAt
  5164   001838  C00D  F00F         	movff	i2LCD_SetCursorAt@row+1,??i2_LCD_SetCursorAt+1
  5165                           
  5166                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5167                           ; Switch size 1, requested type "simple"
  5168                           ; Number of cases is 1, Range of values is 0 to 0
  5169                           ; switch strategies available:
  5170                           ; Name         Instructions Cycles
  5171                           ; simple_byte            4     3 (average)
  5172                           ;	Chosen strategy is simple_byte
  5173   00183C  500F               	movf	(??i2_LCD_SetCursorAt+1)^0,w,c
  5174   00183E  0A00               	xorlw	0	; case 0
  5175   001840  B4D8               	btfsc	status,2,c
  5176   001842  EF25  F00C         	goto	i2l3873
  5177   001846  EF06  F00C         	goto	i2l2571
  5178   00184A                     i2l3873:
  5179                           
  5180                           ; Switch size 1, requested type "simple"
  5181                           ; Number of cases is 2, Range of values is 1 to 2
  5182                           ; switch strategies available:
  5183                           ; Name         Instructions Cycles
  5184                           ; simple_byte            7     4 (average)
  5185                           ;	Chosen strategy is simple_byte
  5186   00184A  500E               	movf	??i2_LCD_SetCursorAt^0,w,c
  5187   00184C  0A01               	xorlw	1	; case 1
  5188   00184E  B4D8               	btfsc	status,2,c
  5189   001850  EF06  F00C         	goto	i2l2571
  5190   001854  0A03               	xorlw	3	; case 2
  5191   001856  B4D8               	btfsc	status,2,c
  5192   001858  EF10  F00C         	goto	i2l2573
  5193   00185C  EF06  F00C         	goto	i2l2571
  5194   001860                     i2l165:
  5195   001860  0012               	return		;funcret
  5196   001862                     __end_ofi2_LCD_SetCursorAt:
  5197                           	callstack 0
  5198                           
  5199 ;; *************** function _LCD_Clear *****************
  5200 ;; Defined at:
  5201 ;;		line 209 in file "LCD-library/LCD-library.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;		None
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;		None
  5206 ;; Return value:  Size  Location     Type
  5207 ;;                  1    wreg      void 
  5208 ;; Registers used:
  5209 ;;		wreg, status,2, status,0, cstack
  5210 ;; Tracked objects:
  5211 ;;		On entry : 0/0
  5212 ;;		On exit  : 0/0
  5213 ;;		Unchanged: 0/0
  5214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5219 ;;Total ram usage:        0 bytes
  5220 ;; Hardware stack levels used: 1
  5221 ;; Hardware stack levels required when called: 4
  5222 ;; This function calls:
  5223 ;;		i2_LCD_Code
  5224 ;;		i2__delay_ms
  5225 ;; This function is called by:
  5226 ;;		_PrintOnScreen
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           
  5230                           	psect	text43
  5231   002348                     __ptext43:
  5232                           	callstack 0
  5233   002348                     _LCD_Clear:
  5234                           	callstack 16
  5235   002348                     
  5236                           ;LCD-library/LCD-library.c: 210:     LCD_Code(0b0000000001);
  5237   002348  0E00               	movlw	0
  5238   00234A  6E09               	movwf	(i2LCD_Code@code+1)^0,c
  5239   00234C  0E01               	movlw	1
  5240   00234E  6E08               	movwf	i2LCD_Code@code^0,c
  5241   002350  EC3F  F012         	call	i2_LCD_Code	;wreg free
  5242   002354                     
  5243                           ;LCD-library/LCD-library.c: 211:     LCD_posX = LCD_posY = 1;
  5244   002354  0E00               	movlw	0
  5245   002356  6E50               	movwf	(_LCD_posY+1)^0,c
  5246   002358  0E01               	movlw	1
  5247   00235A  6E4F               	movwf	_LCD_posY^0,c
  5248   00235C  C04F  F051         	movff	_LCD_posY,_LCD_posX
  5249   002360  C050  F052         	movff	_LCD_posY+1,_LCD_posX+1
  5250   002364                     
  5251                           ;LCD-library/LCD-library.c: 212:     _delay_ms(200);
  5252   002364  0E00               	movlw	0
  5253   002366  6E02               	movwf	(i2__delay_ms@ms+1)^0,c
  5254   002368  0EC8               	movlw	200
  5255   00236A  6E01               	movwf	i2__delay_ms@ms^0,c
  5256   00236C  EC00  F011         	call	i2__delay_ms	;wreg free
  5257   002370  0012               	return		;funcret
  5258   002372                     __end_of_LCD_Clear:
  5259                           	callstack 0
  5260                           
  5261 ;; *************** function i2__delay_ms *****************
  5262 ;; Defined at:
  5263 ;;		line 8 in file "LCD-library/LCD-library.c"
  5264 ;; Parameters:    Size  Location     Type
  5265 ;;  ms              2    0[COMRAM] int 
  5266 ;; Auto vars:     Size  Location     Type
  5267 ;;  i               2    3[COMRAM] int 
  5268 ;; Return value:  Size  Location     Type
  5269 ;;                  1    wreg      void 
  5270 ;; Registers used:
  5271 ;;		wreg, status,2, status,0
  5272 ;; Tracked objects:
  5273 ;;		On entry : 0/0
  5274 ;;		On exit  : 0/0
  5275 ;;		Unchanged: 0/0
  5276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5277 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5278 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5279 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5280 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5281 ;;Total ram usage:        5 bytes
  5282 ;; Hardware stack levels used: 1
  5283 ;; This function calls:
  5284 ;;		Nothing
  5285 ;; This function is called by:
  5286 ;;		_LCD_Clear
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           	psect	text44
  5291   002200                     __ptext44:
  5292                           	callstack 0
  5293   002200                     i2__delay_ms:
  5294                           	callstack 19
  5295   002200  0E00               	movlw	0
  5296   002202  6E05               	movwf	(i2__delay_ms@i+1)^0,c
  5297   002204  0E00               	movlw	0
  5298   002206  6E04               	movwf	i2__delay_ms@i^0,c
  5299   002208  EF10  F011         	goto	i2l55
  5300   00220C                     i2l2735:
  5301   00220C  0E09               	movlw	9
  5302   00220E  6E03               	movwf	??i2__delay_ms^0,c
  5303   002210  0E1C               	movlw	28
  5304   002212                     i2u291_47:
  5305   002212  2EE8               	decfsz	wreg,f,c
  5306   002214  D7FE               	bra	i2u291_47
  5307   002216  2E03               	decfsz	??i2__delay_ms^0,f,c
  5308   002218  D7FC               	bra	i2u291_47
  5309   00221A  D000               	nop2	
  5310   00221C  4A04               	infsnz	i2__delay_ms@i^0,f,c
  5311   00221E  2A05               	incf	(i2__delay_ms@i+1)^0,f,c
  5312   002220                     i2l55:
  5313   002220  5001               	movf	i2__delay_ms@ms^0,w,c
  5314   002222  5C04               	subwf	i2__delay_ms@i^0,w,c
  5315   002224  5005               	movf	(i2__delay_ms@i+1)^0,w,c
  5316   002226  0A80               	xorlw	128
  5317   002228  6E03               	movwf	??i2__delay_ms^0,c
  5318   00222A  5002               	movf	(i2__delay_ms@ms+1)^0,w,c
  5319   00222C  0A80               	xorlw	128
  5320   00222E  5803               	subwfb	??i2__delay_ms^0,w,c
  5321   002230  A0D8               	btfss	status,0,c
  5322   002232  EF1D  F011         	goto	i2u167_41
  5323   002236  EF1F  F011         	goto	i2u167_40
  5324   00223A                     i2u167_41:
  5325   00223A  EF06  F011         	goto	i2l2735
  5326   00223E                     i2u167_40:
  5327   00223E  0012               	return		;funcret
  5328   002240                     __end_ofi2__delay_ms:
  5329                           	callstack 0
  5330                           
  5331 ;; *************** function i2_LCD_Code *****************
  5332 ;; Defined at:
  5333 ;;		line 77 in file "LCD-library/LCD-library.c"
  5334 ;; Parameters:    Size  Location     Type
  5335 ;;  code            2    7[COMRAM] int 
  5336 ;; Auto vars:     Size  Location     Type
  5337 ;;		None
  5338 ;; Return value:  Size  Location     Type
  5339 ;;                  1    wreg      void 
  5340 ;; Registers used:
  5341 ;;		wreg, status,2, status,0, cstack
  5342 ;; Tracked objects:
  5343 ;;		On entry : 0/0
  5344 ;;		On exit  : 0/0
  5345 ;;		Unchanged: 0/0
  5346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5347 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5350 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5351 ;;Total ram usage:        2 bytes
  5352 ;; Hardware stack levels used: 1
  5353 ;; Hardware stack levels required when called: 3
  5354 ;; This function calls:
  5355 ;;		i2_LCD_4bitCode
  5356 ;;		i2_LCD_8bitCode
  5357 ;; This function is called by:
  5358 ;;		_LCD_PrintChar
  5359 ;;		_LCD_Clear
  5360 ;;		i2_LCD_SetCursorAt
  5361 ;; This function uses a non-reentrant model
  5362 ;;
  5363                           
  5364                           	psect	text45
  5365   00247E                     __ptext45:
  5366                           	callstack 0
  5367   00247E                     i2_LCD_Code:
  5368                           	callstack 15
  5369   00247E  C008  F006         	movff	i2LCD_Code@code,i2LCD_8bitCode@code
  5370   002482  C009  F007         	movff	i2LCD_Code@code+1,i2LCD_8bitCode@code+1
  5371   002486  EC02  F012         	call	i2_LCD_8bitCode	;wreg free
  5372   00248A  0012               	return		;funcret
  5373   00248C                     __end_ofi2_LCD_Code:
  5374                           	callstack 0
  5375                           
  5376 ;; *************** function i2_LCD_8bitCode *****************
  5377 ;; Defined at:
  5378 ;;		line 59 in file "LCD-library/LCD-library.c"
  5379 ;; Parameters:    Size  Location     Type
  5380 ;;  code            2    5[COMRAM] int 
  5381 ;; Auto vars:     Size  Location     Type
  5382 ;;		None
  5383 ;; Return value:  Size  Location     Type
  5384 ;;                  1    wreg      void 
  5385 ;; Registers used:
  5386 ;;		wreg, status,2, status,0, cstack
  5387 ;; Tracked objects:
  5388 ;;		On entry : 0/0
  5389 ;;		On exit  : 0/0
  5390 ;;		Unchanged: 0/0
  5391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5392 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5395 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5396 ;;Total ram usage:        2 bytes
  5397 ;; Hardware stack levels used: 1
  5398 ;; Hardware stack levels required when called: 2
  5399 ;; This function calls:
  5400 ;;		i2_LCD_8bitCodeNoWait
  5401 ;;		i2_LCD_Wait
  5402 ;; This function is called by:
  5403 ;;		i2_LCD_Code
  5404 ;; This function uses a non-reentrant model
  5405 ;;
  5406                           
  5407                           	psect	text46
  5408   002404                     __ptext46:
  5409                           	callstack 0
  5410   002404                     i2_LCD_8bitCode:
  5411                           	callstack 15
  5412   002404                     
  5413                           ;LCD-library/LCD-library.c: 60:     LCD_8bitCodeNoWait(code);
  5414   002404  C006  F001         	movff	i2LCD_8bitCode@code,i2LCD_8bitCodeNoWait@code
  5415   002408  C007  F002         	movff	i2LCD_8bitCode@code+1,i2LCD_8bitCodeNoWait@code+1
  5416   00240C  ECEB  F00F         	call	i2_LCD_8bitCodeNoWait	;wreg free
  5417                           
  5418                           ;LCD-library/LCD-library.c: 61:     LCD_Wait();
  5419   002410  EC46  F012         	call	i2_LCD_Wait	;wreg free
  5420   002414  0012               	return		;funcret
  5421   002416                     __end_ofi2_LCD_8bitCode:
  5422                           	callstack 0
  5423                           
  5424 ;; *************** function i2_LCD_8bitCodeNoWait *****************
  5425 ;; Defined at:
  5426 ;;		line 52 in file "LCD-library/LCD-library.c"
  5427 ;; Parameters:    Size  Location     Type
  5428 ;;  code            2    0[COMRAM] int 
  5429 ;; Auto vars:     Size  Location     Type
  5430 ;;		None
  5431 ;; Return value:  Size  Location     Type
  5432 ;;                  1    wreg      void 
  5433 ;; Registers used:
  5434 ;;		wreg, status,2, status,0
  5435 ;; Tracked objects:
  5436 ;;		On entry : 0/0
  5437 ;;		On exit  : 0/0
  5438 ;;		Unchanged: 0/0
  5439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5440 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5442 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5443 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5444 ;;Total ram usage:        5 bytes
  5445 ;; Hardware stack levels used: 1
  5446 ;; This function calls:
  5447 ;;		Nothing
  5448 ;; This function is called by:
  5449 ;;		i2_LCD_8bitCode
  5450 ;; This function uses a non-reentrant model
  5451 ;;
  5452                           
  5453                           	psect	text47
  5454   001FD6                     __ptext47:
  5455                           	callstack 0
  5456   001FD6                     i2_LCD_8bitCodeNoWait:
  5457                           	callstack 16
  5458   001FD6                     
  5459                           ;LCD-library/LCD-library.c: 53:     PORTHbits.RH2 = (code & 0b1000000000) >> 9;
  5460   001FD6  C001  F003         	movff	i2LCD_8bitCodeNoWait@code,??i2_LCD_8bitCodeNoWait
  5461   001FDA  C002  F004         	movff	i2LCD_8bitCodeNoWait@code+1,??i2_LCD_8bitCodeNoWait+1
  5462   001FDE  0E09               	movlw	9
  5463   001FE0  6E05               	movwf	(??i2_LCD_8bitCodeNoWait+2)^0,c
  5464   001FE2                     i2u115_45:
  5465   001FE2  3404               	rlcf	(??i2_LCD_8bitCodeNoWait+1)^0,w,c
  5466   001FE4  3204               	rrcf	(??i2_LCD_8bitCodeNoWait+1)^0,f,c
  5467   001FE6  3203               	rrcf	??i2_LCD_8bitCodeNoWait^0,f,c
  5468   001FE8  2E05               	decfsz	(??i2_LCD_8bitCodeNoWait+2)^0,f,c
  5469   001FEA  EFF1  F00F         	goto	i2u115_45
  5470   001FEE  0E01               	movlw	1
  5471   001FF0  1603               	andwf	??i2_LCD_8bitCodeNoWait^0,f,c
  5472   001FF2  4603               	rlncf	??i2_LCD_8bitCodeNoWait^0,f,c
  5473   001FF4  4603               	rlncf	??i2_LCD_8bitCodeNoWait^0,f,c
  5474   001FF6  5087               	movf	135,w,c	;volatile
  5475   001FF8  1803               	xorwf	??i2_LCD_8bitCodeNoWait^0,w,c
  5476   001FFA  0BFB               	andlw	-5
  5477   001FFC  1803               	xorwf	??i2_LCD_8bitCodeNoWait^0,w,c
  5478   001FFE  6E87               	movwf	135,c	;volatile
  5479                           
  5480                           ;LCD-library/LCD-library.c: 54:     PORTHbits.RH1 = (code & 0b0100000000) >> 8;
  5481   002000  C002  F003         	movff	i2LCD_8bitCodeNoWait@code+1,??i2_LCD_8bitCodeNoWait
  5482   002004  6A04               	clrf	(??i2_LCD_8bitCodeNoWait+1)^0,c
  5483   002006  BE03               	btfsc	??i2_LCD_8bitCodeNoWait^0,7,c
  5484   002008  6804               	setf	(??i2_LCD_8bitCodeNoWait+1)^0,c
  5485   00200A  0E01               	movlw	1
  5486   00200C  1603               	andwf	??i2_LCD_8bitCodeNoWait^0,f,c
  5487   00200E  4603               	rlncf	??i2_LCD_8bitCodeNoWait^0,f,c
  5488   002010  5087               	movf	135,w,c	;volatile
  5489   002012  1803               	xorwf	??i2_LCD_8bitCodeNoWait^0,w,c
  5490   002014  0BFD               	andlw	-3
  5491   002016  1803               	xorwf	??i2_LCD_8bitCodeNoWait^0,w,c
  5492   002018  6E87               	movwf	135,c	;volatile
  5493   00201A                     
  5494                           ;LCD-library/LCD-library.c: 55:     PORTE = code & 0b0011111111;
  5495   00201A  C001  FF84         	movff	i2LCD_8bitCodeNoWait@code,3972	;volatile
  5496   00201E                     
  5497                           ;LCD-library/LCD-library.c: 56:     PORTHbits.RH0 = 1;
  5498   00201E  8087               	bsf	135,0,c	;volatile
  5499   002020                     
  5500                           ;LCD-library/LCD-library.c: 57:     PORTHbits.RH0 = 0;
  5501   002020  9087               	bcf	135,0,c	;volatile
  5502   002022  0012               	return		;funcret
  5503   002024                     __end_ofi2_LCD_8bitCodeNoWait:
  5504                           	callstack 0
  5505                           
  5506 ;; *************** function i2_LCD_4bitCode *****************
  5507 ;; Defined at:
  5508 ;;		line 72 in file "LCD-library/LCD-library.c"
  5509 ;; Parameters:    Size  Location     Type
  5510 ;;  code            2    5[COMRAM] int 
  5511 ;; Auto vars:     Size  Location     Type
  5512 ;;		None
  5513 ;; Return value:  Size  Location     Type
  5514 ;;                  1    wreg      void 
  5515 ;; Registers used:
  5516 ;;		wreg, status,2, status,0, cstack
  5517 ;; Tracked objects:
  5518 ;;		On entry : 0/0
  5519 ;;		On exit  : 0/0
  5520 ;;		Unchanged: 0/0
  5521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5522 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5525 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5526 ;;Total ram usage:        2 bytes
  5527 ;; Hardware stack levels used: 1
  5528 ;; Hardware stack levels required when called: 2
  5529 ;; This function calls:
  5530 ;;		i2_LCD_4bitCodeNoWait
  5531 ;;		i2_LCD_Wait
  5532 ;; This function is called by:
  5533 ;;		i2_LCD_Code
  5534 ;; This function uses a non-reentrant model
  5535 ;;
  5536                           
  5537                           	psect	text48
  5538   002416                     __ptext48:
  5539                           	callstack 0
  5540   002416                     i2_LCD_4bitCode:
  5541                           	callstack 15
  5542   002416                     
  5543                           ;LCD-library/LCD-library.c: 73:     LCD_4bitCodeNoWait(code);
  5544   002416  C006  F001         	movff	i2LCD_4bitCode@code,i2LCD_4bitCodeNoWait@code
  5545   00241A  C007  F002         	movff	i2LCD_4bitCode@code+1,i2LCD_4bitCodeNoWait@code+1
  5546   00241E  ECEC  F00E         	call	i2_LCD_4bitCodeNoWait	;wreg free
  5547                           
  5548                           ;LCD-library/LCD-library.c: 74:     LCD_Wait();
  5549   002422  EC46  F012         	call	i2_LCD_Wait	;wreg free
  5550   002426  0012               	return		;funcret
  5551   002428                     __end_ofi2_LCD_4bitCode:
  5552                           	callstack 0
  5553                           
  5554 ;; *************** function i2_LCD_Wait *****************
  5555 ;; Defined at:
  5556 ;;		line 11 in file "LCD-library/LCD-library.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;		None
  5559 ;; Auto vars:     Size  Location     Type
  5560 ;;		None
  5561 ;; Return value:  Size  Location     Type
  5562 ;;                  1    wreg      void 
  5563 ;; Registers used:
  5564 ;;		wreg, status,2, status,0, cstack
  5565 ;; Tracked objects:
  5566 ;;		On entry : 0/0
  5567 ;;		On exit  : 0/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5574 ;;Total ram usage:        0 bytes
  5575 ;; Hardware stack levels used: 1
  5576 ;; Hardware stack levels required when called: 1
  5577 ;; This function calls:
  5578 ;;		i2___delay
  5579 ;;		i2__delay_us
  5580 ;; This function is called by:
  5581 ;;		i2_LCD_8bitCode
  5582 ;;		i2_LCD_4bitCode
  5583 ;; This function uses a non-reentrant model
  5584 ;;
  5585                           
  5586                           	psect	text49
  5587   00248C                     __ptext49:
  5588                           	callstack 0
  5589   00248C                     i2_LCD_Wait:
  5590                           	callstack 15
  5591   00248C  0E01               	movlw	1
  5592   00248E  6E02               	movwf	(i2__delay_us@us+1)^0,c
  5593   002490  0EF4               	movlw	244
  5594   002492  6E01               	movwf	i2__delay_us@us^0,c
  5595   002494  EC58  F011         	call	i2__delay_us	;wreg free
  5596   002498  0012               	return		;funcret
  5597   00249A                     __end_ofi2_LCD_Wait:
  5598                           	callstack 0
  5599                           
  5600 ;; *************** function i2__delay_us *****************
  5601 ;; Defined at:
  5602 ;;		line 7 in file "LCD-library/LCD-library.c"
  5603 ;; Parameters:    Size  Location     Type
  5604 ;;  us              2    0[COMRAM] int 
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;  i               2    3[COMRAM] int 
  5607 ;; Return value:  Size  Location     Type
  5608 ;;                  1    wreg      void 
  5609 ;; Registers used:
  5610 ;;		wreg, status,2, status,0
  5611 ;; Tracked objects:
  5612 ;;		On entry : 0/0
  5613 ;;		On exit  : 0/0
  5614 ;;		Unchanged: 0/0
  5615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5616 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5617 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5618 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5619 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5620 ;;Total ram usage:        5 bytes
  5621 ;; Hardware stack levels used: 1
  5622 ;; This function calls:
  5623 ;;		Nothing
  5624 ;; This function is called by:
  5625 ;;		i2_LCD_Wait
  5626 ;; This function uses a non-reentrant model
  5627 ;;
  5628                           
  5629                           	psect	text50
  5630   0022B0                     __ptext50:
  5631                           	callstack 0
  5632   0022B0                     i2__delay_us:
  5633                           	callstack 15
  5634   0022B0  0E00               	movlw	0
  5635   0022B2  6E05               	movwf	(i2__delay_us@i+1)^0,c
  5636   0022B4  0E00               	movlw	0
  5637   0022B6  6E04               	movwf	i2__delay_us@i^0,c
  5638   0022B8  EF63  F011         	goto	i2l2299
  5639   0022BC                     i2l50:
  5640   0022BC  D000               	nop2		;2 cycle nop
  5641   0022BE  D000               	nop2		;2 cycle nop
  5642   0022C0  D000               	nop2		;2 cycle nop
  5643   0022C2  4A04               	infsnz	i2__delay_us@i^0,f,c
  5644   0022C4  2A05               	incf	(i2__delay_us@i+1)^0,f,c
  5645   0022C6                     i2l2299:
  5646   0022C6  5001               	movf	i2__delay_us@us^0,w,c
  5647   0022C8  5C04               	subwf	i2__delay_us@i^0,w,c
  5648   0022CA  5005               	movf	(i2__delay_us@i+1)^0,w,c
  5649   0022CC  0A80               	xorlw	128
  5650   0022CE  6E03               	movwf	??i2__delay_us^0,c
  5651   0022D0  5002               	movf	(i2__delay_us@us+1)^0,w,c
  5652   0022D2  0A80               	xorlw	128
  5653   0022D4  5803               	subwfb	??i2__delay_us^0,w,c
  5654   0022D6  A0D8               	btfss	status,0,c
  5655   0022D8  EF70  F011         	goto	i2u114_41
  5656   0022DC  EF72  F011         	goto	i2u114_40
  5657   0022E0                     i2u114_41:
  5658   0022E0  EF5E  F011         	goto	i2l50
  5659   0022E4                     i2u114_40:
  5660   0022E4  0012               	return		;funcret
  5661   0022E6                     __end_ofi2__delay_us:
  5662                           	callstack 0
  5663                           
  5664 ;; *************** function i2___delay *****************
  5665 ;; Defined at:
  5666 ;;		line 6 in file "LCD-library/LCD-library.c"
  5667 ;; Parameters:    Size  Location     Type
  5668 ;;  time            2    0[COMRAM] int 
  5669 ;; Auto vars:     Size  Location     Type
  5670 ;;  i               2    3[COMRAM] int 
  5671 ;; Return value:  Size  Location     Type
  5672 ;;                  1    wreg      void 
  5673 ;; Registers used:
  5674 ;;		wreg, status,2, status,0
  5675 ;; Tracked objects:
  5676 ;;		On entry : 0/0
  5677 ;;		On exit  : 0/0
  5678 ;;		Unchanged: 0/0
  5679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5680 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5681 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5682 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5683 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5684 ;;Total ram usage:        5 bytes
  5685 ;; Hardware stack levels used: 1
  5686 ;; This function calls:
  5687 ;;		Nothing
  5688 ;; This function is called by:
  5689 ;;		i2_LCD_Wait
  5690 ;; This function uses a non-reentrant model
  5691 ;;
  5692                           
  5693                           	psect	text51
  5694   002318                     __ptext51:
  5695                           	callstack 0
  5696   002318                     i2___delay:
  5697                           	callstack 15
  5698   002318  0E00               	movlw	0
  5699   00231A  6E05               	movwf	(i2___delay@i+1)^0,c
  5700   00231C  0E00               	movlw	0
  5701   00231E  6E04               	movwf	i2___delay@i^0,c
  5702   002320  EF94  F011         	goto	i2l2293
  5703   002324                     i2l2291:
  5704   002324  4A04               	infsnz	i2___delay@i^0,f,c
  5705   002326  2A05               	incf	(i2___delay@i+1)^0,f,c
  5706   002328                     i2l2293:
  5707   002328  5001               	movf	i2___delay@time^0,w,c
  5708   00232A  5C04               	subwf	i2___delay@i^0,w,c
  5709   00232C  5005               	movf	(i2___delay@i+1)^0,w,c
  5710   00232E  0A80               	xorlw	128
  5711   002330  6E03               	movwf	??i2___delay^0,c
  5712   002332  5002               	movf	(i2___delay@time+1)^0,w,c
  5713   002334  0A80               	xorlw	128
  5714   002336  5803               	subwfb	??i2___delay^0,w,c
  5715   002338  A0D8               	btfss	status,0,c
  5716   00233A  EFA1  F011         	goto	i2u113_41
  5717   00233E  EFA3  F011         	goto	i2u113_40
  5718   002342                     i2u113_41:
  5719   002342  EF92  F011         	goto	i2l2291
  5720   002346                     i2u113_40:
  5721   002346  0012               	return		;funcret
  5722   002348                     __end_ofi2___delay:
  5723                           	callstack 0
  5724                           
  5725 ;; *************** function i2_LCD_4bitCodeNoWait *****************
  5726 ;; Defined at:
  5727 ;;		line 64 in file "LCD-library/LCD-library.c"
  5728 ;; Parameters:    Size  Location     Type
  5729 ;;  code            2    0[COMRAM] int 
  5730 ;; Auto vars:     Size  Location     Type
  5731 ;;		None
  5732 ;; Return value:  Size  Location     Type
  5733 ;;                  1    wreg      void 
  5734 ;; Registers used:
  5735 ;;		wreg, status,2, status,0
  5736 ;; Tracked objects:
  5737 ;;		On entry : 0/0
  5738 ;;		On exit  : 0/0
  5739 ;;		Unchanged: 0/0
  5740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5741 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5743 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5744 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5745 ;;Total ram usage:        5 bytes
  5746 ;; Hardware stack levels used: 1
  5747 ;; This function calls:
  5748 ;;		Nothing
  5749 ;; This function is called by:
  5750 ;;		i2_LCD_4bitCode
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           	psect	text52
  5755   001DD8                     __ptext52:
  5756                           	callstack 0
  5757   001DD8                     i2_LCD_4bitCodeNoWait:
  5758                           	callstack 16
  5759   001DD8                     
  5760                           ;LCD-library/LCD-library.c: 65:     PORTHbits.RH2 = (code & 0b100000) >> 5;
  5761   001DD8  C001  F003         	movff	i2LCD_4bitCodeNoWait@code,??i2_LCD_4bitCodeNoWait
  5762   001DDC  C002  F004         	movff	i2LCD_4bitCodeNoWait@code+1,??i2_LCD_4bitCodeNoWait+1
  5763   001DE0  0E05               	movlw	5
  5764   001DE2  6E05               	movwf	(??i2_LCD_4bitCodeNoWait+2)^0,c
  5765   001DE4                     i2u116_45:
  5766   001DE4  3404               	rlcf	(??i2_LCD_4bitCodeNoWait+1)^0,w,c
  5767   001DE6  3204               	rrcf	(??i2_LCD_4bitCodeNoWait+1)^0,f,c
  5768   001DE8  3203               	rrcf	??i2_LCD_4bitCodeNoWait^0,f,c
  5769   001DEA  2E05               	decfsz	(??i2_LCD_4bitCodeNoWait+2)^0,f,c
  5770   001DEC  EFF2  F00E         	goto	i2u116_45
  5771   001DF0  0E01               	movlw	1
  5772   001DF2  1603               	andwf	??i2_LCD_4bitCodeNoWait^0,f,c
  5773   001DF4  4603               	rlncf	??i2_LCD_4bitCodeNoWait^0,f,c
  5774   001DF6  4603               	rlncf	??i2_LCD_4bitCodeNoWait^0,f,c
  5775   001DF8  5087               	movf	135,w,c	;volatile
  5776   001DFA  1803               	xorwf	??i2_LCD_4bitCodeNoWait^0,w,c
  5777   001DFC  0BFB               	andlw	-5
  5778   001DFE  1803               	xorwf	??i2_LCD_4bitCodeNoWait^0,w,c
  5779   001E00  6E87               	movwf	135,c	;volatile
  5780                           
  5781                           ;LCD-library/LCD-library.c: 66:     PORTHbits.RH1 = (code & 0b010000) >> 4;
  5782   001E02  C001  F003         	movff	i2LCD_4bitCodeNoWait@code,??i2_LCD_4bitCodeNoWait
  5783   001E06  C002  F004         	movff	i2LCD_4bitCodeNoWait@code+1,??i2_LCD_4bitCodeNoWait+1
  5784   001E0A  0E04               	movlw	4
  5785   001E0C  6E05               	movwf	(??i2_LCD_4bitCodeNoWait+2)^0,c
  5786   001E0E                     i2u117_45:
  5787   001E0E  3404               	rlcf	(??i2_LCD_4bitCodeNoWait+1)^0,w,c
  5788   001E10  3204               	rrcf	(??i2_LCD_4bitCodeNoWait+1)^0,f,c
  5789   001E12  3203               	rrcf	??i2_LCD_4bitCodeNoWait^0,f,c
  5790   001E14  2E05               	decfsz	(??i2_LCD_4bitCodeNoWait+2)^0,f,c
  5791   001E16  EF07  F00F         	goto	i2u117_45
  5792   001E1A  0E01               	movlw	1
  5793   001E1C  1603               	andwf	??i2_LCD_4bitCodeNoWait^0,f,c
  5794   001E1E  4603               	rlncf	??i2_LCD_4bitCodeNoWait^0,f,c
  5795   001E20  5087               	movf	135,w,c	;volatile
  5796   001E22  1803               	xorwf	??i2_LCD_4bitCodeNoWait^0,w,c
  5797   001E24  0BFD               	andlw	-3
  5798   001E26  1803               	xorwf	??i2_LCD_4bitCodeNoWait^0,w,c
  5799   001E28  6E87               	movwf	135,c	;volatile
  5800                           
  5801                           ;LCD-library/LCD-library.c: 67:     PORTE &= 0b00001111;
  5802   001E2A  0E0F               	movlw	15
  5803   001E2C  1684               	andwf	132,f,c	;volatile
  5804                           
  5805                           ;LCD-library/LCD-library.c: 68:     PORTE |= (code & 0b001111) << 4;
  5806   001E2E  C001  F003         	movff	i2LCD_4bitCodeNoWait@code,??i2_LCD_4bitCodeNoWait	;volatile
  5807   001E32  0E0F               	movlw	15
  5808   001E34  1603               	andwf	??i2_LCD_4bitCodeNoWait^0,f,c
  5809   001E36  3803               	swapf	??i2_LCD_4bitCodeNoWait^0,w,c
  5810   001E38  0BF0               	andlw	240
  5811   001E3A  1284               	iorwf	132,f,c	;volatile
  5812   001E3C                     
  5813                           ;LCD-library/LCD-library.c: 69:     PORTHbits.RH0 = 1;
  5814   001E3C  8087               	bsf	135,0,c	;volatile
  5815   001E3E                     
  5816                           ;LCD-library/LCD-library.c: 70:     PORTHbits.RH0 = 0;
  5817   001E3E  9087               	bcf	135,0,c	;volatile
  5818   001E40  0012               	return		;funcret
  5819   001E42                     __end_ofi2_LCD_4bitCodeNoWait:
  5820                           	callstack 0
  5821                           
  5822 ;; *************** function _EUSART1_Receive_ISR *****************
  5823 ;; Defined at:
  5824 ;;		line 208 in file "mcc_generated_files/eusart1.c"
  5825 ;; Parameters:    Size  Location     Type
  5826 ;;		None
  5827 ;; Auto vars:     Size  Location     Type
  5828 ;;		None
  5829 ;; Return value:  Size  Location     Type
  5830 ;;                  1    wreg      void 
  5831 ;; Registers used:
  5832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  5833 ;; Tracked objects:
  5834 ;;		On entry : 0/0
  5835 ;;		On exit  : 0/0
  5836 ;;		Unchanged: 0/0
  5837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5842 ;;Total ram usage:        0 bytes
  5843 ;; Hardware stack levels used: 1
  5844 ;; Hardware stack levels required when called: 2
  5845 ;; This function calls:
  5846 ;;		NULL
  5847 ;;		_EUSART1_DefaultErrorHandler
  5848 ;;		_EUSART1_DefaultFramingErrorHandler
  5849 ;;		_EUSART1_DefaultOverrunErrorHandler
  5850 ;;		_EUSART1_RxDataHandler
  5851 ;; This function is called by:
  5852 ;;		_PrintOnScreen
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           
  5856                           	psect	text53
  5857   0019F4                     __ptext53:
  5858                           	callstack 0
  5859   0019F4                     _EUSART1_Receive_ISR:
  5860                           	callstack 18
  5861   0019F4                     
  5862                           ;mcc_generated_files/eusart1.c: 211:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  5863   0019F4  0E2C               	movlw	low _eusart1RxStatusBuffer
  5864   0019F6  2446               	addwf	_eusart1RxHead^0,w,c	;volatile
  5865   0019F8  6ED9               	movwf	fsr2l,c
  5866   0019FA  6ADA               	clrf	fsr2h,c
  5867   0019FC  0E00               	movlw	high _eusart1RxStatusBuffer
  5868   0019FE  22DA               	addwfc	fsr2h,f,c
  5869   001A00  6ADF               	clrf	indf2,c
  5870   001A02                     
  5871                           ;mcc_generated_files/eusart1.c: 213:     if(RCSTA1bits.FERR){
  5872   001A02  A4AB               	btfss	171,2,c	;volatile
  5873   001A04  EF06  F00D         	goto	i2u178_41
  5874   001A08  EF08  F00D         	goto	i2u178_40
  5875   001A0C                     i2u178_41:
  5876   001A0C  EF1D  F00D         	goto	i2l2853
  5877   001A10                     i2u178_40:
  5878   001A10                     
  5879                           ;mcc_generated_files/eusart1.c: 214:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  5880   001A10  0E2C               	movlw	low _eusart1RxStatusBuffer
  5881   001A12  2446               	addwf	_eusart1RxHead^0,w,c	;volatile
  5882   001A14  6ED9               	movwf	fsr2l,c
  5883   001A16  6ADA               	clrf	fsr2h,c
  5884   001A18  0E00               	movlw	high _eusart1RxStatusBuffer
  5885   001A1A  22DA               	addwfc	fsr2h,f,c
  5886   001A1C  82DF               	bsf	indf2,1,c
  5887   001A1E                     
  5888                           ;mcc_generated_files/eusart1.c: 215:         EUSART1_FramingErrorHandler();
  5889   001A1E  D802               	call	i2u179_48
  5890   001A20  EF1D  F00D         	goto	i2u179_49
  5891   001A24                     i2u179_48:
  5892   001A24  0005               	push	
  5893   001A26  6EFA               	movwf	pclath,c
  5894   001A28  0100               	movlb	0	; () banked
  5895   001A2A  51E9               	movf	_EUSART1_FramingErrorHandler& (0+255),w,b
  5896   001A2C  6EFD               	movwf	tosl,c
  5897   001A2E  51EA               	movf	(_EUSART1_FramingErrorHandler+1)& (0+255),w,b
  5898   001A30  6EFE               	movwf	tosh,c
  5899   001A32  51EB               	movf	(_EUSART1_FramingErrorHandler+2)& (0+255),w,b
  5900   001A34  6EFF               	movwf	tosu,c
  5901   001A36  50FA               	movf	pclath,w,c
  5902   001A38  0012               	return		;indir
  5903   001A3A                     i2u179_49:
  5904   001A3A                     i2l2853:
  5905                           
  5906                           ;mcc_generated_files/eusart1.c: 218:     if(RCSTA1bits.OERR){
  5907   001A3A  A2AB               	btfss	171,1,c	;volatile
  5908   001A3C  EF22  F00D         	goto	i2u180_41
  5909   001A40  EF24  F00D         	goto	i2u180_40
  5910   001A44                     i2u180_41:
  5911   001A44  EF39  F00D         	goto	i2l2859
  5912   001A48                     i2u180_40:
  5913   001A48                     
  5914                           ;mcc_generated_files/eusart1.c: 219:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  5915   001A48  0E2C               	movlw	low _eusart1RxStatusBuffer
  5916   001A4A  2446               	addwf	_eusart1RxHead^0,w,c	;volatile
  5917   001A4C  6ED9               	movwf	fsr2l,c
  5918   001A4E  6ADA               	clrf	fsr2h,c
  5919   001A50  0E00               	movlw	high _eusart1RxStatusBuffer
  5920   001A52  22DA               	addwfc	fsr2h,f,c
  5921   001A54  84DF               	bsf	indf2,2,c
  5922   001A56                     
  5923                           ;mcc_generated_files/eusart1.c: 220:         EUSART1_OverrunErrorHandler();
  5924   001A56  D802               	call	i2u181_48
  5925   001A58  EF39  F00D         	goto	i2u181_49
  5926   001A5C                     i2u181_48:
  5927   001A5C  0005               	push	
  5928   001A5E  6EFA               	movwf	pclath,c
  5929   001A60  0100               	movlb	0	; () banked
  5930   001A62  51E6               	movf	_EUSART1_OverrunErrorHandler& (0+255),w,b
  5931   001A64  6EFD               	movwf	tosl,c
  5932   001A66  51E7               	movf	(_EUSART1_OverrunErrorHandler+1)& (0+255),w,b
  5933   001A68  6EFE               	movwf	tosh,c
  5934   001A6A  51E8               	movf	(_EUSART1_OverrunErrorHandler+2)& (0+255),w,b
  5935   001A6C  6EFF               	movwf	tosu,c
  5936   001A6E  50FA               	movf	pclath,w,c
  5937   001A70  0012               	return		;indir
  5938   001A72                     i2u181_49:
  5939   001A72                     i2l2859:
  5940                           
  5941                           ;mcc_generated_files/eusart1.c: 223:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  5942   001A72  0E2C               	movlw	low _eusart1RxStatusBuffer
  5943   001A74  2446               	addwf	_eusart1RxHead^0,w,c	;volatile
  5944   001A76  6ED9               	movwf	fsr2l,c
  5945   001A78  6ADA               	clrf	fsr2h,c
  5946   001A7A  0E00               	movlw	high _eusart1RxStatusBuffer
  5947   001A7C  22DA               	addwfc	fsr2h,f,c
  5948   001A7E  50DF               	movf	indf2,w,c
  5949   001A80  B4D8               	btfsc	status,2,c
  5950   001A82  EF45  F00D         	goto	i2u182_41
  5951   001A86  EF47  F00D         	goto	i2u182_40
  5952   001A8A                     i2u182_41:
  5953   001A8A  EF57  F00D         	goto	i2l2863
  5954   001A8E                     i2u182_40:
  5955   001A8E                     
  5956                           ;mcc_generated_files/eusart1.c: 224:         EUSART1_ErrorHandler();
  5957   001A8E  D802               	call	i2u183_48
  5958   001A90  EF55  F00D         	goto	i2u183_49
  5959   001A94                     i2u183_48:
  5960   001A94  0005               	push	
  5961   001A96  6EFA               	movwf	pclath,c
  5962   001A98  0100               	movlb	0	; () banked
  5963   001A9A  51E3               	movf	_EUSART1_ErrorHandler& (0+255),w,b
  5964   001A9C  6EFD               	movwf	tosl,c
  5965   001A9E  51E4               	movf	(_EUSART1_ErrorHandler+1)& (0+255),w,b
  5966   001AA0  6EFE               	movwf	tosh,c
  5967   001AA2  51E5               	movf	(_EUSART1_ErrorHandler+2)& (0+255),w,b
  5968   001AA4  6EFF               	movwf	tosu,c
  5969   001AA6  50FA               	movf	pclath,w,c
  5970   001AA8  0012               	return		;indir
  5971   001AAA                     i2u183_49:
  5972                           
  5973                           ;mcc_generated_files/eusart1.c: 225:     } else {
  5974   001AAA  EF59  F00D         	goto	i2l410
  5975   001AAE                     i2l2863:
  5976                           
  5977                           ;mcc_generated_files/eusart1.c: 226:         EUSART1_RxDataHandler();
  5978   001AAE  ECB9  F011         	call	_EUSART1_RxDataHandler	;wreg free
  5979   001AB2                     i2l410:
  5980   001AB2  0012               	return		;funcret
  5981   001AB4                     __end_of_EUSART1_Receive_ISR:
  5982                           	callstack 0
  5983                           
  5984 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  5985 ;; Defined at:
  5986 ;;		line 244 in file "mcc_generated_files/eusart1.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;		None
  5989 ;; Auto vars:     Size  Location     Type
  5990 ;;		None
  5991 ;; Return value:  Size  Location     Type
  5992 ;;                  1    wreg      void 
  5993 ;; Registers used:
  5994 ;;		None
  5995 ;; Tracked objects:
  5996 ;;		On entry : 0/0
  5997 ;;		On exit  : 0/0
  5998 ;;		Unchanged: 0/0
  5999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6004 ;;Total ram usage:        0 bytes
  6005 ;; Hardware stack levels used: 1
  6006 ;; This function calls:
  6007 ;;		Nothing
  6008 ;; This function is called by:
  6009 ;;		_EUSART1_Initialize
  6010 ;;		_EUSART1_Receive_ISR
  6011 ;; This function uses a non-reentrant model
  6012 ;;
  6013                           
  6014                           	psect	text54
  6015   0024B0                     __ptext54:
  6016                           	callstack 0
  6017   0024B0                     _EUSART1_DefaultOverrunErrorHandler:
  6018                           	callstack 19
  6019   0024B0                     
  6020                           ;mcc_generated_files/eusart1.c: 247:     RCSTA1bits.CREN = 0;
  6021   0024B0  98AB               	bcf	171,4,c	;volatile
  6022                           
  6023                           ;mcc_generated_files/eusart1.c: 248:     RCSTA1bits.CREN = 1;
  6024   0024B2  88AB               	bsf	171,4,c	;volatile
  6025   0024B4  0012               	return		;funcret
  6026   0024B6                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  6027                           	callstack 0
  6028                           
  6029 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  6030 ;; Defined at:
  6031 ;;		line 242 in file "mcc_generated_files/eusart1.c"
  6032 ;; Parameters:    Size  Location     Type
  6033 ;;		None
  6034 ;; Auto vars:     Size  Location     Type
  6035 ;;		None
  6036 ;; Return value:  Size  Location     Type
  6037 ;;                  1    wreg      void 
  6038 ;; Registers used:
  6039 ;;		None
  6040 ;; Tracked objects:
  6041 ;;		On entry : 0/0
  6042 ;;		On exit  : 0/0
  6043 ;;		Unchanged: 0/0
  6044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6049 ;;Total ram usage:        0 bytes
  6050 ;; Hardware stack levels used: 1
  6051 ;; This function calls:
  6052 ;;		Nothing
  6053 ;; This function is called by:
  6054 ;;		_EUSART1_Initialize
  6055 ;;		_EUSART1_Receive_ISR
  6056 ;; This function uses a non-reentrant model
  6057 ;;
  6058                           
  6059                           	psect	text55
  6060   0024C2                     __ptext55:
  6061                           	callstack 0
  6062   0024C2                     _EUSART1_DefaultFramingErrorHandler:
  6063                           	callstack 19
  6064   0024C2  0012               	return		;funcret
  6065   0024C4                     __end_of_EUSART1_DefaultFramingErrorHandler:
  6066                           	callstack 0
  6067                           
  6068 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  6069 ;; Defined at:
  6070 ;;		line 252 in file "mcc_generated_files/eusart1.c"
  6071 ;; Parameters:    Size  Location     Type
  6072 ;;		None
  6073 ;; Auto vars:     Size  Location     Type
  6074 ;;		None
  6075 ;; Return value:  Size  Location     Type
  6076 ;;                  1    wreg      void 
  6077 ;; Registers used:
  6078 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6079 ;; Tracked objects:
  6080 ;;		On entry : 0/0
  6081 ;;		On exit  : 0/0
  6082 ;;		Unchanged: 0/0
  6083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6088 ;;Total ram usage:        0 bytes
  6089 ;; Hardware stack levels used: 1
  6090 ;; Hardware stack levels required when called: 1
  6091 ;; This function calls:
  6092 ;;		_EUSART1_RxDataHandler
  6093 ;; This function is called by:
  6094 ;;		_EUSART1_Initialize
  6095 ;;		_EUSART1_Receive_ISR
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           	psect	text56
  6100   0024B6                     __ptext56:
  6101                           	callstack 0
  6102   0024B6                     _EUSART1_DefaultErrorHandler:
  6103                           	callstack 18
  6104   0024B6                     
  6105                           ;mcc_generated_files/eusart1.c: 253:     EUSART1_RxDataHandler();
  6106   0024B6  ECB9  F011         	call	_EUSART1_RxDataHandler	;wreg free
  6107   0024BA  0012               	return		;funcret
  6108   0024BC                     __end_of_EUSART1_DefaultErrorHandler:
  6109                           	callstack 0
  6110                           
  6111 ;; *************** function _EUSART1_RxDataHandler *****************
  6112 ;; Defined at:
  6113 ;;		line 232 in file "mcc_generated_files/eusart1.c"
  6114 ;; Parameters:    Size  Location     Type
  6115 ;;		None
  6116 ;; Auto vars:     Size  Location     Type
  6117 ;;		None
  6118 ;; Return value:  Size  Location     Type
  6119 ;;                  1    wreg      void 
  6120 ;; Registers used:
  6121 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6122 ;; Tracked objects:
  6123 ;;		On entry : 0/0
  6124 ;;		On exit  : 0/0
  6125 ;;		Unchanged: 0/0
  6126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6131 ;;Total ram usage:        0 bytes
  6132 ;; Hardware stack levels used: 1
  6133 ;; This function calls:
  6134 ;;		Nothing
  6135 ;; This function is called by:
  6136 ;;		_EUSART1_Receive_ISR
  6137 ;;		_EUSART1_DefaultErrorHandler
  6138 ;; This function uses a non-reentrant model
  6139 ;;
  6140                           
  6141                           	psect	text57
  6142   002372                     __ptext57:
  6143                           	callstack 0
  6144   002372                     _EUSART1_RxDataHandler:
  6145                           	callstack 19
  6146   002372                     
  6147                           ;mcc_generated_files/eusart1.c: 234:     eusart1RxBuffer[eusart1RxHead++] = RCREG1;
  6148   002372  0E34               	movlw	low _eusart1RxBuffer
  6149   002374  2446               	addwf	_eusart1RxHead^0,w,c	;volatile
  6150   002376  6ED9               	movwf	fsr2l,c
  6151   002378  6ADA               	clrf	fsr2h,c
  6152   00237A  0E00               	movlw	high _eusart1RxBuffer
  6153   00237C  22DA               	addwfc	fsr2h,f,c
  6154   00237E  CFAE FFDF          	movff	4014,indf2	;volatile
  6155   002382  2A46               	incf	_eusart1RxHead^0,f,c	;volatile
  6156   002384                     
  6157                           ;mcc_generated_files/eusart1.c: 235:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  6158   002384  0E07               	movlw	7
  6159   002386  6446               	cpfsgt	_eusart1RxHead^0,c	;volatile
  6160   002388  EFC8  F011         	goto	i2u149_41
  6161   00238C  EFCA  F011         	goto	i2u149_40
  6162   002390                     i2u149_41:
  6163   002390  EFCC  F011         	goto	i2l2609
  6164   002394                     i2u149_40:
  6165   002394                     
  6166                           ;mcc_generated_files/eusart1.c: 236:     {;mcc_generated_files/eusart1.c: 237:         e
      +                          usart1RxHead = 0;
  6167   002394  0E00               	movlw	0
  6168   002396  6E46               	movwf	_eusart1RxHead^0,c	;volatile
  6169   002398                     i2l2609:
  6170                           
  6171                           ;mcc_generated_files/eusart1.c: 239:     eusart1RxCount++;
  6172   002398  2A44               	incf	_eusart1RxCount^0,f,c	;volatile
  6173   00239A  0012               	return		;funcret
  6174   00239C                     __end_of_EUSART1_RxDataHandler:
  6175                           	callstack 0
  6176                           
  6177 ;; *************** function _EUSART1_Read *****************
  6178 ;; Defined at:
  6179 ;;		line 175 in file "mcc_generated_files/eusart1.c"
  6180 ;; Parameters:    Size  Location     Type
  6181 ;;		None
  6182 ;; Auto vars:     Size  Location     Type
  6183 ;;  readValue       1    0[COMRAM] unsigned char 
  6184 ;; Return value:  Size  Location     Type
  6185 ;;                  1    wreg      unsigned char 
  6186 ;; Registers used:
  6187 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6188 ;; Tracked objects:
  6189 ;;		On entry : 0/0
  6190 ;;		On exit  : 0/0
  6191 ;;		Unchanged: 0/0
  6192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6194 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6196 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6197 ;;Total ram usage:        1 bytes
  6198 ;; Hardware stack levels used: 1
  6199 ;; This function calls:
  6200 ;;		Nothing
  6201 ;; This function is called by:
  6202 ;;		_PrintOnScreen
  6203 ;; This function uses a non-reentrant model
  6204 ;;
  6205                           
  6206                           	psect	text58
  6207   001F38                     __ptext58:
  6208                           	callstack 0
  6209   001F38                     _EUSART1_Read:
  6210                           	callstack 20
  6211   001F38                     i2l2867:
  6212                           
  6213                           ;mcc_generated_files/eusart1.c: 179:     while(0 == eusart1RxCount)
  6214   001F38  5044               	movf	_eusart1RxCount^0,w,c	;volatile
  6215   001F3A  B4D8               	btfsc	status,2,c
  6216   001F3C  EFA2  F00F         	goto	i2u184_41
  6217   001F40  EFA4  F00F         	goto	i2u184_40
  6218   001F44                     i2u184_41:
  6219   001F44  EF9C  F00F         	goto	i2l2867
  6220   001F48                     i2u184_40:
  6221   001F48                     
  6222                           ;mcc_generated_files/eusart1.c: 183:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  6223   001F48  0E2C               	movlw	low _eusart1RxStatusBuffer
  6224   001F4A  2445               	addwf	_eusart1RxTail^0,w,c	;volatile
  6225   001F4C  6ED9               	movwf	fsr2l,c
  6226   001F4E  6ADA               	clrf	fsr2h,c
  6227   001F50  0E00               	movlw	high _eusart1RxStatusBuffer
  6228   001F52  22DA               	addwfc	fsr2h,f,c
  6229   001F54  50DF               	movf	indf2,w,c
  6230   001F56  6E43               	movwf	_eusart1RxLastError^0,c	;volatile
  6231                           
  6232                           ;mcc_generated_files/eusart1.c: 185:     readValue = eusart1RxBuffer[eusart1RxTail++];
  6233   001F58  0E34               	movlw	low _eusart1RxBuffer
  6234   001F5A  2445               	addwf	_eusart1RxTail^0,w,c	;volatile
  6235   001F5C  6ED9               	movwf	fsr2l,c
  6236   001F5E  6ADA               	clrf	fsr2h,c
  6237   001F60  0E00               	movlw	high _eusart1RxBuffer
  6238   001F62  22DA               	addwfc	fsr2h,f,c
  6239   001F64  50DF               	movf	indf2,w,c
  6240   001F66  6E01               	movwf	EUSART1_Read@readValue^0,c
  6241   001F68  2A45               	incf	_eusart1RxTail^0,f,c	;volatile
  6242   001F6A                     
  6243                           ;mcc_generated_files/eusart1.c: 186:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  6244   001F6A  0E07               	movlw	7
  6245   001F6C  6445               	cpfsgt	_eusart1RxTail^0,c	;volatile
  6246   001F6E  EFBB  F00F         	goto	i2u185_41
  6247   001F72  EFBD  F00F         	goto	i2u185_40
  6248   001F76                     i2u185_41:
  6249   001F76  EFBF  F00F         	goto	i2l2877
  6250   001F7A                     i2u185_40:
  6251   001F7A                     
  6252                           ;mcc_generated_files/eusart1.c: 187:     {;mcc_generated_files/eusart1.c: 188:         e
      +                          usart1RxTail = 0;
  6253   001F7A  0E00               	movlw	0
  6254   001F7C  6E45               	movwf	_eusart1RxTail^0,c	;volatile
  6255   001F7E                     i2l2877:
  6256                           
  6257                           ;mcc_generated_files/eusart1.c: 190:     PIE1bits.RC1IE = 0;
  6258   001F7E  9A9D               	bcf	157,5,c	;volatile
  6259   001F80                     
  6260                           ;mcc_generated_files/eusart1.c: 191:     eusart1RxCount--;
  6261   001F80  0644               	decf	_eusart1RxCount^0,f,c	;volatile
  6262   001F82                     
  6263                           ;mcc_generated_files/eusart1.c: 192:     PIE1bits.RC1IE = 1;
  6264   001F82  8A9D               	bsf	157,5,c	;volatile
  6265   001F84                     
  6266                           ;mcc_generated_files/eusart1.c: 194:     return readValue;
  6267   001F84  5001               	movf	EUSART1_Read@readValue^0,w,c
  6268   001F86  0012               	return		;funcret
  6269   001F88                     __end_of_EUSART1_Read:
  6270                           	callstack 0
  6271                           
  6272                           	psect	text59
  6273   000000                     __ptext59:
  6274                           	callstack 0
  6275   000000                     
  6276                           	psect	rparam
  6277   000000                     
  6278                           	psect	temp
  6279   000056                     btemp:
  6280                           	callstack 0
  6281   000056                     	ds	1
  6282   000000                     int$flags	set	btemp
  6283   000000                     wtemp8	set	btemp+1
  6284   000000                     ttemp5	set	btemp+1
  6285   000000                     ttemp6	set	btemp+4
  6286   000000                     ttemp7	set	btemp+8
  6287                           
  6288                           	psect	config
  6289                           
  6290                           ;Config register CONFIG1L @ 0x1FFF8
  6291                           ;	Watchdog Timer Enable bit
  6292                           ;	WDT = OFF, WDT disabled (control is placed on SWDTEN bit)
  6293                           ;	Stack Overflow/Underflow Reset Enable bit
  6294                           ;	STVR = ON, Reset on stack overflow/underflow enabled
  6295                           ;	Extended Instruction Set Enable bit
  6296                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6297                           ;	Background Debugger Enable bit
  6298                           ;	DEBUG = OFF, Background debugger disabled; RB6 and RB7 configured as general purpose I
      +                          /O pins
  6299   01FFF8                     	org	131064
  6300   01FFF8  A0                 	db	160
  6301                           
  6302                           ;Config register CONFIG1H @ 0x1FFF9
  6303                           ;	Code Protection bit
  6304                           ;	CP0 = OFF, Program memory is not code-protected
  6305   01FFF9                     	org	131065
  6306   01FFF9  F4                 	db	244
  6307                           
  6308                           ;Config register CONFIG2L @ 0x1FFFA
  6309                           ;	Oscillator Selection bits
  6310                           ;	FOSC = HS, HS oscillator
  6311                           ;	Default/Reset System Clock Select bit
  6312                           ;	FOSC2 = ON, Clock selected by FOSC1:FOSC0 as system clock is enabled when OSCCON<1:0> 
      +                          = 00
  6313                           ;	Fail-Safe Clock Monitor Enable
  6314                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  6315                           ;	Two-Speed Start-up (Internal/External Oscillator Switchover) Control bit
  6316                           ;	IESO = ON, Two-Speed Start-up enabled
  6317   01FFFA                     	org	131066
  6318   01FFFA  C4                 	db	196
  6319                           
  6320                           ;Config register CONFIG2H @ 0x1FFFB
  6321                           ;	Watchdog Timer Postscaler Select bits
  6322                           ;	WDTPS = 32768, 1:32768
  6323   01FFFB                     	org	131067
  6324   01FFFB  FF                 	db	255
  6325                           
  6326                           ;Config register CONFIG3L @ 0x1FFFC
  6327                           ;	External Address Bus Shift Enable bit
  6328                           ;	EASHFT = ON, Address shifting enabled; address on external bus is offset to start at 0
      +                          00000h
  6329                           ;	External Memory Bus
  6330                           ;	MODE = MM, Microcontroller mode, external bus disabled
  6331                           ;	Data Bus Width Select bit
  6332                           ;	BW = 16, 16-Bit Data Width mode
  6333                           ;	External Bus Wait Enable bit
  6334                           ;	WAIT = OFF, Wait states for operations on external memory bus disabled
  6335   01FFFC                     	org	131068
  6336   01FFFC  F8                 	db	248
  6337                           
  6338                           ;Config register CONFIG3H @ 0x1FFFD
  6339                           ;	ECCP2 MUX bit
  6340                           ;	CCP2MX = ON, ECCP2/P2A is multiplexed with RC1
  6341                           ;	ECCP MUX bit
  6342                           ;	ECCPMX = ON, ECCP1 outputs (P1B/P1C) are multiplexed with RE6 and RE5; ECCP3 outputs (
      +                          P3B/P3C) are multiplexed with RE4 and RE3
  6343                           ;	Ethernet LED Enable bit
  6344                           ;	ETHLED = ON, RA0/RA1 are multiplexed with LEDA/LEDB when Ethernet module is enabled an
      +                          d function as I/O when Ethernet is disabled
  6345   01FFFD                     	org	131069
  6346   01FFFD  F7                 	db	247
  6347                           tosu	equ	0xFFF
  6348                           tosh	equ	0xFFE
  6349                           tosl	equ	0xFFD
  6350                           stkptr	equ	0xFFC
  6351                           pclatu	equ	0xFFB
  6352                           pclath	equ	0xFFA
  6353                           pcl	equ	0xFF9
  6354                           tblptru	equ	0xFF8
  6355                           tblptrh	equ	0xFF7
  6356                           tblptrl	equ	0xFF6
  6357                           tablat	equ	0xFF5
  6358                           prodh	equ	0xFF4
  6359                           prodl	equ	0xFF3
  6360                           indf0	equ	0xFEF
  6361                           postinc0	equ	0xFEE
  6362                           postdec0	equ	0xFED
  6363                           preinc0	equ	0xFEC
  6364                           plusw0	equ	0xFEB
  6365                           fsr0h	equ	0xFEA
  6366                           fsr0l	equ	0xFE9
  6367                           wreg	equ	0xFE8
  6368                           indf1	equ	0xFE7
  6369                           postinc1	equ	0xFE6
  6370                           postdec1	equ	0xFE5
  6371                           preinc1	equ	0xFE4
  6372                           plusw1	equ	0xFE3
  6373                           fsr1h	equ	0xFE2
  6374                           fsr1l	equ	0xFE1
  6375                           bsr	equ	0xFE0
  6376                           indf2	equ	0xFDF
  6377                           postinc2	equ	0xFDE
  6378                           postdec2	equ	0xFDD
  6379                           preinc2	equ	0xFDC
  6380                           plusw2	equ	0xFDB
  6381                           fsr2h	equ	0xFDA
  6382                           fsr2l	equ	0xFD9
  6383                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    0
    Data        12
    BSS         99
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      85
    BANK0           160     91     140
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          128      0       0
    BANK15           96      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 35
		 -> command(BANK0[35]), LCD_PrintNum@strNumber(COMRAM[20]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 35
		 -> command(BANK0[35]), LCD_PrintNum@strNumber(COMRAM[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S1996$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> main@PotValue(BANK0[5]), LCD_PrintNum@strNumber(COMRAM[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1943$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1943$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> PrintOnScreen(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), PrintOnScreen(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(3) Largest target is 1
		 -> NULL(), EUSART1_DefaultFramingErrorHandler(), 

    LCD_PrintStr@str	PTR const unsigned char  size(2) Largest target is 35
		 -> command(BANK0[35]), LCD_PrintNum@strNumber(COMRAM[20]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_PrintOnScreen
    _PrintOnScreen->_LCD_PrintStr
    _LCD_PrintStr->_LCD_PrintChar
    _LCD_PrintChar->_LCD_MoveCursorLeft
    _LCD_PrintChar->_LCD_MoveCursorRight
    _LCD_MoveCursorRight->i2_LCD_SetCursorAt
    _LCD_MoveCursorLeft->i2_LCD_SetCursorAt
    i2_LCD_SetCursorAt->i2_LCD_Code
    _LCD_Clear->i2_LCD_Code
    i2_LCD_Code->i2_LCD_4bitCode
    i2_LCD_Code->i2_LCD_8bitCode
    i2_LCD_8bitCode->i2_LCD_8bitCodeNoWait
    i2_LCD_4bitCode->i2_LCD_4bitCodeNoWait
    i2_LCD_Wait->i2___delay
    i2_LCD_Wait->i2__delay_us

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _LCD_Init->_LCD_SetCursorAt
    _LCD_SetCursorAt->_LCD_Code
    _LCD_Code->_LCD_4bitCode
    _LCD_Code->_LCD_8bitCode
    _LCD_8bitCode->_LCD_8bitCodeNoWait
    _LCD_4bitCode->_LCD_4bitCodeNoWait
    _LCD_Wait->___delay
    _LCD_Wait->__delay_us

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   25605
                                             84 BANK0      7     7      0
                  _ADC_GetConversion
                      _EUSART1_Write
                           _LCD_Init
                  _SYSTEM_Initialize
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    16      8    7462
                                             62 BANK0     22    14      8
                  _ADC_GetConversion (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6796
                                             54 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           19    13      6    6335
                                             40 BANK0     14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                13     9      4    4768
                                             27 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2533
                                             16 BANK0     11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1177
                                              9 BANK0      7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              0 BANK0      9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              6 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     484
                     _ADC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     484
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              3     0      3     121
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                            12    12      0   17523
                                             15 BANK0      6     6      0
                       _LCD_4bitCode
                 _LCD_4bitCodeNoWait
                       _LCD_8bitCode
                 _LCD_8bitCodeNoWait
                    _LCD_SetCursorAt
                          __delay_ms
                          __delay_us
 ---------------------------------------------------------------------------------
 (2) __delay_ms                                            5     3      2     663
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _LCD_SetCursorAt                                      6     2      4    8974
                                              9 BANK0      6     2      4
                           _LCD_Code
 ---------------------------------------------------------------------------------
 (3) _LCD_Code                                             2     0      2    7324
                                              7 BANK0      2     0      2
                       _LCD_4bitCode
                       _LCD_8bitCode
 ---------------------------------------------------------------------------------
 (4) _LCD_8bitCode                                         2     0      2    2690
                                              5 BANK0      2     0      2
                 _LCD_8bitCodeNoWait
                           _LCD_Wait
 ---------------------------------------------------------------------------------
 (5) _LCD_8bitCodeNoWait                                   5     3      2     453
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _LCD_4bitCode                                         2     0      2    3320
                                              5 BANK0      2     0      2
                 _LCD_4bitCodeNoWait
                           _LCD_Wait
 ---------------------------------------------------------------------------------
 (5) _LCD_Wait                                             0     0      0    1666
                            ___delay
                          __delay_us
 ---------------------------------------------------------------------------------
 (2) __delay_us                                            5     3      2     518
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) ___delay                                              5     3      2    1148
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) _LCD_4bitCodeNoWait                                   5     3      2     453
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      31
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           6     6      0   14488
                                             37 COMRAM     6     6      0
                                NULL *
                      _PrintOnScreen *
 ---------------------------------------------------------------------------------
 (10) _PrintOnScreen                                       8     8      0   14488
                                             29 COMRAM     8     8      0
                       _EUSART1_Read
                _EUSART1_Receive_ISR
                          _LCD_Clear
                       _LCD_PrintStr
                             _strlen
 ---------------------------------------------------------------------------------
 (11) _LCD_PrintStr                                        9     7      2   12357
                                             20 COMRAM     9     7      2
                 _LCD_MoveCursorLeft
                _LCD_MoveCursorRight
                      _LCD_PrintChar
                             _strlen
                  i2_LCD_SetCursorAt
 ---------------------------------------------------------------------------------
 (11) _strlen                                              4     2      2     470
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (12) _LCD_PrintChar                                       1     1      0    5574
                                             19 COMRAM     1     1      0
                 _LCD_MoveCursorLeft
                _LCD_MoveCursorRight
                         i2_LCD_Code
 ---------------------------------------------------------------------------------
 (13) _LCD_MoveCursorRight                                 4     2      2    2084
                                             15 COMRAM     4     2      2
                  i2_LCD_SetCursorAt
 ---------------------------------------------------------------------------------
 (13) _LCD_MoveCursorLeft                                  4     2      2    2084
                                             15 COMRAM     4     2      2
                  i2_LCD_SetCursorAt
 ---------------------------------------------------------------------------------
 (12) i2_LCD_SetCursorAt                                   6     2      4    1812
                                              9 COMRAM     6     2      4
                         i2_LCD_Code
 ---------------------------------------------------------------------------------
 (11) _LCD_Clear                                           0     0      0    1456
                         i2_LCD_Code
                        i2__delay_ms
 ---------------------------------------------------------------------------------
 (12) i2__delay_ms                                         5     3      2      72
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (13) i2_LCD_Code                                          2     0      2    1384
                                              7 COMRAM     2     0      2
                     i2_LCD_4bitCode
                     i2_LCD_8bitCode
 ---------------------------------------------------------------------------------
 (14) i2_LCD_8bitCode                                      2     0      2     570
                                              5 COMRAM     2     0      2
               i2_LCD_8bitCodeNoWait
                         i2_LCD_Wait
 ---------------------------------------------------------------------------------
 (15) i2_LCD_8bitCodeNoWait                                5     3      2      92
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (14) i2_LCD_4bitCode                                      2     0      2     596
                                              5 COMRAM     2     0      2
               i2_LCD_4bitCodeNoWait
                         i2_LCD_Wait
 ---------------------------------------------------------------------------------
 (15) i2_LCD_Wait                                          0     0      0     430
                          i2___delay
                        i2__delay_us
 ---------------------------------------------------------------------------------
 (16) i2__delay_us                                         5     3      2      72
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (16) i2___delay                                           5     3      2     358
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (15) i2_LCD_4bitCodeNoWait                                5     3      2      92
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (11) _EUSART1_Receive_ISR                                 0     0      0       0
                                NULL *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART1_DefaultOverrunErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_DefaultFramingErrorHandler                  0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART1_DefaultErrorHandler                         0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (12) _EUSART1_RxDataHandler                               0     0      0       0
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART1_Read                                        1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _EUSART1_Write
   _LCD_Init
     _LCD_4bitCode
       _LCD_4bitCodeNoWait
       _LCD_Wait
         ___delay
         __delay_us
     _LCD_4bitCodeNoWait
     _LCD_8bitCode
       _LCD_8bitCodeNoWait
       _LCD_Wait
     _LCD_8bitCodeNoWait
     _LCD_SetCursorAt
       _LCD_Code
         _LCD_4bitCode
         _LCD_8bitCode
     __delay_ms
     __delay_us
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _sprintf
     _ADC_GetConversion (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 _INTERRUPT_InterruptManager (ROOT)
   NULL(Fake) *
   _PrintOnScreen *
     _EUSART1_Read
     _EUSART1_Receive_ISR
       NULL(Fake) *
       _EUSART1_DefaultErrorHandler *
         _EUSART1_RxDataHandler
       _EUSART1_DefaultFramingErrorHandler *
       _EUSART1_DefaultOverrunErrorHandler *
       _EUSART1_RxDataHandler *
     _LCD_Clear
       i2_LCD_Code
         i2_LCD_4bitCode
           i2_LCD_4bitCodeNoWait
           i2_LCD_Wait
             i2___delay
             i2__delay_us
         i2_LCD_8bitCode
           i2_LCD_8bitCodeNoWait
           i2_LCD_Wait
       i2__delay_ms
     _LCD_PrintStr
       _LCD_MoveCursorLeft
         i2_LCD_SetCursorAt
           i2_LCD_Code
       _LCD_MoveCursorRight
         i2_LCD_SetCursorAt
       _LCD_PrintChar
         _LCD_MoveCursorLeft
         _LCD_MoveCursorRight
         i2_LCD_Code
       _strlen
       i2_LCD_SetCursorAt
     _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7F      0       0      50        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5B      8C       5       87.5%
BITBIGSFR           80      0       0      48        0.0%
BITBANK14           80      0       0      32        0.0%
BANK14              80      0       0      33        0.0%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BIGRAM_1            60      0       0      47        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      55       1       90.4%
BITBIGSFR_1hhhl     1E      0       0      37        0.0%
BITBIGSFR_1llll     1E      0       0      46        0.0%
BITBIGSFR_1hhlh     10      0       0      40        0.0%
BITBIGSFR_1hhlh      C      0       0      41        0.0%
BITBIGSFR_1hhlh      B      0       0      39        0.0%
BITBIGSFR_1hhhh      A      0       0      36        0.0%
BITBIGSFR_1lllh      2      0       0      44        0.0%
BITBIGSFR_1hhlh      2      0       0      38        0.0%
BITBIGSFR_1lllh      1      0       0      45        0.0%
BITBIGSFR_1hhlh      1      0       0      42        0.0%
BITBIGSFR_1llh       1      0       0      43        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     101      49        0.0%
DATA                 0      0     101       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Sep 12 15:51:40 2023

                                            l50 224E                                              l52 2278  
                                            l46 2316                                              l55 2092  
                                            l80 2436                                              l58 20B0  
                                            l83 1F36                                              l92 2402  
                                            l86 23F0                                              l89 1DD6  
                                            l97 247C                                    ___awdiv@sign 0065  
                                           l101 137E                                             l110 1472  
                                           l112 1486                                             l222 23C8  
                                           l400 23A0                                             l225 24AE  
                                           l403 23B2                                             l165 178A  
                                           l432 246E                                             l426 2460  
                                           l266 21BE                                             l523 23DE  
                                           l435 2444                                             l541 21FE  
                                           l429 2452                                             l376 1D6A  
                                           l448 24BE                                             l538 21DC  
                                           l791 1B64                                             l778 19F2  
                                   i2___delay@i 0004                                             _abs 213C  
                                           _pad 1C08                                ??i2_LCD_4bitCode 0008  
                                  ___awmod@sign 0065                                             tosl 0FFD  
                                           wreg 0FE8                                      _TXSTA1bits 0FAC  
                                ??_LCD_4bitCode 0067                                ??i2_LCD_8bitCode 0008  
                                 _LCD_PrintChar 1C86                                     i2__delay_ms 2200  
                                   i2__delay_us 22B0                                    main@PotValue 00B6  
                                          ?_abs 0066                                            l1302 192C  
                                          l1310 206A                                            l1313 24C0  
                                          l1225 1EE6                                            l1251 1C84  
                                          l1270 134A                                            l1247 1C2C  
                                          l1256 11FA                                            l1290 217C  
                                          l1258 1202                                            l1259 1248  
                                          l1283 1E96                                            l1277 15BC  
                                          l3311 1F32                                            l1287 2174  
                                          l3231 1888                                            l3241 22E6  
                                          l3305 2428                                            l3313 1F34  
                                          l3321 192E                                            l3233 1892  
                                          l3401 1C08                                            l3315 1D6C  
                                          l3243 22F4                                            l3251 225A  
                                          l3307 1EE8                                            l3331 195C  
                                          l3323 1934                                            l3235 18B0  
                                          l3227 1862                                            l3411 1C52  
                                          l3403 1C18                                            l3317 1DD2  
                                          l3245 22F8                                            l3261 2428  
                                          l3421 23F2                                            l3309 1F2E  
                                          l3341 198A                                            l3333 1964  
                                          l3325 1942                                            l3237 18E6  
                                          l3229 1876                                            l3253 2024  
                                          l3413 1C70                                            l3405 1C24  
                                          l3501 1564                                            l3319 1DD4  
                                          l3247 2240                                            l3351 19C4  
                                          l3343 1992                                            l3335 1968  
                                          l3327 194A                                            l3415 213C  
                                          l3255 2032                                            l3407 1C38  
                                          l3431 11EE                                            l3423 11B2  
                                ??_LCD_8bitCode 0067                                            l3249 2254  
                                          l3521 16B4                                            l3601 137E  
                                          l3361 19EA                                            l3353 19C6  
                                          l3345 19A0                                            l3337 1970  
                                          l3329 194E                                            l3417 2158  
                                          l3257 2044                                            l3409 1C4C  
                                          l3441 123C                                            l3433 120A  
                                          l3425 11C8                                            l3505 157C  
                                          l3419 23E0                                            l3531 1736  
                                          l3523 16D0                                            l3515 206C  
                                          l3611 137E                                            l3355 19CC  
                                          l3347 19A6                                            l3339 1982  
                                          l3371 1AD0                                            l3259 204A  
                                          l3451 1294                                            l3443 1244  
                                          l3435 121A                                            l3427 11D8  
                                          l3533 174A                                            l3525 16EC  
                                          l3517 207A                                            l3621 13C4  
                                          l3613 138C                                            l3349 19BC  
                                          l3357 19D2                                            l3381 1B04  
                                          l3373 1AD4                                            l3365 1AB4  
                                          l3461 12EA                                            l3453 129A  
                                          l3445 1250                                            l3437 1220  
                                          l3429 11E0                                            l3509 158E  
                                          l3527 1706                                            l3519 208C  
                                          l3631 140A                                            l3623 13D2  
                                          l3615 139A                                            l3551 21A4  
                                          l3359 19E2                                            l3391 1B3E  
                                          l3383 1B0C                                            l3375 1AE2  
                                          l3367 1ABA                                            l3463 1304  
                                          l3455 12A0                                            l3447 125A  
                                          l3439 1230                                            l3473 2470  
                                          l3529 1722                                            l3633 142A  
                                          l3625 13E0                                            l3617 13A8  
                                          l3609 137E                                            l3481 2446  
                                          l3545 24BC                                            l3561 24A6  
                                          l3553 21AA                                            l3385 1B1A  
                                          l3393 1B44                                            l3377 1AEA  
                                          l3369 1AC8                                            l3465 1314  
                                          l3449 1260                                            l3457 12BC  
                                          l3641 1EB2                                            l3801 1BD4  
                                          l3539 175E                                            l3627 13EE  
                                          l3619 13B6                                            l3563 23CA  
                                          l3483 2462                                            l3571 1D12  
                                          l3555 21AC                                            l3547 217E  
                                          l3651 23B8                                            l3395 1B54  
                                          l3387 1B30                                            l3379 1AFC  
                                          l3467 131A                                            l3459 12D8  
                                          l3491 14CC                                            l3643 1EBA  
                                          l3803 1BDA                                            l3661 23AE  
                                          l3629 13FC                                            l3477 2438  
                                          l3581 1D34                                            l3573 1D16  
                                          l3565 1CFA                                            l3557 21AE  
                                          l3549 21A2                                            l3653 23BC  
                                          l3397 1B5C                                            l3389 1B38  
                                          l3469 132A                                            l3493 14D0  
                                          l3485 1488                                            l3645 1ED6  
                                          l3637 1E98                                            l3805 1BE0  
                                          ?_pad 0070                                            l3663 21C4  
                                          l3479 2454                                            l3583 1D46  
                                          l3575 1D1A                                            l3567 1CFC  
                                          l3559 21B4                                            l3655 23C0  
                                          l3495 14E0                                            l3487 14B0  
                                          l3591 1E6C                                            l3639 1EAA  
                                          l3807 1BE6                                            l3665 21D8  
                                          l3585 1D68                                            l3577 1D1E  
                                          l3569 1D0E                                            l3657 23C4  
                                          l3649 23B4                                            l3497 1500  
                                          l3489 14BE                                            l3593 1E8C  
                                          l3667 21DA                                            l3659 23A0  
                                          l3579 1D22                                            l3499 1520  
                                          l3587 1E42                                            l3669 21EA  
                                          l3597 134C                                            l3589 1E4E  
                                          l3599 135C                                            l3791 1B72  
                                          l3793 1B74                                            l3785 1B66  
                                          l3795 1B8C                                            l3787 1B6E  
                                          l3869 1774                                            l3797 1B92  
                                          l3789 1B70                                            l3799 1BB0  
                                          STR_1 1001                                            STR_2 1001  
                                          _LATA 0F89                                            u2230 1876  
                                          _LATB 0F8A                                            u2231 1872  
                                          _LATC 0F8B                                            u2400 1AE2  
                                          u2240 1888                                            _LATD 0F8C  
                                          u2305 1EF6                                            u2401 1ADE  
                                          u2241 1884                                            _LATE 0F8D  
                                          u2330 1942                                            u2410 1AFC  
                                          u2250 18B0                                            _LATF 0F8E  
                                          u2315 1D7A                                            u2331 193E  
                                          u2411 1AF8                                            u2251 18AC  
                                          _LATG 0F8F                                            u2340 195C  
                                          u2420 1B1A                                            u2260 18E6  
                                          u2500 11D8                                            _LATH 0F90  
                                          u2325 1DA4                                            u2341 1958  
                                          u2421 1B16                                            u2261 18E2  
                                          u2501 11D4                                            u2270 2316  
                                          u2350 1982                                            u2430 1B30  
                                          u2510 11EE                                            _LATJ 0F91  
                                          u2271 2312                                            u2351 197E  
                                          u2431 1B2C                                            u2511 11EA  
                                          u2280 2278                                            u2360 19A0  
                                          u2440 1B54                                            u2520 121A  
                                          u2600 1520                                            u2281 2274  
                                          u2361 199C                                            u2441 1B50  
                                          u2521 1216                                            u2601 151C  
                                          u2610 20B0                                            u2370 19BC  
                                          u2290 206A                                            u2450 1C18  
                                          u2530 1230                                            u2611 20AC  
                                          u2371 19B8                                            u2291 2066  
                                          u2451 1C14                                            u2531 122C  
                                          u2700 23AE                                            u2620 16D0  
                                          u2380 19E2                                            u2460 1C70  
                                          u2540 12D8                                            u2701 23AA  
                                          u2621 16CC                                            u2381 19DE  
                                          u2461 1C6C                                            u2541 12D4  
                                          u2710 21EA                                            u2630 16EC  
                                          u2390 1AC8                                            u2470 2158  
                                          u2550 12EA                                            u2711 21E6  
                                          u2631 16E8                                            u2391 1AC4  
                                          u2471 2154                                            u2551 12E6  
                                          u2640 1706                                            u2560 1304  
                                          u2480 11C4                                            u2641 1702  
                                          u2561 1300                                            u2481 11BE  
                                          u2650 1722                                            u2570 1314  
                                          u2490 11C6                                            u2651 171E  
                                          u2571 1310                                            u2580 14B0  
                                          u2660 1E8C                                            u2581 14AC  
                                          u2661 1E88                                            u2590 1500  
                                          u2591 14FC                                            u2907 2082  
                                          u2675 1368                                            u2676 136A  
                                          u2685 1372                                            u2686 1374  
                                          u2870 1B84                                            u2695 137C  
                                          u2871 1B7E                                            u2880 1BA2  
                                          u2697 137E                                            u2881 1B9C  
                                          u2876 1B86                                            u2886 1BA4  
                                          u2897 1BF2                                            i2l50 22BC  
                                          i2l52 22E4                                            i2l46 2346  
                                          i2l55 2220                                            i2l80 2498  
                                          i2l58 223E                                            i2l83 2022  
                                          i2l92 2426                                            i2l86 2414  
                                          i2l89 1E40                                            i2l97 248A  
                                 _EUSART1_Write 239C                                     ?i2_LCD_Code 0008  
                                 ?_LCD_PrintStr 0015                                            abs@a 0066  
                                          _dbuf 0100                                            _main 1B66  
                                          _dtoa 11B2                                     ?i2_LCD_Wait 0001  
                                 ?_EUSART1_Read 0001                                            _prec 00BD  
                                          pad@i 0077                                            pad@p 0074  
                                          fsr1h 0FE2                                            fsr2h 0FDA  
                                          indf1 0FE7                                            indf2 0FDF  
                                          fsr1l 0FE1                                            pad@w 0079  
                                          fsr2l 0FD9                                            btemp 0056  
                                          start 0082                  fp__EUSART1_DefaultErrorHandler 0000  
                                  ___param_bank 0000                                 _LCD_SetCursorAt 16B4  
                                         ??_abs 0068                                           ??_pad 0076  
                              __end_of_LCD_Code 247E                                __end_of_LCD_Init 1488  
                              __end_of_LCD_Wait 2438                           PrintOnScreen@received 0022  
                 __end_of_OSCILLATOR_Initialize 24B0                           _eusart1RxStatusBuffer 002C  
                               __end_of___delay 2318                                           ?_main 0001  
                                         ?_dtoa 007B                      LCD_MoveCursorRight@howMuch 0010  
                               __end_of___awdiv 19F4                                 __end_of___awmod 1B66  
                          i2_LCD_8bitCodeNoWait 1FD6                                 ___awdiv@divisor 0062  
                                         i2l120 1CF8                                           i2l132 16B2  
                                         i2l410 1AB2                                           i2l420 24B4  
                                         i2l148 2370                                           i2l165 1860  
                                         i2l414 239A                                           i2l423 24BA  
                                         i2l192 20F6                                           i2l417 24C2  
                                         i2l188 213A                                           i2l373 11B0  
                                         i2l457 0066                                           i2l397 1F86  
                                  LCD_Code@code 0067                                 ___awdiv@counter 0064  
                                  vfpfcnvrt@fmt 008A                                    __delay_ms@ms 0060  
                                         _PORTE 0F84                                           _TRISA 0F92  
                                         _TRISB 0F93                                           _TRISC 0F94  
                                         _TRISD 0F95                                           _TRISE 0F96  
                                         _TRISF 0F97                                           _TRISG 0F98  
                                         _TRISH 0F99                                           _TRISJ 0F9A  
                                  __delay_us@us 0060                                  ?_LCD_PrintChar 0001  
                                         _flags 00BF                                           _fputc 1862  
                                         _fputs 2024                                           pad@fp 0070  
                                         _width 00BB                                           _putch 24C0  
                                         dtoa@d 007D                                           dtoa@i 0086  
                                         dtoa@p 0081                                           dtoa@s 0085  
                                         dtoa@w 0083                                  ?_EUSART1_Write 0001  
                                         pclath 0FFA                                           pclatu 0FFB  
                                         tablat 0FF5                                  ??_LCD_PrintStr 0017  
                                ??_EUSART1_Read 0001                                           ttemp5 0057  
                                         ttemp6 005A                                           ttemp7 005E  
                                         status 0FD8                                           wtemp8 0057  
                               __end_of_sprintf 1EE8           fp__EUSART1_DefaultFramingErrorHandler 0000  
    __end_of_EUSART1_DefaultFramingErrorHandler 24C4            ??_EUSART1_DefaultFramingErrorHandler 0001  
           ?_EUSART1_DefaultFramingErrorHandler 0001              _EUSART1_DefaultFramingErrorHandler 24C2  
                               __initialization 1F88                      __end_of_EUSART1_Initialize 1D6C  
                                  __end_of_main 1C08                                    __end_of_dtoa 134C  
                            _LCD_4bitCodeNoWait 1D6C                     ?_INTERRUPT_InterruptManager 0001  
                                 i2__delay_ms@i 0004                           ?i2_LCD_8bitCodeNoWait 0001  
                                 i2__delay_us@i 0004                                          ??_main 00B4  
                                        ??_dtoa 007F                               __end_of_LCD_Clear 2372  
                                 __activetblptr 0003                             ?_LCD_4bitCodeNoWait 0060  
                                        _ADCON0 0FC2                                          _ADCON1 0FC1  
                                        _ADCON2 0FC0                                          ?_fputc 0060  
                                        ?_fputs 0069                                          _ADRESH 0FC4  
                                        _ADRESL 0FC3                                ___awdiv@dividend 0060  
                                        ?_putch 0001                                          i2l3001 1192  
                                        i2l3003 11A2                                          i2l2301 248C  
                                        i2l1319 22AE                                          i2l3141 004C  
                                        i2l2351 201E                                          i2l3135 0022  
                                        i2l2601 2372                                          i2l2345 248C  
                                        i2l2353 2020                                          i2l3137 0030  
                                        i2l2603 2382                                          i2l2355 1DD8  
                                        i2l2291 2324                                          i2l2347 1FD6  
                                        i2l3139 003E                                          i2l2605 2384  
                                        i2l2701 24B6                                          i2l2357 1E3C  
                                        i2l2293 2328                                          i2l2349 201A  
                                        i2l2607 2394                                          i2l2359 1E3E  
                                        i2l2295 22B0                                          i2l2375 2404  
                                        i2l2609 2398                                          i2l2289 2318  
                                        i2l2297 22C2                                          i2l2377 2416  
                                        i2l2801 2364                                          i2l2561 178C  
                                        i2l2299 22C6                                          i2l2571 180C  
                                        i2l2563 17A6                                          i2l2733 2200  
                                        i2l2573 1820                                          i2l2565 17C2  
                                        i2l2399 247E                                          i2l2735 220C  
                                        i2l2567 17DC                                          i2l2591 211E  
                                        i2l2671 1CB2                                          i2l2737 221C  
                                        i2l2569 17F8                                          i2l2593 2126  
                                        i2l2673 1CB8                                          i2l2665 1C88  
                                        i2l2681 227A                                          i2l2851 1A1E  
                                        i2l2579 1834                                          i2l2595 20B2  
                                        i2l2675 1CCA                                          i2l2667 1C98  
                                        i2l2683 2286                                          i2l2771 15CE  
                                        i2l2861 1A8E                                          i2l2853 1A3A  
                                        i2l2845 19F4                                          i2l2589 20F8  
                                        i2l2597 20DA                                          i2l2677 1CDC  
                                        i2l2669 1CAA                                          i2l2685 228A  
                                        i2l2781 1626                                          i2l2773 15DA  
                                        i2l2871 1F68                                          i2l2863 1AAE  
                                        i2l2855 1A48                                          i2l2847 1A02  
                                        i2l2599 20E2                                          i2l2679 1CEC  
                                        i2l2687 22A2                                          i2l2783 1638  
                                        i2l2775 15F8                                          i2l2791 166A  
                                        i2l2881 1F82                                          i2l2873 1F6A  
                                        i2l2865 1F38                                          i2l2857 1A56  
                                        i2l2849 1A10                                          i2l2793 168C  
                                        i2l2785 164A                                          i2l2777 160C  
                                        i2l2769 15BE                                          i2l2961 100A  
                                        i2l2883 1F84                                          i2l2875 1F7A  
                                        i2l2867 1F38                                          i2l2699 24B0  
                                        i2l2859 1A72                                          i2l2795 169E  
                                        i2l2787 165A                                          i2l2779 1614  
                                        i2l2971 1056                                          i2l2963 1010  
                                        i2l2877 1F7E                                          i2l2869 1F48  
                                        i2l2797 2348                                          i2l2789 1666  
                                        i2l2981 10A4                                          i2l2973 1072  
                                        i2l2965 1022                                          i2l2879 1F80  
                                        i2l2799 2354                                          i2l3871 115A  
                                        i2l2991 1120                                          i2l2975 1076  
                                        i2l2967 1036                                          i2l2983 10C4  
                                        i2l2959 1006                                          i2l3873 184A  
                                        i2l2977 1094                                          i2l2969 104A  
                                        i2l2987 10DA                                          i2l2995 1146  
                                        i2l2979 1098                                          i2l2989 10FC  
                                        i2l2997 1178                                          i2l2999 1182  
                                i2___delay@time 0001                                          _RCREG1 0FAE  
                                        _RCSTA1 0FAB                                          _OSCCON 0FD3  
                                        _SPBRG1 0FAF                                          _TXREG1 0FAD  
                                        _TXSTA1 0FAC                         __end_of_LCD_SetCursorAt 178C  
                          ??_LCD_4bitCodeNoWait 0062                            i2LCD_SetCursorAt@pos 000A  
                          i2LCD_SetCursorAt@row 000C                                    vfprintf@cfmt 009C  
                          __end_of_LCD_4bitCode 2404                                       ??___delay 0062  
                                     ??___awdiv 0064                                       ??___awmod 0064  
                      ?_EUSART1_SetErrorHandler 0060                            __end_of_LCD_8bitCode 23F2  
                                        clear_0 1FAE                                          clear_1 1FBA  
                                        clear_2 1FC6                                ___awdiv@quotient 0066  
                               ___awmod@divisor 0062                                          isa$std 0001  
                               ___awmod@counter 0064                                          pad@buf 0072  
              ??_EUSART1_SetOverrunErrorHandler 0063                 ?_EUSART1_SetOverrunErrorHandler 0060  
                                        dtoa@fp 007B                                          _strlen 227A  
                                        fputc@c 0060                                 ??_LCD_PrintChar 0014  
                             __end_ofi2___delay 2348                                          fputs@c 006D  
                                        fputs@i 006E                                    __pdataCOMRAM 0047  
                                        fputs@s 0069                                  _LCD_isCursorOn 0049  
                              LCD_4bitCode@code 0065                                    __mediumconst 0000  
                                        tblptrh 0FF7                                          tblptrl 0FF6  
                                        tblptru 0FF8                        ADC_GetConversion@channel 0064  
                                        putch@c 0001                                __end_of_vfprintf 1E98  
                               ??_EUSART1_Write 0060                                       ??_sprintf 00A6  
                               _eusart1RxBuffer 0034                               _SYSTEM_Initialize 23B4  
                     LCD_MoveCursorLeft@howMuch 0010                                      __accesstop 0060  
                                     ?_LCD_Code 0067                         __end_of__initialization 1FCC  
                                     ?_LCD_Init 0001                           __end_of_PrintOnScreen 11B2  
                                     ?_LCD_Wait 0001                              ?_SYSTEM_Initialize 0001  
                                 ___rparam_used 0001                   __end_of_EUSART1_RxDataHandler 239C  
                                __pcstackCOMRAM 0001                             ??_SYSTEM_Initialize 0063  
                                 __end_of_fputc 192E                                   __end_of_fputs 206C  
                        ??i2_LCD_8bitCodeNoWait 0003                                   __end_of_putch 24C2  
                          __end_of_LCD_PrintStr 16B4                            __end_of_EUSART1_Read 1F88  
                   __end_of_EUSART1_Receive_ISR 1AB4                                  i2LCD_Code@code 0008  
                        LCD_8bitCodeNoWait@code 0060                                  i2__delay_ms@ms 0001  
                                  ?i2__delay_ms 0001                                    ?i2__delay_us 0001  
                                i2__delay_us@us 0001                                         ??_fputc 0064  
                     __end_of_SYSTEM_Initialize 23CA                                         ??_fputs 006D  
                                       ??_putch 0060                                   _eusart1RxHead 0046  
                                 _eusart1RxTail 0045                                      __pbssBANK0 00BB  
                                    __pbssBANK1 0100                 ??_EUSART1_SetRxInterruptHandler 0063  
                                  ??i2_LCD_Code 000A                                      ??_LCD_Code 0069  
                                    ??_LCD_Init 006F                                    ??i2_LCD_Wait 0006  
                                    ??_LCD_Wait 0065                                      __pnvCOMRAM 0053  
                              ?_LCD_SetCursorAt 0069                 __end_of_EUSART1_SetErrorHandler 2470  
                                 LCD_PrintStr@i 001C                                         ?_strlen 0001  
        __end_of_EUSART1_SetFramingErrorHandler 2462                  _EUSART1_SetFramingErrorHandler 2454  
                      i2LCD_4bitCodeNoWait@code 0001                               __end_of__delay_ms 20B2  
                             __end_of__delay_us 227A                              __end_ofi2_LCD_Code 248C  
                            __end_ofi2_LCD_Wait 249A                    ?_EUSART1_DefaultErrorHandler 0001  
                                       _OSCTUNE 0F9B                                         _SPBRGH1 0F7F  
                           _LCD_MoveCursorRight 20B2                    __end_ofi2_LCD_4bitCodeNoWait 1E42  
                    __end_of_LCD_MoveCursorLeft 213C                      __end_of_LCD_8bitCodeNoWait 1F38  
                               LCD_PrintStr@str 0015                            _ADC_InterruptHandler 003C  
                                       __Hparam 0000                                         __Lparam 0000  
                          ?_LCD_MoveCursorRight 0010                                         ___delay 22E6  
                                       ___awdiv 192E                                         ___awmod 1AB4  
                                     ?_vfprintf 0096                                    __psmallconst 1000  
                                       __pcinit 1F88                                         __ramtop 1000  
                                       __ptext0 1B66                                         __ptext1 1E98  
                                       __ptext2 1E42                                         __ptext3 1488  
                                       __ptext4 11B2                                         __ptext5 1C08  
                                       __ptext6 2024                                         __ptext7 1862  
                                       __ptext8 24C0                                         __ptext9 213C  
                                       _command 00C0                           _OSCILLATOR_Initialize 24A6  
                              ___awmod@dividend 0060                                  PrintOnScreen@i 0024  
                            _EUSART1_Initialize 1CFA                        ??_PIN_MANAGER_Initialize 0060  
                               _LCD_isDisplayOn 004B                                       _LCD_Clear 2348  
                 ??_EUSART1_DefaultErrorHandler 0001                                    _LCD_4bitCode 23F2  
                                       _sprintf 1E98                            end_of_initialization 1FCC  
                           ?_EUSART1_Initialize 0001                                    _LCD_8bitCode 23E0  
                               _LCD_isIncrement 004D                                         fputc@fp 0062  
                   _EUSART1_OverrunErrorHandler 00E6                                         fputs@fp 006B  
         __end_of_EUSART1_SetRxInterruptHandler 2446                   _EUSART1_SetRxInterruptHandler 2438  
                             __end_of_vfpfcnvrt 15BE                           ??_LCD_MoveCursorRight 0012  
                                       postdec1 0FE5                                         postdec2 0FDD  
                                       postinc0 0FEE                                         postinc1 0FE6  
                                       postinc2 0FDE                                vfpfcnvrt@convarg 0090  
                                    ??_vfprintf 009C                            ??_EUSART1_Initialize 0063  
                                       strlen@a 0003                                         strlen@s 0001  
                                     _PORTBbits 0F81                                       _PORTEbits 0F84  
                                     _PORTGbits 0F86                                       _PORTHbits 0F87  
                                     _PORTJbits 0F88                                       _TRISGbits 0F98  
                                     _TRISHbits 0F99                                LCD_8bitCode@code 0065  
                                    ?_LCD_Clear 0001                          LCD_PrintChar@inputChar 0014  
                                     i2___delay 2318                             EUSART1_Write@txData 0060  
                                  _LCD_PrintStr 15BE                                    _EUSART1_Read 1F38  
                  __end_of_INTERRUPT_Initialize 24C0                                     vfpfcnvrt@ap 008C  
                                   vfpfcnvrt@cp 0094                            i2_LCD_4bitCodeNoWait 1DD8  
                                   __delay_ms@i 0063                                     vfpfcnvrt@fp 0088  
                                   __delay_us@i 0063                                   __pidataCOMRAM 249A  
                                _ADC_Initialize 23CA                          ?_OSCILLATOR_Initialize 0001  
                                __end_of_strlen 22B0                             start_initialization 1F88  
                         __end_of_LCD_PrintChar 1CFA                                     __end_of_abs 217E  
                                   __end_of_pad 1C86                                      ?i2___delay 0001  
 EUSART1_SetRxInterruptHandler@interruptHandler 0060                           __end_of_EUSART1_Write 23B4  
                            i2LCD_4bitCode@code 0006                                     vfprintf@fmt 0098  
                         _EUSART1_RxDataHandler 2372                  ?_EUSART1_SetRxInterruptHandler 0060  
                        __end_of_ADC_Initialize 23E0                           ?i2_LCD_4bitCodeNoWait 0001  
                          _LCD_isCursorBlinking 003F                                        ??_strlen 0003  
                                     ___delay@i 0063                                  _eusart1RxCount 0044  
                              fp__PrintOnScreen 0000                                     __pbssCOMRAM 002C  
             _EUSART1_RxDefaultInterruptHandler 0053                                   __pcstackBANK0 0060  
                                   ??_LCD_Clear 000A                                       __delay_ms 206C  
                                     __delay_us 2240                            LCD_PrintStr@initialX 0018  
                          LCD_PrintStr@initialY 001A                                  i2_LCD_4bitCode 2416  
              ??_EUSART1_SetFramingErrorHandler 0063                 ?_EUSART1_SetFramingErrorHandler 0060  
                                i2_LCD_8bitCode 2404                                       __pnvBANK0 00E3  
                            _LCD_isCursorMoving 0047                          _PIN_MANAGER_Initialize 217E  
                                     _dtoa$2023 007F                                       __pintcode 0008  
                                      ?___delay 0060                                        ?___awdiv 0060  
                                      ?___awmod 0060                                 ?_ADC_Initialize 0001  
                  ??_INTERRUPT_InterruptManager 0026                              _LCD_MoveCursorLeft 20F8  
                      i2LCD_8bitCodeNoWait@code 0001                              _LCD_8bitCodeNoWait 1EE8  
                                   __smallconst 1000                                        _BAUDCON1 0F7E  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 24B6  
          ??_EUSART1_DefaultOverrunErrorHandler 0001             ?_EUSART1_DefaultOverrunErrorHandler 0001  
            _EUSART1_DefaultOverrunErrorHandler 24B0                            _EUSART1_ErrorHandler 00E3  
                       _EUSART1_SetErrorHandler 2462                             ?_LCD_MoveCursorLeft 0010  
                                    ?__delay_ms 0060                                      ?__delay_us 0060  
                           ?_LCD_8bitCodeNoWait 0060                                     ??i2___delay 0003  
                                      ?_sprintf 009E                          __end_ofi2_LCD_4bitCode 2428  
                          _INTERRUPT_Initialize 24BC                          __end_ofi2_LCD_8bitCode 2416  
                                      _LCD_Code 2470                                        _LCD_Init 134C  
                                      _LCD_Wait 2428         EUSART1_SetErrorHandler@interruptHandler 0060  
                              PrintOnScreen@len 0020                                   _PrintOnScreen 1006  
                                      _LCD_posX 0051                                        _LCD_posY 004F  
                                      _PIE1bits 0F9D                                        i2u113_40 2346  
                                      i2u113_41 2342                                        i2u114_40 22E4  
                                      i2u114_41 22E0                                        i2u115_45 1FE2  
                                      i2u116_45 1DE4                                        i2u220_48 0052  
                                      i2u220_49 0066                                        i2u117_45 1E0E  
                                      i2u143_40 17A6                                        i2u143_41 17A2  
                                      i2u144_40 17C2                                        i2u160_40 1CAA  
                                      i2u144_41 17BE                                        i2u160_41 1CA6  
                                      i2u145_40 17DC                                        i2u161_40 1CCA  
                                      i2u217_40 0030                                        i2u145_41 17D8  
                                      i2u161_41 1CC6                                        i2u217_41 002C  
                                      i2u146_40 17F8                                        i2u162_40 1CDC  
                                      i2u218_40 003E                                        i2u146_41 17F4  
                                      i2u162_41 1CD8                                        i2u218_41 003A  
                                      i2u147_40 211E                                        i2u163_40 22A2  
                                      i2u219_40 004C                                        i2u147_41 211A  
                                      i2u163_41 229E                                        i2u219_41 0048  
                                      i2u180_40 1A48                                        i2u148_40 20DA  
                                      i2u180_41 1A44                                        i2u148_41 20D6  
                                      i2u149_40 2394                                        i2u173_40 15F8  
                                      i2u149_41 2390                                        i2u173_41 15F4  
                                      i2u182_40 1A8E                                        i2u181_48 1A5C  
                                      i2u174_40 1638                                        i2u190_40 1022  
                                      i2u182_41 1A8A                                        i2u181_49 1A72  
                                      i2u174_41 1634                                        i2u190_41 101E  
                                      i2u167_40 223E                                        i2u175_40 164A  
                                      i2u191_40 1036                                        i2u167_41 223A  
                                      i2u175_41 1646                                        i2u191_41 1032  
                                      i2u184_40 1F48                                        i2u183_48 1A94  
                                      i2u176_40 168C                                        i2u192_40 1094  
                                      i2u184_41 1F44                                        i2u183_49 1AAA  
                                      i2u176_41 1688                                        i2u192_41 1090  
                                      i2u185_40 1F7A                                        i2u177_40 169E  
                                      i2u193_40 10D6                                        i2u185_41 1F76  
                                      i2u177_41 169A                                        i2u193_41 10D2  
                                      _PIR1bits 0F9E                                        i2u178_40 1A10  
                                      i2u194_40 10EC                                        i2u178_41 1A0C  
                                      i2u194_41 10E4                                        i2u291_47 2212  
                                      i2u179_48 1A24                                        i2u196_40 110E  
                                      i2u195_48 10EE                                        i2u179_49 1A3A  
                                      i2u196_41 1106                                        i2u198_40 1132  
                                      i2u197_48 1110                                        i2u198_41 112A  
                                      i2u199_48 1134                            ??_LCD_MoveCursorLeft 0012  
                        ?_EUSART1_RxDataHandler 0001                                        _RCONbits 0FD0  
                          ??_LCD_8bitCodeNoWait 0062                          ??i2_LCD_4bitCodeNoWait 0003  
                             i2_LCD_SetCursorAt 178C                                       _vfpfcnvrt 1488  
                                    _ADCON0bits 0FC2                                      _ADCON1bits 0FC1  
                            ?i2_LCD_SetCursorAt 000A                             PrintOnScreen@length 0023  
                           ??i2_LCD_SetCursorAt 000E                                 ?i2_LCD_4bitCode 0006  
                                     copy_data0 1F9C                           ?_INTERRUPT_Initialize 0001  
                                   _LCD_isShift 0041                                 ?i2_LCD_8bitCode 0006  
                         EUSART1_Read@readValue 0001                                  ?_PrintOnScreen 0001  
                   __end_of_LCD_MoveCursorRight 20F8                                        __Hrparam 0000  
                            LCD_SetCursorAt@pos 0069                              LCD_SetCursorAt@row 006B  
                                    vfprintf@ap 009A                                        __Lrparam 0000  
                                    vfprintf@fp 0096                               _ADC_GetConversion 21C0  
                     __end_ofi2_LCD_SetCursorAt 1862                         ??_OSCILLATOR_Initialize 0060  
                            ?_ADC_GetConversion 0060                                      ?_vfpfcnvrt 0088  
                     ??_EUSART1_SetErrorHandler 0063             __end_of_EUSART1_DefaultErrorHandler 24BC  
                   _EUSART1_DefaultErrorHandler 24B6                             ??_ADC_GetConversion 0062  
                                    sprintf@fmt 00A0                               ??_LCD_SetCursorAt 006D  
                                 ??i2__delay_ms 0003                                   ??i2__delay_us 0003  
                                   ??__delay_ms 0062                                     ??__delay_us 0062  
                                      __ptext10 1AB4                                        __ptext11 192E  
                                      __ptext20 2462                                        __ptext12 23B4  
                                      __ptext21 23CA                                        __ptext13 217E  
                                      __ptext30 2240                                        __ptext22 134C  
                                      __ptext14 24A6                                        __ptext31 22E6  
                                      __ptext23 206C                                        __ptext15 24BC  
                                      __ptext40 20B2                                        __ptext32 1D6C  
                                      __ptext24 16B4                                        __ptext16 1CFA  
                                      __ptext41 20F8                                        __ptext33 239C  
                                      __ptext25 2470                                        __ptext17 2438  
                                      __ptext50 22B0                                        __ptext42 178C  
                                      __ptext34 21C0                                        __ptext26 23E0  
                                      __ptext18 2446                                        __ptext51 2318  
                                      __ptext43 2348                                        __ptext27 1EE8  
                                      __ptext19 2454                                        __ptext52 1DD8  
                                      __ptext44 2200                                        __ptext36 1006  
                                      __ptext28 23F2                                        __ptext53 19F4  
                                      __ptext45 247E                                        __ptext37 15BE  
                                      __ptext29 2428                                        __ptext54 24B0  
                                      __ptext46 2404                                        __ptext38 227A  
                                      __ptext55 24C2                                        __ptext47 1FD6  
                                      __ptext39 1C86                                        __ptext56 24B6  
                                      __ptext48 2416                                        __ptext57 2372  
                                      __ptext49 248C                                        __ptext58 1F38  
                                      __ptext59 0000                              i2LCD_8bitCode@code 0006  
                    __end_of_LCD_4bitCodeNoWait 1DD8                       __end_of_ADC_GetConversion 2200  
EUSART1_SetOverrunErrorHandler@interruptHandler 0060                                        isa$xinst 0000  
                                      int$flags 0056                                        _vfprintf 1E42  
            __end_of_INTERRUPT_InterruptManager 0082                      _INTERRUPT_InterruptManager 0008  
                   _EUSART1_FramingErrorHandler 00E9                             _EUSART1_Receive_ISR 19F4  
                                    _INTCONbits 0FF2                          ??_INTERRUPT_Initialize 0060  
                               ??_PrintOnScreen 001E                                        intlevel2 0000  
                                     sprintf@ap 00A6                            ?_EUSART1_Receive_ISR 0001  
                  __end_ofi2_LCD_8bitCodeNoWait 2024                                      i2_LCD_Code 247E  
                       ?_PIN_MANAGER_Initialize 0001                             __end_ofi2__delay_ms 2240  
                                    i2_LCD_Wait 248C                             __end_ofi2__delay_us 22E6  
        __end_of_EUSART1_SetOverrunErrorHandler 2454                  _EUSART1_SetOverrunErrorHandler 2446  
                                    _RCSTA1bits 0FAB                                ??_ADC_Initialize 0060  
EUSART1_SetFramingErrorHandler@interruptHandler 0060                                     ??_vfpfcnvrt 008E  
                            _eusart1RxLastError 0043                                        sprintf@f 00A8  
                                      sprintf@s 009E                          LCD_4bitCodeNoWait@code 0060  
                                 ?_LCD_4bitCode 0065                                    ___delay@time 0060  
                                 ?_LCD_8bitCode 0065                           ??_EUSART1_Receive_ISR 0001  
                __end_of_PIN_MANAGER_Initialize 21C0                         ??_EUSART1_RxDataHandler 0001  
